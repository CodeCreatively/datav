{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sunfei/Downloads/website/src/components/resource-card.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { Badge, Box, Heading, Link, Text, useColorModeValue, Wrap, WrapItem } from \"@chakra-ui/react\";\nimport * as React from \"react\";\n\nfunction ResourceCard(props) {\n  const {\n    data\n  } = props,\n        rest = _objectWithoutProperties(props, [\"data\"]);\n\n  const {\n    heading,\n    author,\n    description,\n    url,\n    tags\n  } = data;\n  return /*#__PURE__*/_jsxDEV(Box, _objectSpread(_objectSpread({}, rest), {}, {\n    maxW: \"360px\",\n    children: [/*#__PURE__*/_jsxDEV(Wrap, {\n      className: \"algolia-exclude\",\n      spacing: \"3\",\n      mb: \"2\",\n      align: \"center\",\n      children: tags === null || tags === void 0 ? void 0 : tags.map((tag, index) => /*#__PURE__*/_jsxDEV(WrapItem, {\n        children: /*#__PURE__*/_jsxDEV(Badge, {\n          as: \"a\",\n          rel: \"tag\",\n          color: useColorModeValue(\"teal.600\", \"teal.400\"),\n          textTransform: \"uppercase\",\n          fontSize: \"xs\",\n          fontWeight: \"bold\",\n          children: tag\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Heading, {\n      as: \"h3\",\n      size: \"sm\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        isExternal: true,\n        href: url,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"content\",\n          children: heading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      fontSize: \"sm\",\n      color: \"gray.500\",\n      mt: \"2\",\n      children: [\"by \", author]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      lineHeight: \"tall\",\n      py: 2,\n      opacity: 0.8,\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\nexport default ResourceCard;","map":{"version":3,"sources":["/Users/sunfei/Downloads/website/src/components/resource-card.tsx"],"names":["Badge","Box","Heading","Link","Text","useColorModeValue","Wrap","WrapItem","React","ResourceCard","props","data","rest","heading","author","description","url","tags","map","tag","index"],"mappings":";;;;;;;;;;;;;AAAA,SACEA,KADF,EAEEC,GAFF,EAIEC,OAJF,EAKEC,IALF,EAMEC,IANF,EAOEC,iBAPF,EAQEC,IARF,EASEC,QATF,QAUO,kBAVP;AAWA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAeA,SAASC,YAAT,CAAsBC,KAAtB,EAAgD;AAC9C,QAAM;AAAEC,IAAAA;AAAF,MAAoBD,KAA1B;AAAA,QAAiBE,IAAjB,4BAA0BF,KAA1B;;AACA,QAAM;AAAEG,IAAAA,OAAF;AAAWC,IAAAA,MAAX;AAAmBC,IAAAA,WAAnB;AAAgCC,IAAAA,GAAhC;AAAqCC,IAAAA;AAArC,MAA8CN,IAApD;AAEA,sBACE,QAAC,GAAD,kCAASC,IAAT;AAAe,IAAA,IAAI,EAAC,OAApB;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAkC,MAAA,OAAO,EAAC,GAA1C;AAA8C,MAAA,EAAE,EAAC,GAAjD;AAAqD,MAAA,KAAK,EAAC,QAA3D;AAAA,gBACGK,IADH,aACGA,IADH,uBACGA,IAAI,CAAEC,GAAN,CAAU,CAACC,GAAD,EAAMC,KAAN,kBACT,QAAC,QAAD;AAAA,+BACE,QAAC,KAAD;AACE,UAAA,EAAE,EAAC,GADL;AAEE,UAAA,GAAG,EAAC,KAFN;AAGE,UAAA,KAAK,EAAEf,iBAAiB,CAAC,UAAD,EAAa,UAAb,CAH1B;AAIE,UAAA,aAAa,EAAC,WAJhB;AAKE,UAAA,QAAQ,EAAC,IALX;AAME,UAAA,UAAU,EAAC,MANb;AAAA,oBAQGc;AARH;AAAA;AAAA;AAAA;AAAA;AADF,SAAeC,KAAf;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAkBE,QAAC,OAAD;AAAS,MAAA,EAAE,EAAC,IAAZ;AAAiB,MAAA,IAAI,EAAC,IAAtB;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,UAAU,MAAhB;AAAiB,QAAA,IAAI,EAAEJ,GAAvB;AAAA,+BACE;AAAM,UAAA,SAAS,EAAC,SAAhB;AAAA,oBAA2BH;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAlBF,eAuBE,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAC,IAAf;AAAoB,MAAA,KAAK,EAAC,UAA1B;AAAqC,MAAA,EAAE,EAAC,GAAxC;AAAA,wBACMC,MADN;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBF,eA0BE,QAAC,IAAD;AAAM,MAAA,UAAU,EAAC,MAAjB;AAAwB,MAAA,EAAE,EAAE,CAA5B;AAA+B,MAAA,OAAO,EAAE,GAAxC;AAAA,gBACGC;AADH;AAAA;AAAA;AAAA;AAAA,YA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD;;AAED,eAAeN,YAAf","sourcesContent":["import {\n  Badge,\n  Box,\n  BoxProps,\n  Heading,\n  Link,\n  Text,\n  useColorModeValue,\n  Wrap,\n  WrapItem,\n} from \"@chakra-ui/react\"\nimport * as React from \"react\"\n\nexport interface Resource {\n  heading: string\n  type: \"blog\" | \"talk\" | \"video\"\n  description: string\n  url: string\n  author: string\n  tags?: string[]\n}\n\ninterface ResourceCardProps extends BoxProps {\n  data: Resource\n}\n\nfunction ResourceCard(props: ResourceCardProps) {\n  const { data, ...rest } = props\n  const { heading, author, description, url, tags } = data\n\n  return (\n    <Box {...rest} maxW=\"360px\">\n      <Wrap className=\"algolia-exclude\" spacing=\"3\" mb=\"2\" align=\"center\">\n        {tags?.map((tag, index) => (\n          <WrapItem key={index}>\n            <Badge\n              as=\"a\"\n              rel=\"tag\"\n              color={useColorModeValue(\"teal.600\", \"teal.400\")}\n              textTransform=\"uppercase\"\n              fontSize=\"xs\"\n              fontWeight=\"bold\"\n            >\n              {tag}\n            </Badge>\n          </WrapItem>\n        ))}\n      </Wrap>\n\n      <Heading as=\"h3\" size=\"sm\">\n        <Link isExternal href={url}>\n          <span className=\"content\">{heading}</span>\n        </Link>\n      </Heading>\n      <Text fontSize=\"sm\" color=\"gray.500\" mt=\"2\">\n        by {author}\n      </Text>\n      <Text lineHeight=\"tall\" py={2} opacity={0.8}>\n        {description}\n      </Text>\n    </Box>\n  )\n}\n\nexport default ResourceCard\n"]},"metadata":{},"sourceType":"module"}