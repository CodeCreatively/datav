{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/sunfei/Downloads/website/pages/docs/feedback/alert.mdx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport Layout from '/Users/sunfei/Downloads/website/layouts/index';\nexport var frontMatter = {\n  title: 'Alert',\n  \"package\": '@chakra-ui/alert',\n  image: 'components/alert.svg',\n  description: 'Alerts are used to communicate a state that affects a system, feature or page.',\n  slug: '/docs/feedback/alert',\n  lastEdited: undefined,\n  editUrl: 'https://github.com/chakra-ui/chakra-ui/edit/develop/website/pages/docs/feedback/alert.mdx',\n  author: undefined,\n  tags: undefined,\n  __resourcePath: 'docs/feedback/alert.mdx',\n  __scans: {},\n  layout: 'index'\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", _objectSpread(_objectSpread({}, props), {}, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 14\n      }\n    }));\n  };\n};\n\nvar ComponentLinks = makeShortcode(\"ComponentLinks\");\n_c = ComponentLinks;\nvar PropsTable = makeShortcode(\"PropsTable\");\n_c2 = PropsTable;\nvar layoutProps = {\n  frontMatter: frontMatter\n};\nvar MDXLayout = Layout;\nexport default function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _objectSpread(_objectSpread(_objectSpread({}, layoutProps), props), {}, {\n    components: components,\n    mdxType: \"MDXLayout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 10\n    }\n  }), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, \"Alerts are used to communicate a state that affects a system, feature or page.\"), mdx(ComponentLinks, {\n    theme: {\n      componentName: \"alert\"\n    },\n    github: {\n      \"package\": \"alert\"\n    },\n    npm: {\n      \"package\": \"@chakra-ui/alert\"\n    },\n    mdxType: \"ComponentLinks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, mdx(\"carbon-ad\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 8\n    }\n  })), mdx(\"h2\", _objectSpread(_objectSpread({}, {\n    \"id\": \"import\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }), \"Import\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, \"Chakra UI exports 4 alert related components.\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 27\n    }\n  }, \"Alert\"), \": The wrapper for alert components.\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 27\n    }\n  }, \"AlertIcon\"), \": The visual icon for the alert that changes based on the \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 143\n    }\n  }, \"status\"), \"\\nprop.\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 27\n    }\n  }, \"AlertTitle\"), \": The title of the alert to be announced by screen readers.\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 27\n    }\n  }, \"AlertDescription\"), \": The description of the alert to be announced by screen\\nreaders.\")), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 10\n    }\n  }), \"import {\\n  Alert,\\n  AlertIcon,\\n  AlertTitle,\\n  AlertDescription,\\n} from \\\"@chakra-ui/react\\\"\\n\")), mdx(\"h2\", _objectSpread(_objectSpread({}, {\n    \"id\": \"usage\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }), \"Usage\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 10\n    }\n  }), \"<Alert status=\\\"error\\\">\\n  <AlertIcon />\\n  <AlertTitle mr={2}>Your browser is outdated!</AlertTitle>\\n  <AlertDescription>Your Chakra experience may be degraded.</AlertDescription>\\n  <CloseButton position=\\\"absolute\\\" right=\\\"8px\\\" top=\\\"8px\\\" />\\n</Alert>\\n\")), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"status\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }), \"Status\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, \"Change the status of the alerts by passing the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 59\n    }\n  }, \"status\"), \" prop. This affects the\\ncolor scheme and icon used. Alert supports \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 46\n    }\n  }, \"error\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 101\n    }\n  }, \"success\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 158\n    }\n  }, \"warning\"), \", and\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 3\n    }\n  }, \"info\"), \" statuses.\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 10\n    }\n  }), \"<Stack spacing={3}>\\n  <Alert status=\\\"error\\\">\\n    <AlertIcon />\\n    There was an error processing your request\\n  </Alert>\\n\\n  <Alert status=\\\"success\\\">\\n    <AlertIcon />\\n    Data uploaded to the server. Fire on!\\n  </Alert>\\n\\n  <Alert status=\\\"warning\\\">\\n    <AlertIcon />\\n    Seems your account is about expire, upgrade now\\n  </Alert>\\n\\n  <Alert status=\\\"info\\\">\\n    <AlertIcon />\\n    Chakra is going live on August 30th. Get ready!\\n  </Alert>\\n</Stack>\\n\")), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"variant\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }), \"Variant\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 8\n    }\n  }, \"Alert\"), \" has 4 variant styles you can use. Pass the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 105\n    }\n  }, \"variant\"), \" prop and use either\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 3\n    }\n  }, \"subtle\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 59\n    }\n  }, \"solid\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 114\n    }\n  }, \"left-accent\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 177\n    }\n  }, \"top-accent\"), \".\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 10\n    }\n  }), \"<Stack spacing={3}>\\n  <Alert status=\\\"success\\\" variant=\\\"subtle\\\">\\n    <AlertIcon />\\n    Data uploaded to the server. Fire on!\\n  </Alert>\\n\\n  <Alert status=\\\"success\\\" variant=\\\"solid\\\">\\n    <AlertIcon />\\n    Data uploaded to the server. Fire on!\\n  </Alert>\\n\\n  <Alert status=\\\"success\\\" variant=\\\"left-accent\\\">\\n    <AlertIcon />\\n    Data uploaded to the server. Fire on!\\n  </Alert>\\n\\n  <Alert status=\\\"success\\\" variant=\\\"top-accent\\\">\\n    <AlertIcon />\\n    Data uploaded to the server. Fire on!\\n  </Alert>\\n</Stack>\\n\")), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"composition\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }\n  }), \"Composition\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 8\n    }\n  }, \"Alert\"), \" ships with smaller components to allow for flexibility in creating all\\nkinds of layouts. Here's an example of a custom alert style and layout:\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 10\n    }\n  }), \"<Alert\\n  status=\\\"success\\\"\\n  variant=\\\"subtle\\\"\\n  flexDirection=\\\"column\\\"\\n  alignItems=\\\"center\\\"\\n  justifyContent=\\\"center\\\"\\n  textAlign=\\\"center\\\"\\n  height=\\\"200px\\\"\\n>\\n  <AlertIcon boxSize=\\\"40px\\\" mr={0} />\\n  <AlertTitle mt={4} mb={1} fontSize=\\\"lg\\\">\\n    Application submitted!\\n  </AlertTitle>\\n  <AlertDescription maxWidth=\\\"sm\\\">\\n    Thanks for submitting your application. Our team will get back to you soon.\\n  </AlertDescription>\\n</Alert>\\n\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 8\n    }\n  }, \"Alert\"), \" can also incorporate other Chakra components. Here's an example of an\\nalert with wrapping description text:\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 10\n    }\n  }), \"<Alert status=\\\"success\\\">\\n  <AlertIcon />\\n  <Box flex=\\\"1\\\">\\n    <AlertTitle>Success!</AlertTitle>\\n    <AlertDescription display=\\\"block\\\">\\n      Your application has been received. We will review your application and\\n      respond within the next 48 hours.\\n    </AlertDescription>\\n  </Box>\\n  <CloseButton position=\\\"absolute\\\" right=\\\"8px\\\" top=\\\"8px\\\" />\\n</Alert>\\n\")), mdx(\"h2\", _objectSpread(_objectSpread({}, {\n    \"id\": \"props\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 5\n    }\n  }), \"Props\"), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"alert-props\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 5\n    }\n  }), \"Alert Props\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 5\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 8\n    }\n  }, \"Alert\"), \" is the wrapper for \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 81\n    }\n  }, \"Alert\"), \" component. It composes the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 162\n    }\n  }, \"Flex\"), \" component.\"), mdx(PropsTable, {\n    of: \"Alert\",\n    mdxType: \"PropsTable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 5\n    }\n  }), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"alerticon-props\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 5\n    }\n  }), \"AlertIcon Props\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 5\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 8\n    }\n  }, \"AlertIcon\"), \" composes \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 75\n    }\n  }, \"Icon\"), \" and changes the icon based on the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 162\n    }\n  }, \"status\"), \" prop.\"), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"alerttitle-props\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 5\n    }\n  }), \"AlertTitle Props\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 5\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 8\n    }\n  }, \"AlertTitle\"), \" composes the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 80\n    }\n  }, \"Box\"), \" component.\"), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"alertdescription-props\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 5\n    }\n  }), \"AlertDescription Props\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 5\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 8\n    }\n  }, \"AlertDescription\"), \" composes the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 86\n    }\n  }, \"Box\"), \" component.\"));\n}\n_c3 = MDXContent;\n;\nMDXContent.isMDXComponent = true;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ComponentLinks\");\n$RefreshReg$(_c2, \"PropsTable\");\n$RefreshReg$(_c3, \"MDXContent\");","map":{"version":3,"sources":["/Users/sunfei/Downloads/website/pages/docs/feedback/alert.mdx"],"names":["React","mdx","Layout","frontMatter","title","image","description","slug","lastEdited","undefined","editUrl","author","tags","__resourcePath","__scans","layout","makeShortcode","name","MDXDefaultShortcode","props","console","warn","ComponentLinks","PropsTable","layoutProps","MDXLayout","MDXContent","components","componentName","isMDXComponent"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport Layout, {  } from '/Users/sunfei/Downloads/website/layouts/index'\nexport const frontMatter = {\n  title: 'Alert',\n  package: '@chakra-ui/alert',\n  image: 'components/alert.svg',\n  description: 'Alerts are used to communicate a state that affects a system, feature or page.',\n  slug: '/docs/feedback/alert',\n  lastEdited: undefined,\n  editUrl: 'https://github.com/chakra-ui/chakra-ui/edit/develop/website/pages/docs/feedback/alert.mdx',\n  author: undefined,\n  tags: undefined,\n  __resourcePath: 'docs/feedback/alert.mdx',\n  __scans: {},\n  layout: 'index'\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst ComponentLinks = makeShortcode(\"ComponentLinks\");\nconst PropsTable = makeShortcode(\"PropsTable\");\nconst layoutProps = {\n  frontMatter\n};\nconst MDXLayout = Layout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <p>{`Alerts are used to communicate a state that affects a system, feature or page.`}</p>\n    <ComponentLinks theme={{\n      componentName: \"alert\"\n    }} github={{\n      package: \"alert\"\n    }} npm={{\n      package: \"@chakra-ui/alert\"\n    }} mdxType=\"ComponentLinks\" />\n    <p><carbon-ad></carbon-ad></p>\n    <h2 {...{\n      \"id\": \"import\"\n    }}>{`Import`}</h2>\n    <p>{`Chakra UI exports 4 alert related components.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Alert`}</inlineCode>{`: The wrapper for alert components.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`AlertIcon`}</inlineCode>{`: The visual icon for the alert that changes based on the `}<inlineCode parentName=\"li\">{`status`}</inlineCode>{`\nprop.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`AlertTitle`}</inlineCode>{`: The title of the alert to be announced by screen readers.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`AlertDescription`}</inlineCode>{`: The description of the alert to be announced by screen\nreaders.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import {\n  Alert,\n  AlertIcon,\n  AlertTitle,\n  AlertDescription,\n} from \"@chakra-ui/react\"\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Alert status=\"error\">\n  <AlertIcon />\n  <AlertTitle mr={2}>Your browser is outdated!</AlertTitle>\n  <AlertDescription>Your Chakra experience may be degraded.</AlertDescription>\n  <CloseButton position=\"absolute\" right=\"8px\" top=\"8px\" />\n</Alert>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"status\"\n    }}>{`Status`}</h3>\n    <p>{`Change the status of the alerts by passing the `}<inlineCode parentName=\"p\">{`status`}</inlineCode>{` prop. This affects the\ncolor scheme and icon used. Alert supports `}<inlineCode parentName=\"p\">{`error`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`success`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`warning`}</inlineCode>{`, and\n`}<inlineCode parentName=\"p\">{`info`}</inlineCode>{` statuses.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Stack spacing={3}>\n  <Alert status=\"error\">\n    <AlertIcon />\n    There was an error processing your request\n  </Alert>\n\n  <Alert status=\"success\">\n    <AlertIcon />\n    Data uploaded to the server. Fire on!\n  </Alert>\n\n  <Alert status=\"warning\">\n    <AlertIcon />\n    Seems your account is about expire, upgrade now\n  </Alert>\n\n  <Alert status=\"info\">\n    <AlertIcon />\n    Chakra is going live on August 30th. Get ready!\n  </Alert>\n</Stack>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"variant\"\n    }}>{`Variant`}</h3>\n    <p><inlineCode parentName=\"p\">{`Alert`}</inlineCode>{` has 4 variant styles you can use. Pass the `}<inlineCode parentName=\"p\">{`variant`}</inlineCode>{` prop and use either\n`}<inlineCode parentName=\"p\">{`subtle`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`solid`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`left-accent`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`top-accent`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Stack spacing={3}>\n  <Alert status=\"success\" variant=\"subtle\">\n    <AlertIcon />\n    Data uploaded to the server. Fire on!\n  </Alert>\n\n  <Alert status=\"success\" variant=\"solid\">\n    <AlertIcon />\n    Data uploaded to the server. Fire on!\n  </Alert>\n\n  <Alert status=\"success\" variant=\"left-accent\">\n    <AlertIcon />\n    Data uploaded to the server. Fire on!\n  </Alert>\n\n  <Alert status=\"success\" variant=\"top-accent\">\n    <AlertIcon />\n    Data uploaded to the server. Fire on!\n  </Alert>\n</Stack>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"composition\"\n    }}>{`Composition`}</h3>\n    <p><inlineCode parentName=\"p\">{`Alert`}</inlineCode>{` ships with smaller components to allow for flexibility in creating all\nkinds of layouts. Here's an example of a custom alert style and layout:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Alert\n  status=\"success\"\n  variant=\"subtle\"\n  flexDirection=\"column\"\n  alignItems=\"center\"\n  justifyContent=\"center\"\n  textAlign=\"center\"\n  height=\"200px\"\n>\n  <AlertIcon boxSize=\"40px\" mr={0} />\n  <AlertTitle mt={4} mb={1} fontSize=\"lg\">\n    Application submitted!\n  </AlertTitle>\n  <AlertDescription maxWidth=\"sm\">\n    Thanks for submitting your application. Our team will get back to you soon.\n  </AlertDescription>\n</Alert>\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`Alert`}</inlineCode>{` can also incorporate other Chakra components. Here's an example of an\nalert with wrapping description text:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Alert status=\"success\">\n  <AlertIcon />\n  <Box flex=\"1\">\n    <AlertTitle>Success!</AlertTitle>\n    <AlertDescription display=\"block\">\n      Your application has been received. We will review your application and\n      respond within the next 48 hours.\n    </AlertDescription>\n  </Box>\n  <CloseButton position=\"absolute\" right=\"8px\" top=\"8px\" />\n</Alert>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <h3 {...{\n      \"id\": \"alert-props\"\n    }}>{`Alert Props`}</h3>\n    <p><inlineCode parentName=\"p\">{`Alert`}</inlineCode>{` is the wrapper for `}<inlineCode parentName=\"p\">{`Alert`}</inlineCode>{` component. It composes the `}<inlineCode parentName=\"p\">{`Flex`}</inlineCode>{` component.`}</p>\n    <PropsTable of=\"Alert\" mdxType=\"PropsTable\" />\n    <h3 {...{\n      \"id\": \"alerticon-props\"\n    }}>{`AlertIcon Props`}</h3>\n    <p><inlineCode parentName=\"p\">{`AlertIcon`}</inlineCode>{` composes `}<inlineCode parentName=\"p\">{`Icon`}</inlineCode>{` and changes the icon based on the `}<inlineCode parentName=\"p\">{`status`}</inlineCode>{` prop.`}</p>\n    <h3 {...{\n      \"id\": \"alerttitle-props\"\n    }}>{`AlertTitle Props`}</h3>\n    <p><inlineCode parentName=\"p\">{`AlertTitle`}</inlineCode>{` composes the `}<inlineCode parentName=\"p\">{`Box`}</inlineCode>{` component.`}</p>\n    <h3 {...{\n      \"id\": \"alertdescription-props\"\n    }}>{`AlertDescription Props`}</h3>\n    <p><inlineCode parentName=\"p\">{`AlertDescription`}</inlineCode>{` composes the `}<inlineCode parentName=\"p\">{`Box`}</inlineCode>{` component.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"]},"metadata":{},"sourceType":"module"}