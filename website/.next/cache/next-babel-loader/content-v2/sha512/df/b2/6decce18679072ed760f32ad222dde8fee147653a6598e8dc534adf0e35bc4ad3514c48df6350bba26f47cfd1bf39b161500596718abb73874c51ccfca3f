{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/sunfei/Downloads/website/pages/docs/components/icon.mdx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport Layout from '/Users/sunfei/Downloads/website/layouts/index';\nexport var frontMatter = {\n  title: 'Icon',\n  \"package\": '@chakra-ui/icon',\n  image: 'components/icon.svg',\n  slug: '/docs/components/icon',\n  lastEdited: undefined,\n  editUrl: 'https://github.com/chakra-ui/chakra-ui/edit/develop/website/pages/docs/components/icon.mdx',\n  author: undefined,\n  tags: undefined,\n  __resourcePath: 'docs/components/icon.mdx',\n  __scans: {},\n  layout: 'index'\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", _objectSpread(_objectSpread({}, props), {}, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 14\n      }\n    }));\n  };\n};\n\nvar ComponentLinks = makeShortcode(\"ComponentLinks\");\n_c = ComponentLinks;\nvar Box = makeShortcode(\"Box\");\n_c2 = Box;\nvar IconsList = makeShortcode(\"IconsList\");\n_c3 = IconsList;\nvar PropsTable = makeShortcode(\"PropsTable\");\n_c4 = PropsTable;\nvar layoutProps = {\n  frontMatter: frontMatter\n};\nvar MDXLayout = Layout;\nexport default function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _objectSpread(_objectSpread(_objectSpread({}, layoutProps), props), {}, {\n    components: components,\n    mdxType: \"MDXLayout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 10\n    }\n  }), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, \"Chakra provides multiple ways to use icons in your project:\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, mdx(\"a\", _objectSpread(_objectSpread({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#using-chakra-ui-icons\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 27\n    }\n  }), \"Using Chakra UI icon library\")), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, mdx(\"a\", _objectSpread(_objectSpread({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#using-a-third-party-icon-library\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 27\n    }\n  }), \"Using a third-party icon library\")), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, mdx(\"a\", _objectSpread(_objectSpread({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#creating-your-custom-icons\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 27\n    }\n  }), \"Creating your own icons\"))), mdx(\"blockquote\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, mdx(\"p\", {\n    parentName: \"blockquote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"\\uD83D\\uDEA8 Avoid passing \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 55\n    }\n  }, \"onClick\"), \" handlers to icon components. If you need a\\nclickable icon, use the \", mdx(\"a\", _objectSpread(_objectSpread({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/form/icon-button\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 27\n    }\n  }), \"IconButton\"), \" instead.\")), mdx(ComponentLinks, {\n    theme: {\n      componentName: \"icon\"\n    },\n    github: {\n      \"package\": \"icon\"\n    },\n    npm: {\n      \"package\": \"@chakra-ui/icon\"\n    },\n    mdxType: \"ComponentLinks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, mdx(\"carbon-ad\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 8\n    }\n  })), mdx(\"h2\", _objectSpread(_objectSpread({}, {\n    \"id\": \"using-chakra-ui-icons\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }), \"Using Chakra UI icons\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, \"Chakra provides a set of commonly used interface icons you can use in your\\nproject. To use these icons, install \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 40\n    }\n  }, \"@chakra-ui/icons\"), \", import the icons you need\\nand style them.\"), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"installation\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }), \"Installation\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 10\n    }\n  }), \"npm i @chakra-ui/icons\\n# or\\nyarn add @chakra-ui/icons\\n\")), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"usage\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }), \"Usage\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=false\",\n    \"live\": \"false\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 10\n    }\n  }), \"import { PhoneIcon, AddIcon, WarningIcon } from '@chakra-ui/icons'\\n\\n// The default icon size is 1em (16px)\\n<PhoneIcon />\\n\\n// Use the `boxSize` prop to change the icon size\\n<AddIcon w={6} h={6} />\\n\\n// Use the `color` prop to change the icon color\\n<WarningIcon w={8} h={8} color=\\\"red.500\\\" />\\n\")), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"all-icons\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }), \"All icons\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, \"Below is a list of all of the icons in the library, along with the corresponding\\ncomponent names:\"), mdx(Box, {\n    mt: 5,\n    mdxType: \"Box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, mdx(IconsList, {\n    mdxType: \"IconsList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 3\n    }\n  })), mdx(\"h2\", _objectSpread(_objectSpread({}, {\n    \"id\": \"using-a-third-party-icon-library\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }), \"Using a third-party icon library\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, \"To use third-party icon libraries like\\n\", mdx(\"a\", _objectSpread(_objectSpread({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://react-icons.github.io/react-icons/\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 3\n    }\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 10\n    }\n  }, \"react-icons\")), \", here are the steps:\"), mdx(\"ol\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, \"Import the \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 42\n    }\n  }, \"Icon\"), \" component from \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 111\n    }\n  }, \"@chakra-ui/react\")), mdx(\"li\", {\n    parentName: \"ol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, \"Pass the desired third party icon into the \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 74\n    }\n  }, \"as\"), \" prop\")), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=false\",\n    \"live\": \"false\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 10\n    }\n  }), \"// 1. Import\\nimport { Icon } from \\\"@chakra-ui/react\\\"\\nimport { MdSettings } from \\\"react-icons/md\\\"\\n\\n// 2. Use the `as` prop\\nfunction Example() {\\n  return <Icon as={MdSettings} />\\n}\\n\")), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"some-examples\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }), \"Some examples\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 10\n    }\n  }), \"<HStack>\\n  {/* The default icon size is 1em (16px) */}\\n  <Icon as={MdSettings} />\\n\\n  {/* Use the `boxSize` prop to change the icon size */}\\n  <Icon as={MdReceipt} w={6} h={6} />\\n\\n  {/* Use the `color` prop to change the icon color */}\\n  <Icon as={MdGroupWork} w={8} h={8} color=\\\"red.500\\\" />\\n</HStack>\\n\")), mdx(\"h2\", _objectSpread(_objectSpread({}, {\n    \"id\": \"creating-your-custom-icons\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }\n  }), \"Creating your custom icons\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 5\n    }\n  }, \"Chakra provides two methods for creating your custom icons:\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, \"Using the \", mdx(\"a\", _objectSpread(_objectSpread({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#using-the-icon-component\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 41\n    }\n  }), \"Icon\"), \" component\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, \"Using the \", mdx(\"a\", _objectSpread(_objectSpread({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#using-the-createicon-function\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 41\n    }\n  }), \"createIcon\"), \" function\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  }, \"They can be imported from \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 38\n    }\n  }, \"@chakra-ui/react\"), \":\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=false\",\n    \"live\": \"false\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 10\n    }\n  }), \"import { Icon, createIcon } from \\\"@chakra-ui/react\\\"\\n\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 5\n    }\n  }, \"Both \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, \"Icon\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 74\n    }\n  }, \"createIcon\"), \" enable you to style the icon using\\n\", mdx(\"a\", _objectSpread(_objectSpread({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/features/style-props\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 3\n    }\n  }), \"style props\"), \".\"), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"using-the-icon-component\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 5\n    }\n  }), \"Using the \", mdx(\"inlineCode\", {\n    parentName: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 22\n    }\n  }, \"Icon\"), \" component\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 5\n    }\n  }, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 16\n    }\n  }, \"Icon\"), \" component renders as an \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 93\n    }\n  }, \"svg\"), \" element.\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 10\n    }\n  }), \"<Icon viewBox=\\\"0 0 200 200\\\" color=\\\"red.500\\\">\\n  <path\\n    fill=\\\"currentColor\\\"\\n    d=\\\"M 100, 100 m -75, 0 a 75,75 0 1,0 150,0 a 75,75 0 1,0 -150,0\\\"\\n  />\\n</Icon>\\n\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 5\n    }\n  }, \"This enables you to define your own custom icon components:\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=false\",\n    \"live\": \"false\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 10\n    }\n  }), \"const CircleIcon = (props) => (\\n  <Icon viewBox=\\\"0 0 200 200\\\" {...props}>\\n    <path\\n      fill=\\\"currentColor\\\"\\n      d=\\\"M 100, 100 m -75, 0 a 75,75 0 1,0 150,0 a 75,75 0 1,0 -150,0\\\"\\n    />\\n  </Icon>\\n)\\n\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 5\n    }\n  }, \"And style them with style props:\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 10\n    }\n  }), \"<HStack>\\n  {/* The default icon size is 1em (16px) */}\\n  <CircleIcon />\\n\\n  {/* Use the `boxSize` prop to change the icon size */}\\n  <CircleIcon boxSize={6} />\\n\\n  {/* Use the `color` prop to change the icon color */}\\n  <CircleIcon boxSize={8} color=\\\"red.500\\\" />\\n</HStack>\\n\")), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"using-the-createicon-function\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 5\n    }\n  }), \"Using the \", mdx(\"inlineCode\", {\n    parentName: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 22\n    }\n  }, \"createIcon\"), \" function\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 5\n    }\n  }, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 16\n    }\n  }, \"createIcon\"), \" function is a convenience wrapper around the process of\\ngenerating icons with \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 25\n    }\n  }, \"Icon\"), \", allowing you to achieve the same functionality\\nwith less effort.\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=false\",\n    \"live\": \"false\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 10\n    }\n  }), \"import { createIcon } from \\\"@chakra-ui/icons\\\"\\n\\n// using `path`\\nexport const UpDownIcon = createIcon({\\n  displayName: \\\"UpDownIcon\\\",\\n  viewBox: \\\"0 0 200 200\\\",\\n  // path can also be an array of elements, if you have multiple paths, lines, shapes, etc.\\n  path: (\\n    <path\\n      fill=\\\"currentColor\\\"\\n      d=\\\"M 100, 100 m -75, 0 a 75,75 0 1,0 150,0 a 75,75 0 1,0 -150,0\\\"\\n    />\\n  ),\\n})\\n\\n// OR using the `d` value of a path (the path definition) directly\\nexport const UpDownIcon = createIcon({\\n  displayName: \\\"UpDownIcon\\\",\\n  viewBox: \\\"0 0 200 200\\\",\\n  d: \\\"M 100, 100 m -75, 0 a 75,75 0 1,0 150,0 a 75,75 0 1,0 -150,0\\\",\\n})\\n\")), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"tips-for-generating-your-own-icons\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 5\n    }\n  }), \"Tips for generating your own icons\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }\n  }, \"Export icons as \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 47\n    }\n  }, \"svg\"), \" from \", mdx(\"a\", _objectSpread(_objectSpread({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.figma.com/\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 105\n    }\n  }), \"Figma\"), \",\\n\", mdx(\"a\", _objectSpread(_objectSpread({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.sketch.com/\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 3\n    }\n  }), \"Sketch\"), \", etc.\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }\n  }, \"Use a tool like \", mdx(\"a\", _objectSpread(_objectSpread({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://jakearchibald.github.io/svgomg/\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 47\n    }\n  }), \"SvgOmg\"), \" to reduce\\nthe size and minify the markup.\")), mdx(\"h2\", _objectSpread(_objectSpread({}, {\n    \"id\": \"fallback-icon\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 5\n    }\n  }), \"Fallback Icon\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 5\n    }\n  }, \"When \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 17\n    }\n  }, \"children\"), \" is not provided, the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 95\n    }\n  }, \"Icon\"), \" component renders a fallback icon.\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 10\n    }\n  }), \"<Icon />\\n\")), mdx(\"h2\", _objectSpread(_objectSpread({}, {\n    \"id\": \"props\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 5\n    }\n  }), \"Props\"), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"icon-props\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 5\n    }\n  }), mdx(\"inlineCode\", {\n    parentName: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 8\n    }\n  }, \"Icon\"), \" props\"), mdx(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 5\n    }\n  }, mdx(\"thead\", {\n    parentName: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }\n  }, mdx(\"tr\", {\n    parentName: \"thead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }\n  }, mdx(\"th\", _objectSpread(_objectSpread({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 11\n    }\n  }), \"Name\"), mdx(\"th\", _objectSpread(_objectSpread({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 11\n    }\n  }), \"Type\"), mdx(\"th\", _objectSpread(_objectSpread({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 11\n    }\n  }), \"Default\"), mdx(\"th\", _objectSpread(_objectSpread({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 11\n    }\n  }), \"Description\"))), mdx(\"tbody\", {\n    parentName: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }\n  }, mdx(\"tr\", {\n    parentName: \"tbody\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }\n  }, mdx(\"td\", _objectSpread(_objectSpread({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 11\n    }\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 14\n    }\n  }, \"viewBox\")), mdx(\"td\", _objectSpread(_objectSpread({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 11\n    }\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 14\n    }\n  }, \"string\")), mdx(\"td\", _objectSpread(_objectSpread({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 11\n    }\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 14\n    }\n  }, \"0 0 24 24\")), mdx(\"td\", _objectSpread(_objectSpread({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 11\n    }\n  }), \"The viewBox of the icon.\")), mdx(\"tr\", {\n    parentName: \"tbody\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }\n  }, mdx(\"td\", _objectSpread(_objectSpread({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 11\n    }\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 14\n    }\n  }, \"boxSize\")), mdx(\"td\", _objectSpread(_objectSpread({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 11\n    }\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 14\n    }\n  }, \"string\")), mdx(\"td\", _objectSpread(_objectSpread({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 11\n    }\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 14\n    }\n  }, \"1em\")), mdx(\"td\", _objectSpread(_objectSpread({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 11\n    }\n  }), \"The size (width and height) of the icon.\")), mdx(\"tr\", {\n    parentName: \"tbody\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 9\n    }\n  }, mdx(\"td\", _objectSpread(_objectSpread({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 11\n    }\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 14\n    }\n  }, \"color\")), mdx(\"td\", _objectSpread(_objectSpread({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 11\n    }\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 14\n    }\n  }, \"string\")), mdx(\"td\", _objectSpread(_objectSpread({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 11\n    }\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 14\n    }\n  }, \"currentColor\")), mdx(\"td\", _objectSpread(_objectSpread({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 11\n    }\n  }), \"The color of the icon.\")), mdx(\"tr\", {\n    parentName: \"tbody\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 9\n    }\n  }, mdx(\"td\", _objectSpread(_objectSpread({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 11\n    }\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 14\n    }\n  }, \"focusable\")), mdx(\"td\", _objectSpread(_objectSpread({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 11\n    }\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 14\n    }\n  }, \"boolean\")), mdx(\"td\", _objectSpread(_objectSpread({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 11\n    }\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 14\n    }\n  }, \"false\")), mdx(\"td\", _objectSpread(_objectSpread({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 11\n    }\n  }), \"Denotes that the icon is not an interative element, and only used for presentation.\")), mdx(\"tr\", {\n    parentName: \"tbody\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 9\n    }\n  }, mdx(\"td\", _objectSpread(_objectSpread({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 11\n    }\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 14\n    }\n  }, \"role\")), mdx(\"td\", _objectSpread(_objectSpread({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 11\n    }\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 14\n    }\n  }, \"presentation\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 77\n    }\n  }, \"img\")), mdx(\"td\", _objectSpread(_objectSpread({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 11\n    }\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 14\n    }\n  }, \"presentation\")), mdx(\"td\", _objectSpread(_objectSpread({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 11\n    }\n  }), \"The html role of the icon.\")), mdx(\"tr\", {\n    parentName: \"tbody\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 9\n    }\n  }, mdx(\"td\", _objectSpread(_objectSpread({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 11\n    }\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 14\n    }\n  }, \"children\")), mdx(\"td\", _objectSpread(_objectSpread({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 11\n    }\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 14\n    }\n  }, \"React.ReactNode\")), mdx(\"td\", _objectSpread(_objectSpread({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 11\n    }\n  })), mdx(\"td\", _objectSpread(_objectSpread({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 11\n    }\n  }), \"The Path or Group of the icon\")))), mdx(\"h2\", _objectSpread(_objectSpread({}, {\n    \"id\": \"createicon-options\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 5\n    }\n  }), mdx(\"inlineCode\", {\n    parentName: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 8\n    }\n  }, \"createIcon\"), \" options\"), mdx(PropsTable, {\n    of: \"createIcon\",\n    mdxType: \"PropsTable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 5\n    }\n  }));\n}\n_c5 = MDXContent;\n;\nMDXContent.isMDXComponent = true;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"ComponentLinks\");\n$RefreshReg$(_c2, \"Box\");\n$RefreshReg$(_c3, \"IconsList\");\n$RefreshReg$(_c4, \"PropsTable\");\n$RefreshReg$(_c5, \"MDXContent\");","map":{"version":3,"sources":["/Users/sunfei/Downloads/website/pages/docs/components/icon.mdx"],"names":["React","mdx","Layout","frontMatter","title","image","slug","lastEdited","undefined","editUrl","author","tags","__resourcePath","__scans","layout","makeShortcode","name","MDXDefaultShortcode","props","console","warn","ComponentLinks","Box","IconsList","PropsTable","layoutProps","MDXLayout","MDXContent","components","componentName","isMDXComponent"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport Layout, {  } from '/Users/sunfei/Downloads/website/layouts/index'\nexport const frontMatter = {\n  title: 'Icon',\n  package: '@chakra-ui/icon',\n  image: 'components/icon.svg',\n  slug: '/docs/components/icon',\n  lastEdited: undefined,\n  editUrl: 'https://github.com/chakra-ui/chakra-ui/edit/develop/website/pages/docs/components/icon.mdx',\n  author: undefined,\n  tags: undefined,\n  __resourcePath: 'docs/components/icon.mdx',\n  __scans: {},\n  layout: 'index'\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst ComponentLinks = makeShortcode(\"ComponentLinks\");\nconst Box = makeShortcode(\"Box\");\nconst IconsList = makeShortcode(\"IconsList\");\nconst PropsTable = makeShortcode(\"PropsTable\");\nconst layoutProps = {\n  frontMatter\n};\nconst MDXLayout = Layout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <p>{`Chakra provides multiple ways to use icons in your project:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#using-chakra-ui-icons\"\n        }}>{`Using Chakra UI icon library`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#using-a-third-party-icon-library\"\n        }}>{`Using a third-party icon library`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#creating-your-custom-icons\"\n        }}>{`Creating your own icons`}</a></li>\n    </ul>\n    <blockquote>\n      <p parentName=\"blockquote\">{`🚨 Avoid passing `}<inlineCode parentName=\"p\">{`onClick`}</inlineCode>{` handlers to icon components. If you need a\nclickable icon, use the `}<a parentName=\"p\" {...{\n          \"href\": \"/docs/form/icon-button\"\n        }}>{`IconButton`}</a>{` instead.`}</p>\n    </blockquote>\n    <ComponentLinks theme={{\n      componentName: \"icon\"\n    }} github={{\n      package: \"icon\"\n    }} npm={{\n      package: \"@chakra-ui/icon\"\n    }} mdxType=\"ComponentLinks\" />\n    <p><carbon-ad></carbon-ad></p>\n    <h2 {...{\n      \"id\": \"using-chakra-ui-icons\"\n    }}>{`Using Chakra UI icons`}</h2>\n    <p>{`Chakra provides a set of commonly used interface icons you can use in your\nproject. To use these icons, install `}<inlineCode parentName=\"p\">{`@chakra-ui/icons`}</inlineCode>{`, import the icons you need\nand style them.`}</p>\n    <h3 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm i @chakra-ui/icons\n# or\nyarn add @chakra-ui/icons\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live=false\",\n        \"live\": \"false\"\n      }}>{`import { PhoneIcon, AddIcon, WarningIcon } from '@chakra-ui/icons'\n\n// The default icon size is 1em (16px)\n<PhoneIcon />\n\n// Use the \\`boxSize\\` prop to change the icon size\n<AddIcon w={6} h={6} />\n\n// Use the \\`color\\` prop to change the icon color\n<WarningIcon w={8} h={8} color=\"red.500\" />\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"all-icons\"\n    }}>{`All icons`}</h3>\n    <p>{`Below is a list of all of the icons in the library, along with the corresponding\ncomponent names:`}</p>\n    <Box mt={5} mdxType=\"Box\">\n  <IconsList mdxType=\"IconsList\" />\n    </Box>\n    <h2 {...{\n      \"id\": \"using-a-third-party-icon-library\"\n    }}>{`Using a third-party icon library`}</h2>\n    <p>{`To use third-party icon libraries like\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://react-icons.github.io/react-icons/\"\n      }}><inlineCode parentName=\"a\">{`react-icons`}</inlineCode></a>{`, here are the steps:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Import the `}<inlineCode parentName=\"li\">{`Icon`}</inlineCode>{` component from `}<inlineCode parentName=\"li\">{`@chakra-ui/react`}</inlineCode></li>\n      <li parentName=\"ol\">{`Pass the desired third party icon into the `}<inlineCode parentName=\"li\">{`as`}</inlineCode>{` prop`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live=false\",\n        \"live\": \"false\"\n      }}>{`// 1. Import\nimport { Icon } from \"@chakra-ui/react\"\nimport { MdSettings } from \"react-icons/md\"\n\n// 2. Use the \\`as\\` prop\nfunction Example() {\n  return <Icon as={MdSettings} />\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"some-examples\"\n    }}>{`Some examples`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<HStack>\n  {/* The default icon size is 1em (16px) */}\n  <Icon as={MdSettings} />\n\n  {/* Use the \\`boxSize\\` prop to change the icon size */}\n  <Icon as={MdReceipt} w={6} h={6} />\n\n  {/* Use the \\`color\\` prop to change the icon color */}\n  <Icon as={MdGroupWork} w={8} h={8} color=\"red.500\" />\n</HStack>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"creating-your-custom-icons\"\n    }}>{`Creating your custom icons`}</h2>\n    <p>{`Chakra provides two methods for creating your custom icons:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Using the `}<a parentName=\"li\" {...{\n          \"href\": \"#using-the-icon-component\"\n        }}>{`Icon`}</a>{` component`}</li>\n      <li parentName=\"ul\">{`Using the `}<a parentName=\"li\" {...{\n          \"href\": \"#using-the-createicon-function\"\n        }}>{`createIcon`}</a>{` function`}</li>\n    </ul>\n    <p>{`They can be imported from `}<inlineCode parentName=\"p\">{`@chakra-ui/react`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live=false\",\n        \"live\": \"false\"\n      }}>{`import { Icon, createIcon } from \"@chakra-ui/react\"\n`}</code></pre>\n    <p>{`Both `}<inlineCode parentName=\"p\">{`Icon`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`createIcon`}</inlineCode>{` enable you to style the icon using\n`}<a parentName=\"p\" {...{\n        \"href\": \"/docs/features/style-props\"\n      }}>{`style props`}</a>{`.`}</p>\n    <h3 {...{\n      \"id\": \"using-the-icon-component\"\n    }}>{`Using the `}<inlineCode parentName=\"h3\">{`Icon`}</inlineCode>{` component`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Icon`}</inlineCode>{` component renders as an `}<inlineCode parentName=\"p\">{`svg`}</inlineCode>{` element.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Icon viewBox=\"0 0 200 200\" color=\"red.500\">\n  <path\n    fill=\"currentColor\"\n    d=\"M 100, 100 m -75, 0 a 75,75 0 1,0 150,0 a 75,75 0 1,0 -150,0\"\n  />\n</Icon>\n`}</code></pre>\n    <p>{`This enables you to define your own custom icon components:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live=false\",\n        \"live\": \"false\"\n      }}>{`const CircleIcon = (props) => (\n  <Icon viewBox=\"0 0 200 200\" {...props}>\n    <path\n      fill=\"currentColor\"\n      d=\"M 100, 100 m -75, 0 a 75,75 0 1,0 150,0 a 75,75 0 1,0 -150,0\"\n    />\n  </Icon>\n)\n`}</code></pre>\n    <p>{`And style them with style props:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<HStack>\n  {/* The default icon size is 1em (16px) */}\n  <CircleIcon />\n\n  {/* Use the \\`boxSize\\` prop to change the icon size */}\n  <CircleIcon boxSize={6} />\n\n  {/* Use the \\`color\\` prop to change the icon color */}\n  <CircleIcon boxSize={8} color=\"red.500\" />\n</HStack>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"using-the-createicon-function\"\n    }}>{`Using the `}<inlineCode parentName=\"h3\">{`createIcon`}</inlineCode>{` function`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`createIcon`}</inlineCode>{` function is a convenience wrapper around the process of\ngenerating icons with `}<inlineCode parentName=\"p\">{`Icon`}</inlineCode>{`, allowing you to achieve the same functionality\nwith less effort.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live=false\",\n        \"live\": \"false\"\n      }}>{`import { createIcon } from \"@chakra-ui/icons\"\n\n// using \\`path\\`\nexport const UpDownIcon = createIcon({\n  displayName: \"UpDownIcon\",\n  viewBox: \"0 0 200 200\",\n  // path can also be an array of elements, if you have multiple paths, lines, shapes, etc.\n  path: (\n    <path\n      fill=\"currentColor\"\n      d=\"M 100, 100 m -75, 0 a 75,75 0 1,0 150,0 a 75,75 0 1,0 -150,0\"\n    />\n  ),\n})\n\n// OR using the \\`d\\` value of a path (the path definition) directly\nexport const UpDownIcon = createIcon({\n  displayName: \"UpDownIcon\",\n  viewBox: \"0 0 200 200\",\n  d: \"M 100, 100 m -75, 0 a 75,75 0 1,0 150,0 a 75,75 0 1,0 -150,0\",\n})\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"tips-for-generating-your-own-icons\"\n    }}>{`Tips for generating your own icons`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Export icons as `}<inlineCode parentName=\"li\">{`svg`}</inlineCode>{` from `}<a parentName=\"li\" {...{\n          \"href\": \"https://www.figma.com/\"\n        }}>{`Figma`}</a>{`,\n`}<a parentName=\"li\" {...{\n          \"href\": \"https://www.sketch.com/\"\n        }}>{`Sketch`}</a>{`, etc.`}</li>\n      <li parentName=\"ul\">{`Use a tool like `}<a parentName=\"li\" {...{\n          \"href\": \"https://jakearchibald.github.io/svgomg/\"\n        }}>{`SvgOmg`}</a>{` to reduce\nthe size and minify the markup.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"fallback-icon\"\n    }}>{`Fallback Icon`}</h2>\n    <p>{`When `}<inlineCode parentName=\"p\">{`children`}</inlineCode>{` is not provided, the `}<inlineCode parentName=\"p\">{`Icon`}</inlineCode>{` component renders a fallback icon.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Icon />\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <h3 {...{\n      \"id\": \"icon-props\"\n    }}><inlineCode parentName=\"h3\">{`Icon`}</inlineCode>{` props`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`viewBox`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`0 0 24 24`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The viewBox of the icon.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boxSize`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`1em`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The size (width and height) of the icon.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`color`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`string`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`currentColor`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The color of the icon.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`focusable`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`boolean`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Denotes that the icon is not an interative element, and only used for presentation.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`role`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`presentation`}</inlineCode>{`, `}<inlineCode parentName=\"td\">{`img`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`presentation`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The html role of the icon.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`children`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`React.ReactNode`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The Path or Group of the icon`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"createicon-options\"\n    }}><inlineCode parentName=\"h2\">{`createIcon`}</inlineCode>{` options`}</h2>\n    <PropsTable of=\"createIcon\" mdxType=\"PropsTable\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"]},"metadata":{},"sourceType":"module"}