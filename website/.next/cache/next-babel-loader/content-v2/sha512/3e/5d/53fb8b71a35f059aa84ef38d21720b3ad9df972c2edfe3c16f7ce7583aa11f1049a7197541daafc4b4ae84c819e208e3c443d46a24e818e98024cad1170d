{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/sunfei/Downloads/website/pages/docs/features/gradient.mdx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport Layout from '/Users/sunfei/Downloads/website/layouts/index';\nexport var frontMatter = {\n  title: 'Gradient',\n  version: '1.1+',\n  description: 'Learn how to use gradients in Chakra UI. Gradients are a way to transition between two or more colors.',\n  slug: '/docs/features/gradient',\n  lastEdited: undefined,\n  editUrl: 'https://github.com/chakra-ui/chakra-ui/edit/develop/website/pages/docs/features/gradient.mdx',\n  author: undefined,\n  tags: undefined,\n  __resourcePath: 'docs/features/gradient.mdx',\n  __scans: {},\n  layout: 'index'\n};\nvar layoutProps = {\n  frontMatter: frontMatter\n};\nvar MDXLayout = Layout;\nexport default function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _objectSpread(_objectSpread(_objectSpread({}, layoutProps), props), {}, {\n    components: components,\n    mdxType: \"MDXLayout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 10\n    }\n  }), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, \"Gradients are a way to have transition between two or more colors. You can add\\ngradient support using any of the following style props.\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 27\n    }\n  }, \"bgGradient\"), \": a shorthand, convenient style prop to apply theme-aware\\ngradients.\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 27\n    }\n  }, \"bgClip\"), \": a shorthand for \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 100\n    }\n  }, \"background-clip\"), \" CSS attribute. Useful when\\ncreating text gradients.\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 27\n    }\n  }, \"backgroundClip\"), \": the typical \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 104\n    }\n  }, \"background-clip\"), \" CSS attribute. Useful when\\ncreating text gradients.\")), mdx(\"h2\", _objectSpread(_objectSpread({}, {\n    \"id\": \"background-gradient-api\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }), \"Background Gradient API\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, \"To add a gradient to an element, pass the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 54\n    }\n  }, \"bgGradient\"), \" prop and set its value\\nfollowing the API:\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 27\n    }\n  }, \"linear(<direction>, <from>, <to>)\")), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 27\n    }\n  }, \"radial(<from>, <to>)\"))), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, \"You can also use other CSS gradient types like \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 59\n    }\n  }, \"repeating-linear\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 125\n    }\n  }, \"conic\"), \", etc.\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, \"For linear gradients, the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 38\n    }\n  }, \"<direction>\"), \" can be set to the default CSS directions\\n(e.g. \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"to top\"), \") or the shorthand equivalent (e.g \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 98\n    }\n  }, \"to-t\"), \").\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, \"Here's the list of supported direction shorthands and their respective values:\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-json\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 10\n    }\n  }), \"{\\n  \\\"to-t\\\": \\\"to top\\\",\\n  \\\"to-tr\\\": \\\"to top right\\\",\\n  \\\"to-r\\\": \\\"to right\\\",\\n  \\\"to-br\\\": \\\"to bottom right\\\",\\n  \\\"to-b\\\": \\\"to bottom\\\",\\n  \\\"to-bl\\\": \\\"to bottom left\\\",\\n  \\\"to-l\\\": \\\"to left\\\",\\n  \\\"to-tl\\\": \\\"to top left\\\"\\n}\\n\")), mdx(\"h2\", _objectSpread(_objectSpread({}, {\n    \"id\": \"usage\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }), \"Usage\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, \"Let's create a simple gradient from \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 48\n    }\n  }, \"green.200\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 109\n    }\n  }, \"pink.500\")), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 10\n    }\n  }), \"<Box w=\\\"100%\\\" h=\\\"200px\\\" bgGradient=\\\"linear(to-r, green.200, pink.500)\\\" />\\n\")), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"customizing-colors\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }), \"Customizing Colors\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, \"You can use both theme-aware color tokens or raw CSS color values.\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 10\n    }\n  }), \"<Box w=\\\"100%\\\" h=\\\"200px\\\" bgGradient=\\\"linear(to-l, #7928CA, #FF0080)\\\" />\\n\")), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"multiple-color-stops\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }), \"Multiple Color Stops\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, \"By adding more color-stop points on the gradient line, you can create a highly\\ncustomized transition between multiple colors.\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 10\n    }\n  }), \"<Box\\n  w=\\\"100%\\\"\\n  h=\\\"200px\\\"\\n  bgGradient=\\\"linear(to-r,gray.300,yellow.400,pink.200)\\\"\\n/>\\n\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, \"Following the CSS gradient specification, you can also define the distribution\\nof the color stops\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 10\n    }\n  }), \"<Box\\n  w=\\\"100%\\\"\\n  h=\\\"200px\\\"\\n  bgGradient=\\\"linear(red.100 0%, orange.100 25%, yellow.100 50%)\\\"\\n/>\\n\")), mdx(\"h2\", _objectSpread(_objectSpread({}, {\n    \"id\": \"text-gradient-api\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }), \"Text Gradient API\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, \"To add a text gradient, pass the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 45\n    }\n  }, \"bgGradient\"), \" following the API and \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 126\n    }\n  }, \"bgClip\"), \"\\nprop to \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, \"text\"), \".\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 10\n    }\n  }), \"<Text\\n  bgGradient=\\\"linear(to-l, #7928CA,#FF0080)\\\"\\n  bgClip=\\\"text\\\"\\n  fontSize=\\\"6xl\\\"\\n  fontWeight=\\\"extrabold\\\"\\n>\\n  Welcome to Chakra UI\\n</Text>\\n\")), mdx(\"h2\", _objectSpread(_objectSpread({}, {\n    \"id\": \"responsive-gradients\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }), \"Responsive Gradients\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, \"You can control the responsiveness of gradients by specifying the gradients at\\nthe different breakpoints.\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 10\n    }\n  }), \"<Box\\n  w=\\\"100%\\\"\\n  h=\\\"200px\\\"\\n  bgGradient={[\\n    \\\"linear(to-tr, teal.300,yellow.400)\\\",\\n    \\\"linear(to-t, blue.200, teal.500)\\\",\\n    \\\"linear(to-b, orange.100, purple.300)\\\",\\n  ]}\\n/>\\n\")), mdx(\"h2\", _objectSpread(_objectSpread({}, {\n    \"id\": \"changing-gradient-with-pseudo-props\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }\n  }), \"Changing gradient with pseudo props\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }\n  }, \"You can change the gradient of an element based on common CSS pseudo attributes\\n(hover, focus, active, etc).\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 5\n    }\n  }, \"For example, on hover, add the gradient you wish to have.\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 10\n    }\n  }), \"<Box\\n  as=\\\"button\\\"\\n  p={4}\\n  color=\\\"white\\\"\\n  fontWeight=\\\"bold\\\"\\n  borderRadius=\\\"md\\\"\\n  bgGradient=\\\"linear(to-r, teal.500,green.500)\\\"\\n  _hover={{\\n    bgGradient: \\\"linear(to-r, red.500, yellow.500)\\\",\\n  }}\\n>\\n  Click here\\n</Box>\\n\")));\n}\n_c = MDXContent;\n;\nMDXContent.isMDXComponent = true;\n\nvar _c;\n\n$RefreshReg$(_c, \"MDXContent\");","map":{"version":3,"sources":["/Users/sunfei/Downloads/website/pages/docs/features/gradient.mdx"],"names":["React","mdx","Layout","frontMatter","title","version","description","slug","lastEdited","undefined","editUrl","author","tags","__resourcePath","__scans","layout","layoutProps","MDXLayout","MDXContent","components","props","isMDXComponent"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport Layout, {  } from '/Users/sunfei/Downloads/website/layouts/index'\nexport const frontMatter = {\n  title: 'Gradient',\n  version: '1.1+',\n  description: 'Learn how to use gradients in Chakra UI. Gradients are a way to transition between two or more colors.',\n  slug: '/docs/features/gradient',\n  lastEdited: undefined,\n  editUrl: 'https://github.com/chakra-ui/chakra-ui/edit/develop/website/pages/docs/features/gradient.mdx',\n  author: undefined,\n  tags: undefined,\n  __resourcePath: 'docs/features/gradient.mdx',\n  __scans: {},\n  layout: 'index'\n};\n\nconst layoutProps = {\n  frontMatter\n};\nconst MDXLayout = Layout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <p>{`Gradients are a way to have transition between two or more colors. You can add\ngradient support using any of the following style props.`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`bgGradient`}</inlineCode>{`: a shorthand, convenient style prop to apply theme-aware\ngradients.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`bgClip`}</inlineCode>{`: a shorthand for `}<inlineCode parentName=\"li\">{`background-clip`}</inlineCode>{` CSS attribute. Useful when\ncreating text gradients.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`backgroundClip`}</inlineCode>{`: the typical `}<inlineCode parentName=\"li\">{`background-clip`}</inlineCode>{` CSS attribute. Useful when\ncreating text gradients.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"background-gradient-api\"\n    }}>{`Background Gradient API`}</h2>\n    <p>{`To add a gradient to an element, pass the `}<inlineCode parentName=\"p\">{`bgGradient`}</inlineCode>{` prop and set its value\nfollowing the API:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`linear(<direction>, <from>, <to>)`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`radial(<from>, <to>)`}</inlineCode></li>\n    </ul>\n    <p>{`You can also use other CSS gradient types like `}<inlineCode parentName=\"p\">{`repeating-linear`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`conic`}</inlineCode>{`, etc.`}</p>\n    <p>{`For linear gradients, the `}<inlineCode parentName=\"p\">{`<direction>`}</inlineCode>{` can be set to the default CSS directions\n(e.g. `}<inlineCode parentName=\"p\">{`to top`}</inlineCode>{`) or the shorthand equivalent (e.g `}<inlineCode parentName=\"p\">{`to-t`}</inlineCode>{`).`}</p>\n    <p>{`Here's the list of supported direction shorthands and their respective values:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"to-t\": \"to top\",\n  \"to-tr\": \"to top right\",\n  \"to-r\": \"to right\",\n  \"to-br\": \"to bottom right\",\n  \"to-b\": \"to bottom\",\n  \"to-bl\": \"to bottom left\",\n  \"to-l\": \"to left\",\n  \"to-tl\": \"to top left\"\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p>{`Let's create a simple gradient from `}<inlineCode parentName=\"p\">{`green.200`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`pink.500`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Box w=\"100%\" h=\"200px\" bgGradient=\"linear(to-r, green.200, pink.500)\" />\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"customizing-colors\"\n    }}>{`Customizing Colors`}</h3>\n    <p>{`You can use both theme-aware color tokens or raw CSS color values.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Box w=\"100%\" h=\"200px\" bgGradient=\"linear(to-l, #7928CA, #FF0080)\" />\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"multiple-color-stops\"\n    }}>{`Multiple Color Stops`}</h3>\n    <p>{`By adding more color-stop points on the gradient line, you can create a highly\ncustomized transition between multiple colors.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Box\n  w=\"100%\"\n  h=\"200px\"\n  bgGradient=\"linear(to-r,gray.300,yellow.400,pink.200)\"\n/>\n`}</code></pre>\n    <p>{`Following the CSS gradient specification, you can also define the distribution\nof the color stops`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Box\n  w=\"100%\"\n  h=\"200px\"\n  bgGradient=\"linear(red.100 0%, orange.100 25%, yellow.100 50%)\"\n/>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"text-gradient-api\"\n    }}>{`Text Gradient API`}</h2>\n    <p>{`To add a text gradient, pass the `}<inlineCode parentName=\"p\">{`bgGradient`}</inlineCode>{` following the API and `}<inlineCode parentName=\"p\">{`bgClip`}</inlineCode>{`\nprop to `}<inlineCode parentName=\"p\">{`text`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Text\n  bgGradient=\"linear(to-l, #7928CA,#FF0080)\"\n  bgClip=\"text\"\n  fontSize=\"6xl\"\n  fontWeight=\"extrabold\"\n>\n  Welcome to Chakra UI\n</Text>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"responsive-gradients\"\n    }}>{`Responsive Gradients`}</h2>\n    <p>{`You can control the responsiveness of gradients by specifying the gradients at\nthe different breakpoints.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Box\n  w=\"100%\"\n  h=\"200px\"\n  bgGradient={[\n    \"linear(to-tr, teal.300,yellow.400)\",\n    \"linear(to-t, blue.200, teal.500)\",\n    \"linear(to-b, orange.100, purple.300)\",\n  ]}\n/>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"changing-gradient-with-pseudo-props\"\n    }}>{`Changing gradient with pseudo props`}</h2>\n    <p>{`You can change the gradient of an element based on common CSS pseudo attributes\n(hover, focus, active, etc).`}</p>\n    <p>{`For example, on hover, add the gradient you wish to have.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Box\n  as=\"button\"\n  p={4}\n  color=\"white\"\n  fontWeight=\"bold\"\n  borderRadius=\"md\"\n  bgGradient=\"linear(to-r, teal.500,green.500)\"\n  _hover={{\n    bgGradient: \"linear(to-r, red.500, yellow.500)\",\n  }}\n>\n  Click here\n</Box>\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"]},"metadata":{},"sourceType":"module"}