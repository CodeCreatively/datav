{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/sunfei/Downloads/website/src/components/mobile-nav.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _this = this,\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Box, Center, CloseButton, Flex, HStack, IconButton, useBreakpointValue, useColorModeValue, useUpdateEffect } from \"@chakra-ui/react\";\nimport { AnimatePresence, motion, useElementScroll } from \"framer-motion\";\nimport useRouteChanged from \"hooks/use-route-changed\";\nimport { getRoutes } from \"layouts/mdx\";\nimport NextLink from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport * as React from \"react\";\nimport { AiOutlineMenu } from \"react-icons/ai\";\nimport { RemoveScroll } from \"react-remove-scroll\";\nimport { LogoIcon } from \"./logo\";\nimport { SidebarContent } from \"./sidebar/sidebar\";\n\nfunction NavLink(_ref) {\n  _s();\n\n  var href = _ref.href,\n      children = _ref.children;\n\n  var _useRouter = useRouter(),\n      pathname = _useRouter.pathname;\n\n  var _href$split = href.split(\"/\"),\n      _href$split2 = _slicedToArray(_href$split, 2),\n      group = _href$split2[1];\n\n  var isActive = pathname.includes(group);\n  return /*#__PURE__*/_jsxDEV(NextLink, {\n    href: href,\n    children: /*#__PURE__*/_jsxDEV(Center, {\n      flex: \"1\",\n      minH: \"40px\",\n      as: \"button\",\n      rounded: \"md\",\n      transition: \"0.2s all\",\n      fontWeight: isActive ? \"semibold\" : \"medium\",\n      bg: isActive ? \"teal.400\" : undefined,\n      borderWidth: isActive ? undefined : \"1px\",\n      color: isActive ? \"white\" : undefined,\n      _hover: {\n        bg: isActive ? \"teal.500\" : useColorModeValue(\"gray.100\", \"whiteAlpha.100\")\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NavLink, \"8c/0L2gPdnxRfVGllOcu7QfPkQU=\", false, function () {\n  return [useRouter, useColorModeValue];\n});\n\n_c = NavLink;\nexport function MobileNavContent(props) {\n  _s2();\n\n  var isOpen = props.isOpen,\n      onClose = props.onClose;\n  var closeBtnRef = React.useRef();\n\n  var _useRouter2 = useRouter(),\n      pathname = _useRouter2.pathname;\n\n  useRouteChanged(onClose);\n  /**\n   * Scenario: Menu is open on mobile, and user resizes to desktop/tablet viewport.\n   * Result: We'll close the menu\n   */\n\n  var showOnBreakpoint = useBreakpointValue({\n    base: true,\n    lg: false\n  });\n  React.useEffect(function () {\n    if (showOnBreakpoint == false) {\n      onClose();\n    }\n  }, [showOnBreakpoint]);\n  useUpdateEffect(function () {\n    if (isOpen) {\n      requestAnimationFrame(function () {\n        var _closeBtnRef$current;\n\n        (_closeBtnRef$current = closeBtnRef.current) === null || _closeBtnRef$current === void 0 ? void 0 : _closeBtnRef$current.focus();\n      });\n    }\n  }, [isOpen]);\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      shadow = _React$useState2[0],\n      setShadow = _React$useState2[1];\n\n  return /*#__PURE__*/_jsxDEV(AnimatePresence, {\n    children: isOpen && /*#__PURE__*/_jsxDEV(RemoveScroll, {\n      forwardProps: true,\n      children: /*#__PURE__*/_jsxDEV(motion.div, {\n        transition: {\n          duration: 0.3\n        },\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1\n        },\n        exit: {\n          opacity: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          direction: \"column\",\n          w: \"100%\",\n          bg: useColorModeValue(\"white\", \"gray.800\"),\n          h: \"100vh\",\n          overflow: \"auto\",\n          pos: \"absolute\",\n          top: \"0\",\n          left: \"0\",\n          zIndex: 20,\n          pb: \"8\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Flex, {\n              justify: \"space-between\",\n              px: \"6\",\n              pt: \"5\",\n              pb: \"4\",\n              children: [/*#__PURE__*/_jsxDEV(LogoIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(CloseButton, {\n                ref: closeBtnRef,\n                onClick: onClose\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              px: \"6\",\n              pb: \"6\",\n              pt: \"2\",\n              shadow: shadow,\n              children: /*#__PURE__*/_jsxDEV(HStack, {\n                children: [/*#__PURE__*/_jsxDEV(NavLink, {\n                  href: \"/docs/getting-started\",\n                  children: \"Docs\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n                  href: \"/guides/integrations/with-cra\",\n                  children: \"Guides\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n                  href: \"/team\",\n                  children: \"Team\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ScrollView, {\n            onScroll: function onScroll(scrolled) {\n              setShadow(scrolled ? \"md\" : undefined);\n            },\n            children: /*#__PURE__*/_jsxDEV(SidebarContent, {\n              pathname: pathname,\n              routes: getRoutes(pathname)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(MobileNavContent, \"eIZ5rT34UQCqW9nFUqZm9bszS1U=\", false, function () {\n  return [useRouter, useRouteChanged, useBreakpointValue, useUpdateEffect, useColorModeValue];\n});\n\n_c2 = MobileNavContent;\n\nvar ScrollView = function ScrollView(props) {\n  _s3();\n\n  var onScroll = props.onScroll,\n      rest = _objectWithoutProperties(props, [\"onScroll\"]);\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      y = _React$useState4[0],\n      setY = _React$useState4[1];\n\n  var elRef = React.useRef();\n\n  var _useElementScroll = useElementScroll(elRef),\n      scrollY = _useElementScroll.scrollY;\n\n  React.useEffect(function () {\n    return scrollY.onChange(function () {\n      return setY(scrollY.get());\n    });\n  }, [scrollY]);\n  useUpdateEffect(function () {\n    onScroll === null || onScroll === void 0 ? void 0 : onScroll(y > 5 ? true : false);\n  }, [y]);\n  return /*#__PURE__*/_jsxDEV(Box, _objectSpread({\n    ref: elRef,\n    flex: \"1\",\n    id: \"routes\",\n    overflow: \"auto\",\n    px: \"6\",\n    pb: \"6\"\n  }, rest), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, _this);\n};\n\n_s3(ScrollView, \"L1PVdp+/dSGKjyHrJWN5R+kJ9RI=\", false, function () {\n  return [useElementScroll, useUpdateEffect];\n});\n\n_c3 = ScrollView;\nexport var MobileNavButton = /*#__PURE__*/React.forwardRef(_c4 = _s4(function (props, ref) {\n  _s4();\n\n  return /*#__PURE__*/_jsxDEV(IconButton, _objectSpread({\n    ref: ref,\n    display: {\n      base: \"flex\",\n      md: \"none\"\n    },\n    \"aria-label\": \"Open menu\",\n    fontSize: \"20px\",\n    color: useColorModeValue(\"gray.800\", \"inherit\"),\n    variant: \"ghost\",\n    icon: /*#__PURE__*/_jsxDEV(AiOutlineMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }, _this)\n  }, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 7\n  }, _this);\n}, \"3skuTHwppfEdh6aKNlffDjyTB8U=\", false, function () {\n  return [useColorModeValue];\n}));\n_c5 = MobileNavButton;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"NavLink\");\n$RefreshReg$(_c2, \"MobileNavContent\");\n$RefreshReg$(_c3, \"ScrollView\");\n$RefreshReg$(_c4, \"MobileNavButton$React.forwardRef\");\n$RefreshReg$(_c5, \"MobileNavButton\");","map":{"version":3,"sources":["/Users/sunfei/Downloads/website/src/components/mobile-nav.tsx"],"names":["Box","Center","CloseButton","Flex","HStack","IconButton","useBreakpointValue","useColorModeValue","useUpdateEffect","AnimatePresence","motion","useElementScroll","useRouteChanged","getRoutes","NextLink","useRouter","React","AiOutlineMenu","RemoveScroll","LogoIcon","SidebarContent","NavLink","href","children","pathname","split","group","isActive","includes","undefined","bg","MobileNavContent","props","isOpen","onClose","closeBtnRef","useRef","showOnBreakpoint","base","lg","useEffect","requestAnimationFrame","current","focus","useState","shadow","setShadow","duration","opacity","scrolled","ScrollView","onScroll","rest","y","setY","elRef","scrollY","onChange","get","MobileNavButton","forwardRef","ref","md"],"mappings":"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","sourcesContent":["import {\n  Box,\n  BoxProps,\n  Center,\n  CloseButton,\n  Flex,\n  HStack,\n  IconButton,\n  IconButtonProps,\n  useBreakpointValue,\n  useColorModeValue,\n  useUpdateEffect,\n} from \"@chakra-ui/react\"\nimport { AnimatePresence, motion, useElementScroll } from \"framer-motion\"\nimport useRouteChanged from \"hooks/use-route-changed\"\nimport { getRoutes } from \"layouts/mdx\"\nimport NextLink from \"next/link\"\nimport { useRouter } from \"next/router\"\nimport * as React from \"react\"\nimport { AiOutlineMenu } from \"react-icons/ai\"\nimport { RemoveScroll } from \"react-remove-scroll\"\nimport { LogoIcon } from \"./logo\"\nimport { SidebarContent } from \"./sidebar/sidebar\"\nimport SponsorButton from \"./sponsor-button\"\n\n\nfunction NavLink({ href, children }) {\n  const { pathname } = useRouter()\n\n  const [, group] = href.split(\"/\")\n  const isActive = pathname.includes(group)\n\n  return (\n    <NextLink href={href}>\n      <Center\n        flex=\"1\"\n        minH=\"40px\"\n        as=\"button\"\n        rounded=\"md\"\n        transition=\"0.2s all\"\n        fontWeight={isActive ? \"semibold\" : \"medium\"}\n        bg={isActive ? \"teal.400\" : undefined}\n        borderWidth={isActive ? undefined : \"1px\"}\n        color={isActive ? \"white\" : undefined}\n        _hover={{\n          bg: isActive\n            ? \"teal.500\"\n            : useColorModeValue(\"gray.100\", \"whiteAlpha.100\"),\n        }}\n      >\n        {children}\n      </Center>\n    </NextLink>\n  )\n}\n\ninterface MobileNavContentProps {\n  isOpen?: boolean\n  onClose?: () => void\n}\n\nexport function MobileNavContent(props: MobileNavContentProps) {\n  const { isOpen, onClose } = props\n  const closeBtnRef = React.useRef<HTMLButtonElement>()\n  const { pathname } = useRouter()\n\n  useRouteChanged(onClose)\n\n  /**\n   * Scenario: Menu is open on mobile, and user resizes to desktop/tablet viewport.\n   * Result: We'll close the menu\n   */\n  const showOnBreakpoint = useBreakpointValue({ base: true, lg: false })\n\n  React.useEffect(() => {\n    if (showOnBreakpoint == false) {\n      onClose()\n    }\n  }, [showOnBreakpoint])\n\n  useUpdateEffect(() => {\n    if (isOpen) {\n      requestAnimationFrame(() => {\n        closeBtnRef.current?.focus()\n      })\n    }\n  }, [isOpen])\n\n  const [shadow, setShadow] = React.useState<string>()\n\n  return (\n    <AnimatePresence>\n      {isOpen && (\n        <RemoveScroll forwardProps>\n          <motion.div\n            transition={{ duration: 0.3 }}\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            exit={{ opacity: 0 }}\n          >\n            <Flex\n              direction=\"column\"\n              w=\"100%\"\n              bg={useColorModeValue(\"white\", \"gray.800\")}\n              h=\"100vh\"\n              overflow=\"auto\"\n              pos=\"absolute\"\n              top=\"0\"\n              left=\"0\"\n              zIndex={20}\n              pb=\"8\"\n            >\n              <Box>\n                <Flex justify=\"space-between\" px=\"6\" pt=\"5\" pb=\"4\">\n                  <LogoIcon />\n         \n                    <CloseButton ref={closeBtnRef} onClick={onClose} />\n                </Flex>\n                <Box px=\"6\" pb=\"6\" pt=\"2\" shadow={shadow}>\n                  <HStack>\n                    <NavLink href=\"/docs/getting-started\">Docs</NavLink>\n                    <NavLink href=\"/guides/integrations/with-cra\">\n                      Guides\n                    </NavLink>\n                    <NavLink href=\"/team\">Team</NavLink>\n                  </HStack>\n                </Box>\n              </Box>\n\n              <ScrollView\n                onScroll={(scrolled) => {\n                  setShadow(scrolled ? \"md\" : undefined)\n                }}\n              >\n                <SidebarContent\n                  pathname={pathname}\n                  routes={getRoutes(pathname)}\n                />\n              </ScrollView>\n            </Flex>\n          </motion.div>\n        </RemoveScroll>\n      )}\n    </AnimatePresence>\n  )\n}\n\nconst ScrollView = (props: BoxProps & { onScroll?: any }) => {\n  const { onScroll, ...rest } = props\n  const [y, setY] = React.useState(0)\n  const elRef = React.useRef<any>()\n  const { scrollY } = useElementScroll(elRef)\n  React.useEffect(() => {\n    return scrollY.onChange(() => setY(scrollY.get()))\n  }, [scrollY])\n\n  useUpdateEffect(() => {\n    onScroll?.(y > 5 ? true : false)\n  }, [y])\n\n  return (\n    <Box\n      ref={elRef}\n      flex=\"1\"\n      id=\"routes\"\n      overflow=\"auto\"\n      px=\"6\"\n      pb=\"6\"\n      {...rest}\n    />\n  )\n}\n\nexport const MobileNavButton = React.forwardRef(\n  (props: IconButtonProps, ref: React.Ref<any>) => {\n    return (\n      <IconButton\n        ref={ref}\n        display={{ base: \"flex\", md: \"none\" }}\n        aria-label=\"Open menu\"\n        fontSize=\"20px\"\n        color={useColorModeValue(\"gray.800\", \"inherit\")}\n        variant=\"ghost\"\n        icon={<AiOutlineMenu />}\n        {...props}\n      />\n    )\n  },\n)\n"]},"metadata":{},"sourceType":"module"}