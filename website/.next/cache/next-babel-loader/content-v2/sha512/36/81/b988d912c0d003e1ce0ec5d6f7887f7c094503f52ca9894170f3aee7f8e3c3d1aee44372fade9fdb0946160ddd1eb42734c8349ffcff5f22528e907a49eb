{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sunfei/Downloads/website/src/components/mdx-components.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Alert, Box, chakra, Kbd, useColorModeValue } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport CarbonAd from \"./carbon-ad\";\nimport CodeBlock from \"./codeblock/codeblock\";\nimport ComponentLinks from \"./component-links\";\nimport IconsList from \"./icons-list\";\nimport PropsTable from \"./props-table\";\n\nconst Pre = props => /*#__PURE__*/_jsxDEV(chakra.div, _objectSpread({\n  my: \"2em\",\n  borderRadius: \"sm\"\n}, props), void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 24\n}, this);\n\nconst Table = props => /*#__PURE__*/_jsxDEV(chakra.div, {\n  overflowX: \"auto\",\n  children: /*#__PURE__*/_jsxDEV(chakra.table, _objectSpread({\n    textAlign: \"left\",\n    mt: \"32px\",\n    width: \"full\"\n  }, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 19,\n  columnNumber: 3\n}, this);\n\nconst THead = props => /*#__PURE__*/_jsxDEV(chakra.th, _objectSpread({\n  bg: useColorModeValue(\"gray.50\", \"whiteAlpha.100\"),\n  fontWeight: \"semibold\",\n  p: 2,\n  fontSize: \"sm\"\n}, props), void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 25,\n  columnNumber: 3\n}, this);\n\nconst TData = props => /*#__PURE__*/_jsxDEV(chakra.td, _objectSpread({\n  p: 2,\n  borderTopWidth: \"1px\",\n  borderColor: \"inherit\",\n  fontSize: \"sm\",\n  whiteSpace: \"normal\"\n}, props), void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 35,\n  columnNumber: 3\n}, this);\n\nconst LinkedHeading = props => /*#__PURE__*/_jsxDEV(chakra.h2, _objectSpread(_objectSpread({\n  \"data-group\": \"\",\n  css: {\n    scrollMarginBlock: \"6.875rem\"\n  }\n}, props), {}, {\n  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"content\",\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this), props.id && /*#__PURE__*/_jsxDEV(chakra.a, {\n    \"aria-label\": \"anchor\",\n    color: \"teal.500\",\n    fontWeight: \"normal\",\n    outline: \"none\",\n    _focus: {\n      opacity: 1,\n      boxShadow: \"outline\"\n    },\n    opacity: 0,\n    _groupHover: {\n      opacity: 1\n    },\n    ml: \"0.375rem\",\n    href: `#${props.id}`,\n    children: \"#\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }, this)]\n}), void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 46,\n  columnNumber: 3\n}, this);\n\nconst InlineCode = props => /*#__PURE__*/_jsxDEV(chakra.code, _objectSpread({\n  apply: \"mdx.code\",\n  color: useColorModeValue(\"purple.500\", \"purple.200\")\n}, props), void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 67,\n  columnNumber: 3\n}, this);\n\nconst MDXComponents = {\n  h1: props => /*#__PURE__*/_jsxDEV(chakra.h1, _objectSpread({\n    apply: \"mdx.h1\"\n  }, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 18\n  }, this),\n  h2: props => /*#__PURE__*/_jsxDEV(LinkedHeading, _objectSpread({\n    apply: \"mdx.h2\"\n  }, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 18\n  }, this),\n  h3: props => /*#__PURE__*/_jsxDEV(LinkedHeading, _objectSpread({\n    as: \"h3\",\n    apply: \"mdx.h3\"\n  }, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 18\n  }, this),\n  h4: props => /*#__PURE__*/_jsxDEV(LinkedHeading, _objectSpread({\n    as: \"h4\",\n    apply: \"mdx.h4\"\n  }, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 18\n  }, this),\n  hr: props => /*#__PURE__*/_jsxDEV(chakra.hr, _objectSpread({\n    apply: \"mdx.hr\"\n  }, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 18\n  }, this),\n  strong: props => /*#__PURE__*/_jsxDEV(Box, _objectSpread({\n    as: \"strong\",\n    fontWeight: \"semibold\"\n  }, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 22\n  }, this),\n  inlineCode: InlineCode,\n  code: CodeBlock,\n  pre: Pre,\n  kbd: Kbd,\n  br: props => /*#__PURE__*/_jsxDEV(Box, _objectSpread({\n    height: \"24px\"\n  }, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 18\n  }, this),\n  table: Table,\n  th: THead,\n  td: TData,\n  a: props => /*#__PURE__*/_jsxDEV(chakra.a, _objectSpread({\n    apply: \"mdx.a\"\n  }, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 17\n  }, this),\n  p: props => /*#__PURE__*/_jsxDEV(chakra.p, _objectSpread({\n    apply: \"mdx.p\"\n  }, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 17\n  }, this),\n  ul: props => /*#__PURE__*/_jsxDEV(chakra.ul, _objectSpread({\n    apply: \"mdx.ul\"\n  }, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 18\n  }, this),\n  ol: props => /*#__PURE__*/_jsxDEV(chakra.ol, _objectSpread({\n    apply: \"mdx.ul\"\n  }, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 18\n  }, this),\n  li: props => /*#__PURE__*/_jsxDEV(chakra.li, _objectSpread({\n    pb: \"4px\"\n  }, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 18\n  }, this),\n  blockquote: props => /*#__PURE__*/_jsxDEV(Alert, _objectSpread({\n    mt: \"4\",\n    role: \"none\",\n    status: \"warning\",\n    variant: \"left-accent\",\n    as: \"blockquote\",\n    rounded: \"4px\",\n    my: \"1.5rem\"\n  }, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this),\n  \"carbon-ad\": CarbonAd,\n  ComponentLinks,\n  IconsList,\n  PropsTable\n};\nexport default MDXComponents;","map":{"version":3,"sources":["/Users/sunfei/Downloads/website/src/components/mdx-components.tsx"],"names":["Alert","Box","chakra","Kbd","useColorModeValue","React","CarbonAd","CodeBlock","ComponentLinks","IconsList","PropsTable","Pre","props","Table","THead","TData","LinkedHeading","scrollMarginBlock","children","id","opacity","boxShadow","InlineCode","MDXComponents","h1","h2","h3","h4","hr","strong","inlineCode","code","pre","kbd","br","table","th","td","a","p","ul","ol","li","blockquote"],"mappings":"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","sourcesContent":["import {\n  Alert,\n  Box,\n  chakra,\n  HTMLChakraProps,\n  Kbd,\n  useColorModeValue,\n} from \"@chakra-ui/react\"\nimport React from \"react\"\nimport CarbonAd from \"./carbon-ad\"\nimport CodeBlock from \"./codeblock/codeblock\"\nimport ComponentLinks from \"./component-links\"\nimport IconsList from \"./icons-list\"\nimport PropsTable from \"./props-table\"\n\nconst Pre = (props) => <chakra.div my=\"2em\" borderRadius=\"sm\" {...props} />\n\nconst Table = (props) => (\n  <chakra.div overflowX=\"auto\">\n    <chakra.table textAlign=\"left\" mt=\"32px\" width=\"full\" {...props} />\n  </chakra.div>\n)\n\nconst THead = (props) => (\n  <chakra.th\n    bg={useColorModeValue(\"gray.50\", \"whiteAlpha.100\")}\n    fontWeight=\"semibold\"\n    p={2}\n    fontSize=\"sm\"\n    {...props}\n  />\n)\n\nconst TData = (props) => (\n  <chakra.td\n    p={2}\n    borderTopWidth=\"1px\"\n    borderColor=\"inherit\"\n    fontSize=\"sm\"\n    whiteSpace=\"normal\"\n    {...props}\n  />\n)\n\nconst LinkedHeading = (props: HTMLChakraProps<\"h2\">) => (\n  <chakra.h2 data-group=\"\" css={{ scrollMarginBlock: \"6.875rem\" }} {...props}>\n    <span className=\"content\">{props.children}</span>\n    {props.id && (\n      <chakra.a\n        aria-label=\"anchor\"\n        color=\"teal.500\"\n        fontWeight=\"normal\"\n        outline=\"none\"\n        _focus={{ opacity: 1, boxShadow: \"outline\" }}\n        opacity={0}\n        _groupHover={{ opacity: 1 }}\n        ml=\"0.375rem\"\n        href={`#${props.id}`}\n      >\n        #\n      </chakra.a>\n    )}\n  </chakra.h2>\n)\n\nconst InlineCode = (props: any) => (\n  <chakra.code\n    apply=\"mdx.code\"\n    color={useColorModeValue(\"purple.500\", \"purple.200\")}\n    {...props}\n  />\n)\n\nconst MDXComponents = {\n  h1: (props) => <chakra.h1 apply=\"mdx.h1\" {...props} />,\n  h2: (props) => <LinkedHeading apply=\"mdx.h2\" {...props} />,\n  h3: (props) => <LinkedHeading as=\"h3\" apply=\"mdx.h3\" {...props} />,\n  h4: (props) => <LinkedHeading as=\"h4\" apply=\"mdx.h4\" {...props} />,\n  hr: (props) => <chakra.hr apply=\"mdx.hr\" {...props} />,\n  strong: (props) => <Box as=\"strong\" fontWeight=\"semibold\" {...props} />,\n  inlineCode: InlineCode,\n  code: CodeBlock,\n  pre: Pre,\n  kbd: Kbd,\n  br: (props) => <Box height=\"24px\" {...props} />,\n  table: Table,\n  th: THead,\n  td: TData,\n  a: (props) => <chakra.a apply=\"mdx.a\" {...props} />,\n  p: (props) => <chakra.p apply=\"mdx.p\" {...props} />,\n  ul: (props) => <chakra.ul apply=\"mdx.ul\" {...props} />,\n  ol: (props) => <chakra.ol apply=\"mdx.ul\" {...props} />,\n  li: (props) => <chakra.li pb=\"4px\" {...props} />,\n  blockquote: (props) => (\n    <Alert\n      mt=\"4\"\n      role=\"none\"\n      status=\"warning\"\n      variant=\"left-accent\"\n      as=\"blockquote\"\n      rounded=\"4px\"\n      my=\"1.5rem\"\n      {...props}\n    />\n  ),\n  \"carbon-ad\": CarbonAd,\n  ComponentLinks,\n  IconsList,\n  PropsTable,\n}\n\nexport default MDXComponents\n"]},"metadata":{},"sourceType":"module"}