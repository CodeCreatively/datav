{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/sunfei/Downloads/website/pages/docs/layout/simple-grid.mdx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport Layout from '/Users/sunfei/Downloads/website/layouts/index';\nexport var frontMatter = {\n  title: 'SimpleGrid',\n  \"package\": '@chakra-ui/layout',\n  description: 'Grid is Box with display set to grid and comes with helpful style shorthand. It renders a `div` element.',\n  slug: '/docs/layout/simple-grid',\n  lastEdited: undefined,\n  editUrl: 'https://github.com/chakra-ui/chakra-ui/edit/develop/website/pages/docs/layout/simple-grid.mdx',\n  author: undefined,\n  tags: undefined,\n  __resourcePath: 'docs/layout/simple-grid.mdx',\n  __scans: {},\n  layout: 'index'\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", _objectSpread(_objectSpread({}, props), {}, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 14\n      }\n    }));\n  };\n};\n\nvar ComponentLinks = makeShortcode(\"ComponentLinks\");\n_c = ComponentLinks;\nvar PropsTable = makeShortcode(\"PropsTable\");\n_c2 = PropsTable;\nvar layoutProps = {\n  frontMatter: frontMatter\n};\nvar MDXLayout = Layout;\nexport default function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _objectSpread(_objectSpread(_objectSpread({}, layoutProps), props), {}, {\n    components: components,\n    mdxType: \"MDXLayout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 10\n    }\n  }), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, \"If you're like me, you probably tend to check the\\n\", mdx(\"a\", _objectSpread(_objectSpread({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 3\n    }\n  }), \"MDN docs\"), \" for\\nanything CSS grid.\"), mdx(ComponentLinks, {\n    github: {\n      \"package\": \"layout\"\n    },\n    npm: {\n      \"package\": \"@chakra-ui/layout\"\n    },\n    mdxType: \"ComponentLinks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, mdx(\"carbon-ad\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 8\n    }\n  })), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, \"SimpleGrid provides a friendly interface to create responsive grid layouts with\\nease. It renders a \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 22\n    }\n  }, \"div\"), \" element with \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 87\n    }\n  }, \"display: grid\"), \".\"), mdx(\"h2\", _objectSpread(_objectSpread({}, {\n    \"id\": \"import\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }), \"Import\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 10\n    }\n  }), \"import { SimpleGrid } from \\\"@chakra-ui/react\\\"\\n\")), mdx(\"h2\", _objectSpread(_objectSpread({}, {\n    \"id\": \"usage\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }), \"Usage\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, \"Specifying the number of columns for the grid layout.\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 10\n    }\n  }), \"<SimpleGrid columns={2} spacing={10}>\\n  <Box bg=\\\"tomato\\\" height=\\\"80px\\\"></Box>\\n  <Box bg=\\\"tomato\\\" height=\\\"80px\\\"></Box>\\n  <Box bg=\\\"tomato\\\" height=\\\"80px\\\"></Box>\\n  <Box bg=\\\"tomato\\\" height=\\\"80px\\\"></Box>\\n  <Box bg=\\\"tomato\\\" height=\\\"80px\\\"></Box>\\n</SimpleGrid>\\n\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, \"You can also make it responsive by passing array or object values into the\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 3\n    }\n  }, \"columns\"), \" prop.\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 10\n    }\n  }), \"// Passing `columns={[2, null, 3]}` and `columns={{sm: 2, md: 3}}`\\n// will have the same effect.\\n\\n<SimpleGrid columns={[2, null, 3]} spacing=\\\"40px\\\">\\n  <Box bg=\\\"tomato\\\" height=\\\"80px\\\"></Box>\\n  <Box bg=\\\"tomato\\\" height=\\\"80px\\\"></Box>\\n  <Box bg=\\\"tomato\\\" height=\\\"80px\\\"></Box>\\n  <Box bg=\\\"tomato\\\" height=\\\"80px\\\"></Box>\\n  <Box bg=\\\"tomato\\\" height=\\\"80px\\\"></Box>\\n</SimpleGrid>\\n\")), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"auto-responsive-grid\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }), \"Auto-responsive grid\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, \"To make the grid responsive and adjust automatically without passing \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 81\n    }\n  }, \"columns\"), \",\\nsimply pass the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 19\n    }\n  }, \"minChildWidth\"), \" prop to specify the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 101\n    }\n  }, \"min-width\"), \" a child should\\nhave before adjusting the layout.\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, \"This uses css grid \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 31\n    }\n  }, \"auto-fit\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 92\n    }\n  }, \"minmax()\"), \" internally.\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 10\n    }\n  }), \"<SimpleGrid minChildWidth=\\\"120px\\\" spacing=\\\"40px\\\">\\n  <Box bg=\\\"tomato\\\" height=\\\"80px\\\"></Box>\\n  <Box bg=\\\"tomato\\\" height=\\\"80px\\\"></Box>\\n  <Box bg=\\\"tomato\\\" height=\\\"80px\\\"></Box>\\n  <Box bg=\\\"tomato\\\" height=\\\"80px\\\"></Box>\\n  <Box bg=\\\"tomato\\\" height=\\\"80px\\\"></Box>\\n  <Box bg=\\\"tomato\\\" height=\\\"80px\\\"></Box>\\n</SimpleGrid>\\n\")), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"changing-the-spacing-for-columns-and-rows\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }), \"Changing the spacing for columns and rows\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, \"Simply pass the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 28\n    }\n  }, \"spacing\"), \" prop to change the row and column spacing between the\\ngrid items. \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, \"SimpleGrid\"), \" also allows you pass \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 95\n    }\n  }, \"spacingX\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 156\n    }\n  }, \"spacingY\"), \" to\\ndefine the space between columns and rows respectively.\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 10\n    }\n  }), \"<SimpleGrid columns={2} spacingX=\\\"40px\\\" spacingY=\\\"20px\\\">\\n  <Box bg=\\\"tomato\\\" height=\\\"80px\\\"></Box>\\n  <Box bg=\\\"tomato\\\" height=\\\"80px\\\"></Box>\\n  <Box bg=\\\"tomato\\\" height=\\\"80px\\\"></Box>\\n  <Box bg=\\\"tomato\\\" height=\\\"80px\\\"></Box>\\n  <Box bg=\\\"tomato\\\" height=\\\"80px\\\"></Box>\\n</SimpleGrid>\\n\")), mdx(\"h2\", _objectSpread(_objectSpread({}, {\n    \"id\": \"props\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }), \"Props\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }, \"SimpleGrid composes \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 32\n    }\n  }, \"Box\"), \" so you can pass all the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 108\n    }\n  }, \"Box\"), \" props and css grid props\\nwith addition of these:\"), mdx(PropsTable, {\n    of: \"SimpleGrid\",\n    mdxType: \"PropsTable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }));\n}\n_c3 = MDXContent;\n;\nMDXContent.isMDXComponent = true;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ComponentLinks\");\n$RefreshReg$(_c2, \"PropsTable\");\n$RefreshReg$(_c3, \"MDXContent\");","map":{"version":3,"sources":["/Users/sunfei/Downloads/website/pages/docs/layout/simple-grid.mdx"],"names":["React","mdx","Layout","frontMatter","title","description","slug","lastEdited","undefined","editUrl","author","tags","__resourcePath","__scans","layout","makeShortcode","name","MDXDefaultShortcode","props","console","warn","ComponentLinks","PropsTable","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport Layout, {  } from '/Users/sunfei/Downloads/website/layouts/index'\nexport const frontMatter = {\n  title: 'SimpleGrid',\n  package: '@chakra-ui/layout',\n  description: 'Grid is Box with display set to grid and comes with helpful style shorthand. It renders a `div` element.',\n  slug: '/docs/layout/simple-grid',\n  lastEdited: undefined,\n  editUrl: 'https://github.com/chakra-ui/chakra-ui/edit/develop/website/pages/docs/layout/simple-grid.mdx',\n  author: undefined,\n  tags: undefined,\n  __resourcePath: 'docs/layout/simple-grid.mdx',\n  __scans: {},\n  layout: 'index'\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst ComponentLinks = makeShortcode(\"ComponentLinks\");\nconst PropsTable = makeShortcode(\"PropsTable\");\nconst layoutProps = {\n  frontMatter\n};\nconst MDXLayout = Layout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <p>{`If you're like me, you probably tend to check the\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout\"\n      }}>{`MDN docs`}</a>{` for\nanything CSS grid.`}</p>\n    <ComponentLinks github={{\n      package: \"layout\"\n    }} npm={{\n      package: \"@chakra-ui/layout\"\n    }} mdxType=\"ComponentLinks\" />\n    <p><carbon-ad></carbon-ad></p>\n    <p>{`SimpleGrid provides a friendly interface to create responsive grid layouts with\nease. It renders a `}<inlineCode parentName=\"p\">{`div`}</inlineCode>{` element with `}<inlineCode parentName=\"p\">{`display: grid`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"import\"\n    }}>{`Import`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { SimpleGrid } from \"@chakra-ui/react\"\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p>{`Specifying the number of columns for the grid layout.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<SimpleGrid columns={2} spacing={10}>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n</SimpleGrid>\n`}</code></pre>\n    <p>{`You can also make it responsive by passing array or object values into the\n`}<inlineCode parentName=\"p\">{`columns`}</inlineCode>{` prop.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`// Passing \\`columns={[2, null, 3]}\\` and \\`columns={{sm: 2, md: 3}}\\`\n// will have the same effect.\n\n<SimpleGrid columns={[2, null, 3]} spacing=\"40px\">\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n</SimpleGrid>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"auto-responsive-grid\"\n    }}>{`Auto-responsive grid`}</h3>\n    <p>{`To make the grid responsive and adjust automatically without passing `}<inlineCode parentName=\"p\">{`columns`}</inlineCode>{`,\nsimply pass the `}<inlineCode parentName=\"p\">{`minChildWidth`}</inlineCode>{` prop to specify the `}<inlineCode parentName=\"p\">{`min-width`}</inlineCode>{` a child should\nhave before adjusting the layout.`}</p>\n    <p>{`This uses css grid `}<inlineCode parentName=\"p\">{`auto-fit`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`minmax()`}</inlineCode>{` internally.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<SimpleGrid minChildWidth=\"120px\" spacing=\"40px\">\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n</SimpleGrid>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"changing-the-spacing-for-columns-and-rows\"\n    }}>{`Changing the spacing for columns and rows`}</h3>\n    <p>{`Simply pass the `}<inlineCode parentName=\"p\">{`spacing`}</inlineCode>{` prop to change the row and column spacing between the\ngrid items. `}<inlineCode parentName=\"p\">{`SimpleGrid`}</inlineCode>{` also allows you pass `}<inlineCode parentName=\"p\">{`spacingX`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`spacingY`}</inlineCode>{` to\ndefine the space between columns and rows respectively.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<SimpleGrid columns={2} spacingX=\"40px\" spacingY=\"20px\">\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n  <Box bg=\"tomato\" height=\"80px\"></Box>\n</SimpleGrid>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <p>{`SimpleGrid composes `}<inlineCode parentName=\"p\">{`Box`}</inlineCode>{` so you can pass all the `}<inlineCode parentName=\"p\">{`Box`}</inlineCode>{` props and css grid props\nwith addition of these:`}</p>\n    <PropsTable of=\"SimpleGrid\" mdxType=\"PropsTable\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"]},"metadata":{},"sourceType":"module"}