{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/sunfei/Downloads/website/pages/docs/layout/box.mdx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport Layout from '/Users/sunfei/Downloads/website/layouts/index';\nexport var frontMatter = {\n  title: 'Box',\n  \"package\": '@chakra-ui/layout',\n  image: 'components/box.svg',\n  description: 'Box is the most abstract component on top of which all other Chakra UI components are built. By default, it renders a `div` element',\n  slug: '/docs/layout/box',\n  lastEdited: undefined,\n  editUrl: 'https://github.com/chakra-ui/chakra-ui/edit/develop/website/pages/docs/layout/box.mdx',\n  author: undefined,\n  tags: undefined,\n  __resourcePath: 'docs/layout/box.mdx',\n  __scans: {},\n  layout: 'index'\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", _objectSpread(_objectSpread({}, props), {}, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 14\n      }\n    }));\n  };\n};\n\nvar ComponentLinks = makeShortcode(\"ComponentLinks\");\n_c = ComponentLinks;\nvar layoutProps = {\n  frontMatter: frontMatter\n};\nvar MDXLayout = Layout;\nexport default function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _objectSpread(_objectSpread(_objectSpread({}, layoutProps), props), {}, {\n    components: components,\n    mdxType: \"MDXLayout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 10\n    }\n  }), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, \"Box is the most abstract component on top of which all other Chakra UI\\ncomponents are built. By default, it renders a \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 50\n    }\n  }, \"div\"), \" element.\"), mdx(ComponentLinks, {\n    github: {\n      \"package\": \"layout\"\n    },\n    npm: {\n      \"package\": \"@chakra-ui/layout\"\n    },\n    mdxType: \"ComponentLinks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, mdx(\"carbon-ad\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 8\n    }\n  })), mdx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, mdx(\"strong\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 8\n    }\n  }, \"The Box component is useful because it helps with 3 common use cases:\")), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"Create responsive layouts with ease.\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Provide a shorthand way to pass styles via props (\", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 81\n    }\n  }, \"bg\"), \" instead of\\n\", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 3\n    }\n  }, \"backgroundColor\"), \").\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Compose new component and allow for override using the \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 86\n    }\n  }, \"as\"), \" prop.\")), mdx(\"h2\", _objectSpread(_objectSpread({}, {\n    \"id\": \"import\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }), \"Import\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 10\n    }\n  }), \"import { Box } from \\\"@chakra-ui/react\\\"\\n\")), mdx(\"h2\", _objectSpread(_objectSpread({}, {\n    \"id\": \"usage\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }), \"Usage\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 10\n    }\n  }), \"<Box bg=\\\"tomato\\\" w=\\\"100%\\\" p={4} color=\\\"white\\\">\\n  This is the Box\\n</Box>\\n\")), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"usage-1\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }), \"Usage\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 10\n    }\n  }), \"// Sample card from Airbnb\\n\\nfunction AirbnbExample() {\\n  const property = {\\n    imageUrl: \\\"https://bit.ly/2Z4KKcF\\\",\\n    imageAlt: \\\"Rear view of modern home with pool\\\",\\n    beds: 3,\\n    baths: 2,\\n    title: \\\"Modern home in city center in the heart of historic Los Angeles\\\",\\n    formattedPrice: \\\"$1,900.00\\\",\\n    reviewCount: 34,\\n    rating: 4,\\n  }\\n\\n  return (\\n    <Box maxW=\\\"sm\\\" borderWidth=\\\"1px\\\" borderRadius=\\\"lg\\\" overflow=\\\"hidden\\\">\\n      <Image src={property.imageUrl} alt={property.imageAlt} />\\n\\n      <Box p=\\\"6\\\">\\n        <Box d=\\\"flex\\\" alignItems=\\\"baseline\\\">\\n          <Badge borderRadius=\\\"full\\\" px=\\\"2\\\" colorScheme=\\\"teal\\\">\\n            New\\n          </Badge>\\n          <Box\\n            color=\\\"gray.500\\\"\\n            fontWeight=\\\"semibold\\\"\\n            letterSpacing=\\\"wide\\\"\\n            fontSize=\\\"xs\\\"\\n            textTransform=\\\"uppercase\\\"\\n            ml=\\\"2\\\"\\n          >\\n            {property.beds} beds &bull; {property.baths} baths\\n          </Box>\\n        </Box>\\n\\n        <Box\\n          mt=\\\"1\\\"\\n          fontWeight=\\\"semibold\\\"\\n          as=\\\"h4\\\"\\n          lineHeight=\\\"tight\\\"\\n          isTruncated\\n        >\\n          {property.title}\\n        </Box>\\n\\n        <Box>\\n          {property.formattedPrice}\\n          <Box as=\\\"span\\\" color=\\\"gray.600\\\" fontSize=\\\"sm\\\">\\n            / wk\\n          </Box>\\n        </Box>\\n\\n        <Box d=\\\"flex\\\" mt=\\\"2\\\" alignItems=\\\"center\\\">\\n          {Array(5)\\n            .fill(\\\"\\\")\\n            .map((_, i) => (\\n              <StarIcon\\n                key={i}\\n                color={i < property.rating ? \\\"teal.500\\\" : \\\"gray.300\\\"}\\n              />\\n            ))}\\n          <Box as=\\\"span\\\" ml=\\\"2\\\" color=\\\"gray.600\\\" fontSize=\\\"sm\\\">\\n            {property.reviewCount} reviews\\n          </Box>\\n        </Box>\\n      </Box>\\n    </Box>\\n  )\\n}\\n\")), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"as-prop\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }), \"as prop\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 5\n    }\n  }, \"You can use the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 28\n    }\n  }, \"as\"), \" prop to change the element render, just like\\nstyled-components.\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 10\n    }\n  }), \"<Box as=\\\"button\\\" borderRadius=\\\"md\\\" bg=\\\"tomato\\\" color=\\\"white\\\" px={4} h={8}>\\n  Button\\n</Box>\\n\")));\n}\n_c2 = MDXContent;\n;\nMDXContent.isMDXComponent = true;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ComponentLinks\");\n$RefreshReg$(_c2, \"MDXContent\");","map":{"version":3,"sources":["/Users/sunfei/Downloads/website/pages/docs/layout/box.mdx"],"names":["React","mdx","Layout","frontMatter","title","image","description","slug","lastEdited","undefined","editUrl","author","tags","__resourcePath","__scans","layout","makeShortcode","name","MDXDefaultShortcode","props","console","warn","ComponentLinks","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport Layout, {  } from '/Users/sunfei/Downloads/website/layouts/index'\nexport const frontMatter = {\n  title: 'Box',\n  package: '@chakra-ui/layout',\n  image: 'components/box.svg',\n  description: 'Box is the most abstract component on top of which all other Chakra UI components are built. By default, it renders a `div` element',\n  slug: '/docs/layout/box',\n  lastEdited: undefined,\n  editUrl: 'https://github.com/chakra-ui/chakra-ui/edit/develop/website/pages/docs/layout/box.mdx',\n  author: undefined,\n  tags: undefined,\n  __resourcePath: 'docs/layout/box.mdx',\n  __scans: {},\n  layout: 'index'\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst ComponentLinks = makeShortcode(\"ComponentLinks\");\nconst layoutProps = {\n  frontMatter\n};\nconst MDXLayout = Layout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <p>{`Box is the most abstract component on top of which all other Chakra UI\ncomponents are built. By default, it renders a `}<inlineCode parentName=\"p\">{`div`}</inlineCode>{` element.`}</p>\n    <ComponentLinks github={{\n      package: \"layout\"\n    }} npm={{\n      package: \"@chakra-ui/layout\"\n    }} mdxType=\"ComponentLinks\" />\n    <p><carbon-ad></carbon-ad></p>\n    <br />\n    <p><strong parentName=\"p\">{`The Box component is useful because it helps with 3 common use cases:`}</strong></p>\n    <ul>\n      <li parentName=\"ul\">{`Create responsive layouts with ease.`}</li>\n      <li parentName=\"ul\">{`Provide a shorthand way to pass styles via props (`}<inlineCode parentName=\"li\">{`bg`}</inlineCode>{` instead of\n`}<inlineCode parentName=\"li\">{`backgroundColor`}</inlineCode>{`).`}</li>\n      <li parentName=\"ul\">{`Compose new component and allow for override using the `}<inlineCode parentName=\"li\">{`as`}</inlineCode>{` prop.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"import\"\n    }}>{`Import`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { Box } from \"@chakra-ui/react\"\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Box bg=\"tomato\" w=\"100%\" p={4} color=\"white\">\n  This is the Box\n</Box>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"usage-1\"\n    }}>{`Usage`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`// Sample card from Airbnb\n\nfunction AirbnbExample() {\n  const property = {\n    imageUrl: \"https://bit.ly/2Z4KKcF\",\n    imageAlt: \"Rear view of modern home with pool\",\n    beds: 3,\n    baths: 2,\n    title: \"Modern home in city center in the heart of historic Los Angeles\",\n    formattedPrice: \"$1,900.00\",\n    reviewCount: 34,\n    rating: 4,\n  }\n\n  return (\n    <Box maxW=\"sm\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\">\n      <Image src={property.imageUrl} alt={property.imageAlt} />\n\n      <Box p=\"6\">\n        <Box d=\"flex\" alignItems=\"baseline\">\n          <Badge borderRadius=\"full\" px=\"2\" colorScheme=\"teal\">\n            New\n          </Badge>\n          <Box\n            color=\"gray.500\"\n            fontWeight=\"semibold\"\n            letterSpacing=\"wide\"\n            fontSize=\"xs\"\n            textTransform=\"uppercase\"\n            ml=\"2\"\n          >\n            {property.beds} beds &bull; {property.baths} baths\n          </Box>\n        </Box>\n\n        <Box\n          mt=\"1\"\n          fontWeight=\"semibold\"\n          as=\"h4\"\n          lineHeight=\"tight\"\n          isTruncated\n        >\n          {property.title}\n        </Box>\n\n        <Box>\n          {property.formattedPrice}\n          <Box as=\"span\" color=\"gray.600\" fontSize=\"sm\">\n            / wk\n          </Box>\n        </Box>\n\n        <Box d=\"flex\" mt=\"2\" alignItems=\"center\">\n          {Array(5)\n            .fill(\"\")\n            .map((_, i) => (\n              <StarIcon\n                key={i}\n                color={i < property.rating ? \"teal.500\" : \"gray.300\"}\n              />\n            ))}\n          <Box as=\"span\" ml=\"2\" color=\"gray.600\" fontSize=\"sm\">\n            {property.reviewCount} reviews\n          </Box>\n        </Box>\n      </Box>\n    </Box>\n  )\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"as-prop\"\n    }}>{`as prop`}</h3>\n    <p>{`You can use the `}<inlineCode parentName=\"p\">{`as`}</inlineCode>{` prop to change the element render, just like\nstyled-components.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Box as=\"button\" borderRadius=\"md\" bg=\"tomato\" color=\"white\" px={4} h={8}>\n  Button\n</Box>\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"]},"metadata":{},"sourceType":"module"}