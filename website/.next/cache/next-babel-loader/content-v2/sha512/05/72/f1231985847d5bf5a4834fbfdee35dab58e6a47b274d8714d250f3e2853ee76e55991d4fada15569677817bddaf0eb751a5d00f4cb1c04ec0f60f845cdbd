{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/sunfei/Downloads/website/pages/docs/data-display/avatar.mdx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport Layout from '/Users/sunfei/Downloads/website/layouts/index';\nexport var frontMatter = {\n  title: 'Avatar',\n  \"package\": '@chakra-ui/avatar',\n  image: 'components/avatar.svg',\n  description: 'The Avatar component is used to represent user, and displays the profile picture, initials or fallback icon.',\n  slug: '/docs/data-display/avatar',\n  lastEdited: undefined,\n  editUrl: 'https://github.com/chakra-ui/chakra-ui/edit/develop/website/pages/docs/data-display/avatar.mdx',\n  author: undefined,\n  tags: undefined,\n  __resourcePath: 'docs/data-display/avatar.mdx',\n  __scans: {},\n  layout: 'index'\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", _objectSpread(_objectSpread({}, props), {}, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 14\n      }\n    }));\n  };\n};\n\nvar ComponentLinks = makeShortcode(\"ComponentLinks\");\n_c = ComponentLinks;\nvar PropsTable = makeShortcode(\"PropsTable\");\n_c2 = PropsTable;\nvar layoutProps = {\n  frontMatter: frontMatter\n};\nvar MDXLayout = Layout;\nexport default function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _objectSpread(_objectSpread(_objectSpread({}, layoutProps), props), {}, {\n    components: components,\n    mdxType: \"MDXLayout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 10\n    }\n  }), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }\n  }, \"Avatar\"), \" component is used to represent a user, and displays the profile\\npicture, initials or fallback icon.\"), mdx(ComponentLinks, {\n    theme: {\n      componentName: \"avatar\"\n    },\n    github: {\n      \"package\": \"avatar\"\n    },\n    npm: {\n      \"package\": \"@chakra-ui/avatar\"\n    },\n    mdxType: \"ComponentLinks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, mdx(\"carbon-ad\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 8\n    }\n  })), mdx(\"h2\", _objectSpread(_objectSpread({}, {\n    \"id\": \"import\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }), \"Import\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, \"Chakra UI exports 3 avatar-related components:\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 27\n    }\n  }, \"Avatar\"), \": The image that represents the user.\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 27\n    }\n  }, \"AvatarBadge\"), \": A wrapper that displays its content on the right corner of the\\navatar.\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 27\n    }\n  }, \"AvatarGroup\"), \": A wrapper to stack multiple Avatars together.\")), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 10\n    }\n  }), \"import { Avatar, AvatarBadge } from \\\"@chakra-ui/react\\\"\\n\")), mdx(\"h2\", _objectSpread(_objectSpread({}, {\n    \"id\": \"usage\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }), \"Usage\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 10\n    }\n  }), \"<Wrap>\\n  <WrapItem>\\n    <Avatar name=\\\"Dan Abrahmov\\\" src=\\\"https://bit.ly/dan-abramov\\\" />\\n  </WrapItem>\\n  <WrapItem>\\n    <Avatar name=\\\"Kola Tioluwani\\\" src=\\\"https://bit.ly/tioluwani-kolawole\\\" />\\n  </WrapItem>\\n  <WrapItem>\\n    <Avatar name=\\\"Kent Dodds\\\" src=\\\"https://bit.ly/kent-c-dodds\\\" />\\n  </WrapItem>\\n  <WrapItem>\\n    <Avatar name=\\\"Ryan Florence\\\" src=\\\"https://bit.ly/ryan-florence\\\" />\\n  </WrapItem>\\n  <WrapItem>\\n    <Avatar name=\\\"Prosper Otemuyiwa\\\" src=\\\"https://bit.ly/prosper-baba\\\" />\\n  </WrapItem>\\n  <WrapItem>\\n    <Avatar name=\\\"Christian Nwamba\\\" src=\\\"https://bit.ly/code-beast\\\" />\\n  </WrapItem>\\n  <WrapItem>\\n    <Avatar name=\\\"Segun Adebayo\\\" src=\\\"https://bit.ly/sage-adebayo\\\" />\\n  </WrapItem>\\n</Wrap>\\n\")), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"avatar-sizes\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }), \"Avatar Sizes\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 16\n    }\n  }, \"Avatar\"), \" component comes in 7 sizes.\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 10\n    }\n  }), \"<Wrap>\\n  <WrapItem>\\n    <Avatar size=\\\"2xs\\\" name=\\\"Dan Abrahmov\\\" src=\\\"https://bit.ly/dan-abramov\\\" />\\n  </WrapItem>\\n  <WrapItem>\\n    <Avatar\\n      size=\\\"xs\\\"\\n      name=\\\"Kola Tioluwani\\\"\\n      src=\\\"https://bit.ly/tioluwani-kolawole\\\"\\n    />{\\\" \\\"}\\n  </WrapItem>\\n  <WrapItem>\\n    <Avatar size=\\\"sm\\\" name=\\\"Kent Dodds\\\" src=\\\"https://bit.ly/kent-c-dodds\\\" />{\\\" \\\"}\\n  </WrapItem>\\n  <WrapItem>\\n    <Avatar size=\\\"md\\\" name=\\\"Ryan Florence\\\" src=\\\"https://bit.ly/ryan-florence\\\" />{\\\" \\\"}\\n  </WrapItem>\\n  <WrapItem>\\n    <Avatar\\n      size=\\\"lg\\\"\\n      name=\\\"Prosper Otemuyiwa\\\"\\n      src=\\\"https://bit.ly/prosper-baba\\\"\\n    />{\\\" \\\"}\\n  </WrapItem>\\n  <WrapItem>\\n    <Avatar size=\\\"xl\\\" name=\\\"Christian Nwamba\\\" src=\\\"https://bit.ly/code-beast\\\" />{\\\" \\\"}\\n  </WrapItem>\\n  <WrapItem>\\n    <Avatar size=\\\"2xl\\\" name=\\\"Segun Adebayo\\\" src=\\\"https://bit.ly/sage-adebayo\\\" />{\\\" \\\"}\\n  </WrapItem>\\n</Wrap>\\n\")), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"avatar-fallbacks\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }\n  }), \"Avatar Fallbacks\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }\n  }, \"If there is an error loading the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 45\n    }\n  }, \"src\"), \" of the avatar, there are 2 fallbacks:\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, \"If there's a \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 44\n    }\n  }, \"name\"), \" prop, we use it to generate the initials and a random,\\naccessible background color.\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, \"If there's no \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 45\n    }\n  }, \"name\"), \" prop, we use a default avatar.\")), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 10\n    }\n  }), \"<Stack direction=\\\"row\\\">\\n  <Avatar name=\\\"Oshigaki Kisame\\\" src=\\\"https://bit.ly/broken-link\\\" />\\n  <Avatar name=\\\"Sasuke Uchiha\\\" src=\\\"https://bit.ly/broken-link\\\" />\\n  <Avatar src=\\\"https://bit.ly/broken-link\\\" />\\n</Stack>\\n\")), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"customize-the-fallback-avatar\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }\n  }), \"Customize the fallback avatar\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 5\n    }\n  }, \"You can customize the background color and icon of the fallback avatar icon to\\nmatch your design requirements.\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, \"To update the background, pass the usual \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 72\n    }\n  }, \"bg\"), \" prop.\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, \"To update the icon svg, pass the \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 64\n    }\n  }, \"icon\"), \" prop.\")), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 10\n    }\n  }), \"<AvatarGroup spacing=\\\"1rem\\\">\\n  <Avatar bg=\\\"red.500\\\" icon={<AiOutlineUser fontSize=\\\"1.5rem\\\" />} />\\n  <Avatar bg=\\\"teal.500\\\" />\\n</AvatarGroup>\\n\")), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"avatar-with-badge\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 5\n    }\n  }), \"Avatar with badge\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 5\n    }\n  }, \"In some products, you might need to show a badge on the right corner of the\\navatar. We call this a \", mdx(\"strong\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 26\n    }\n  }, \"badge\"), \". Here's an example that shows if the user is\\nonline:\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 10\n    }\n  }), \"<Stack direction=\\\"row\\\" spacing={4}>\\n  <Avatar>\\n    <AvatarBadge boxSize=\\\"1.25em\\\" bg=\\\"green.500\\\" />\\n  </Avatar>\\n\\n  {/* You can also change the borderColor and bg of the badge */}\\n  <Avatar>\\n    <AvatarBadge borderColor=\\\"papayawhip\\\" bg=\\\"tomato\\\" boxSize=\\\"1.25em\\\" />\\n  </Avatar>\\n</Stack>\\n\")), mdx(\"blockquote\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 5\n    }\n  }, mdx(\"p\", {\n    parentName: \"blockquote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  }, \"Note the use of \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 54\n    }\n  }, \"em\"), \" for the size of the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 125\n    }\n  }, \"AvatarBadge\"), \". This is useful to size\\nthe badge relative to the avatar font size.\")), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"avatargroup\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 5\n    }\n  }), \"AvatarGroup\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 5\n    }\n  }, \"In some cases, you might need to stack avatars as a group. Use the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 79\n    }\n  }, \"AvatarGroup\"), \"\\ncomponent.\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }, \"To limit the amount of avatars to show, use the \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 79\n    }\n  }, \"max\"), \" prop. It'll truncate the\\navatars and show a \\\"+X\\\" label (where X is the remaining avatars).\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }\n  }, \"To size all the avatars equally, pass the \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 73\n    }\n  }, \"size\"), \" prop.\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }\n  }, \"To adjust the spacing between the avatars, pass the \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 83\n    }\n  }, \"spacing\"), \" prop.\")), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 10\n    }\n  }), \"<AvatarGroup size=\\\"md\\\" max={2}>\\n  <Avatar name=\\\"Ryan Florence\\\" src=\\\"https://bit.ly/ryan-florence\\\" />\\n  <Avatar name=\\\"Segun Adebayo\\\" src=\\\"https://bit.ly/sage-adebayo\\\" />\\n  <Avatar name=\\\"Kent Dodds\\\" src=\\\"https://bit.ly/kent-c-dodds\\\" />\\n  <Avatar name=\\\"Prosper Otemuyiwa\\\" src=\\\"https://bit.ly/prosper-baba\\\" />\\n  <Avatar name=\\\"Christian Nwamba\\\" src=\\\"https://bit.ly/code-beast\\\" />\\n</AvatarGroup>\\n\")), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"changing-the-initials-logic\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 5\n    }\n  }), \"Changing the initials logic\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 5\n    }\n  }, \"Added \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 18\n    }\n  }, \"getInitials\"), \" prop to allow users to manage how initials are generated\\nfrom name. By default we merge the first characters of each word in the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 75\n    }\n  }, \"name\"), \"\\nprop.\"), mdx(\"h2\", _objectSpread(_objectSpread({}, {\n    \"id\": \"props\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 5\n    }\n  }), \"Props\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 5\n    }\n  }, \"The Avatar component composes \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 42\n    }\n  }, \"Box\"), \" component so you can pass props for \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 130\n    }\n  }, \"Box\"), \".\"), mdx(PropsTable, {\n    of: \"Avatar\",\n    mdxType: \"PropsTable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 5\n    }\n  }));\n}\n_c3 = MDXContent;\n;\nMDXContent.isMDXComponent = true;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ComponentLinks\");\n$RefreshReg$(_c2, \"PropsTable\");\n$RefreshReg$(_c3, \"MDXContent\");","map":{"version":3,"sources":["/Users/sunfei/Downloads/website/pages/docs/data-display/avatar.mdx"],"names":["React","mdx","Layout","frontMatter","title","image","description","slug","lastEdited","undefined","editUrl","author","tags","__resourcePath","__scans","layout","makeShortcode","name","MDXDefaultShortcode","props","console","warn","ComponentLinks","PropsTable","layoutProps","MDXLayout","MDXContent","components","componentName","isMDXComponent"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport Layout, {  } from '/Users/sunfei/Downloads/website/layouts/index'\nexport const frontMatter = {\n  title: 'Avatar',\n  package: '@chakra-ui/avatar',\n  image: 'components/avatar.svg',\n  description: 'The Avatar component is used to represent user, and displays the profile picture, initials or fallback icon.',\n  slug: '/docs/data-display/avatar',\n  lastEdited: undefined,\n  editUrl: 'https://github.com/chakra-ui/chakra-ui/edit/develop/website/pages/docs/data-display/avatar.mdx',\n  author: undefined,\n  tags: undefined,\n  __resourcePath: 'docs/data-display/avatar.mdx',\n  __scans: {},\n  layout: 'index'\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst ComponentLinks = makeShortcode(\"ComponentLinks\");\nconst PropsTable = makeShortcode(\"PropsTable\");\nconst layoutProps = {\n  frontMatter\n};\nconst MDXLayout = Layout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <p>{`The `}<inlineCode parentName=\"p\">{`Avatar`}</inlineCode>{` component is used to represent a user, and displays the profile\npicture, initials or fallback icon.`}</p>\n    <ComponentLinks theme={{\n      componentName: \"avatar\"\n    }} github={{\n      package: \"avatar\"\n    }} npm={{\n      package: \"@chakra-ui/avatar\"\n    }} mdxType=\"ComponentLinks\" />\n    <p><carbon-ad></carbon-ad></p>\n    <h2 {...{\n      \"id\": \"import\"\n    }}>{`Import`}</h2>\n    <p>{`Chakra UI exports 3 avatar-related components:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Avatar`}</inlineCode>{`: The image that represents the user.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`AvatarBadge`}</inlineCode>{`: A wrapper that displays its content on the right corner of the\navatar.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`AvatarGroup`}</inlineCode>{`: A wrapper to stack multiple Avatars together.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { Avatar, AvatarBadge } from \"@chakra-ui/react\"\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Wrap>\n  <WrapItem>\n    <Avatar name=\"Dan Abrahmov\" src=\"https://bit.ly/dan-abramov\" />\n  </WrapItem>\n  <WrapItem>\n    <Avatar name=\"Kola Tioluwani\" src=\"https://bit.ly/tioluwani-kolawole\" />\n  </WrapItem>\n  <WrapItem>\n    <Avatar name=\"Kent Dodds\" src=\"https://bit.ly/kent-c-dodds\" />\n  </WrapItem>\n  <WrapItem>\n    <Avatar name=\"Ryan Florence\" src=\"https://bit.ly/ryan-florence\" />\n  </WrapItem>\n  <WrapItem>\n    <Avatar name=\"Prosper Otemuyiwa\" src=\"https://bit.ly/prosper-baba\" />\n  </WrapItem>\n  <WrapItem>\n    <Avatar name=\"Christian Nwamba\" src=\"https://bit.ly/code-beast\" />\n  </WrapItem>\n  <WrapItem>\n    <Avatar name=\"Segun Adebayo\" src=\"https://bit.ly/sage-adebayo\" />\n  </WrapItem>\n</Wrap>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"avatar-sizes\"\n    }}>{`Avatar Sizes`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Avatar`}</inlineCode>{` component comes in 7 sizes.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Wrap>\n  <WrapItem>\n    <Avatar size=\"2xs\" name=\"Dan Abrahmov\" src=\"https://bit.ly/dan-abramov\" />\n  </WrapItem>\n  <WrapItem>\n    <Avatar\n      size=\"xs\"\n      name=\"Kola Tioluwani\"\n      src=\"https://bit.ly/tioluwani-kolawole\"\n    />{\" \"}\n  </WrapItem>\n  <WrapItem>\n    <Avatar size=\"sm\" name=\"Kent Dodds\" src=\"https://bit.ly/kent-c-dodds\" />{\" \"}\n  </WrapItem>\n  <WrapItem>\n    <Avatar size=\"md\" name=\"Ryan Florence\" src=\"https://bit.ly/ryan-florence\" />{\" \"}\n  </WrapItem>\n  <WrapItem>\n    <Avatar\n      size=\"lg\"\n      name=\"Prosper Otemuyiwa\"\n      src=\"https://bit.ly/prosper-baba\"\n    />{\" \"}\n  </WrapItem>\n  <WrapItem>\n    <Avatar size=\"xl\" name=\"Christian Nwamba\" src=\"https://bit.ly/code-beast\" />{\" \"}\n  </WrapItem>\n  <WrapItem>\n    <Avatar size=\"2xl\" name=\"Segun Adebayo\" src=\"https://bit.ly/sage-adebayo\" />{\" \"}\n  </WrapItem>\n</Wrap>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"avatar-fallbacks\"\n    }}>{`Avatar Fallbacks`}</h3>\n    <p>{`If there is an error loading the `}<inlineCode parentName=\"p\">{`src`}</inlineCode>{` of the avatar, there are 2 fallbacks:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`If there's a `}<inlineCode parentName=\"li\">{`name`}</inlineCode>{` prop, we use it to generate the initials and a random,\naccessible background color.`}</li>\n      <li parentName=\"ul\">{`If there's no `}<inlineCode parentName=\"li\">{`name`}</inlineCode>{` prop, we use a default avatar.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Stack direction=\"row\">\n  <Avatar name=\"Oshigaki Kisame\" src=\"https://bit.ly/broken-link\" />\n  <Avatar name=\"Sasuke Uchiha\" src=\"https://bit.ly/broken-link\" />\n  <Avatar src=\"https://bit.ly/broken-link\" />\n</Stack>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"customize-the-fallback-avatar\"\n    }}>{`Customize the fallback avatar`}</h3>\n    <p>{`You can customize the background color and icon of the fallback avatar icon to\nmatch your design requirements.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`To update the background, pass the usual `}<inlineCode parentName=\"li\">{`bg`}</inlineCode>{` prop.`}</li>\n      <li parentName=\"ul\">{`To update the icon svg, pass the `}<inlineCode parentName=\"li\">{`icon`}</inlineCode>{` prop.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<AvatarGroup spacing=\"1rem\">\n  <Avatar bg=\"red.500\" icon={<AiOutlineUser fontSize=\"1.5rem\" />} />\n  <Avatar bg=\"teal.500\" />\n</AvatarGroup>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"avatar-with-badge\"\n    }}>{`Avatar with badge`}</h3>\n    <p>{`In some products, you might need to show a badge on the right corner of the\navatar. We call this a `}<strong parentName=\"p\">{`badge`}</strong>{`. Here's an example that shows if the user is\nonline:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Stack direction=\"row\" spacing={4}>\n  <Avatar>\n    <AvatarBadge boxSize=\"1.25em\" bg=\"green.500\" />\n  </Avatar>\n\n  {/* You can also change the borderColor and bg of the badge */}\n  <Avatar>\n    <AvatarBadge borderColor=\"papayawhip\" bg=\"tomato\" boxSize=\"1.25em\" />\n  </Avatar>\n</Stack>\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Note the use of `}<inlineCode parentName=\"p\">{`em`}</inlineCode>{` for the size of the `}<inlineCode parentName=\"p\">{`AvatarBadge`}</inlineCode>{`. This is useful to size\nthe badge relative to the avatar font size.`}</p>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"avatargroup\"\n    }}>{`AvatarGroup`}</h3>\n    <p>{`In some cases, you might need to stack avatars as a group. Use the `}<inlineCode parentName=\"p\">{`AvatarGroup`}</inlineCode>{`\ncomponent.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`To limit the amount of avatars to show, use the `}<inlineCode parentName=\"li\">{`max`}</inlineCode>{` prop. It'll truncate the\navatars and show a \"+X\" label (where X is the remaining avatars).`}</li>\n      <li parentName=\"ul\">{`To size all the avatars equally, pass the `}<inlineCode parentName=\"li\">{`size`}</inlineCode>{` prop.`}</li>\n      <li parentName=\"ul\">{`To adjust the spacing between the avatars, pass the `}<inlineCode parentName=\"li\">{`spacing`}</inlineCode>{` prop.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<AvatarGroup size=\"md\" max={2}>\n  <Avatar name=\"Ryan Florence\" src=\"https://bit.ly/ryan-florence\" />\n  <Avatar name=\"Segun Adebayo\" src=\"https://bit.ly/sage-adebayo\" />\n  <Avatar name=\"Kent Dodds\" src=\"https://bit.ly/kent-c-dodds\" />\n  <Avatar name=\"Prosper Otemuyiwa\" src=\"https://bit.ly/prosper-baba\" />\n  <Avatar name=\"Christian Nwamba\" src=\"https://bit.ly/code-beast\" />\n</AvatarGroup>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"changing-the-initials-logic\"\n    }}>{`Changing the initials logic`}</h3>\n    <p>{`Added `}<inlineCode parentName=\"p\">{`getInitials`}</inlineCode>{` prop to allow users to manage how initials are generated\nfrom name. By default we merge the first characters of each word in the `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{`\nprop.`}</p>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <p>{`The Avatar component composes `}<inlineCode parentName=\"p\">{`Box`}</inlineCode>{` component so you can pass props for `}<inlineCode parentName=\"p\">{`Box`}</inlineCode>{`.`}</p>\n    <PropsTable of=\"Avatar\" mdxType=\"PropsTable\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"]},"metadata":{},"sourceType":"module"}