{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/sunfei/Downloads/website/src/components/color-palette.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Box, Flex, Grid, useTheme } from \"@chakra-ui/react\";\nimport React from \"react\";\nexport var ColorPalette = function ColorPalette(props) {\n  _s();\n\n  var color = props.color,\n      name = props.name,\n      rest = _objectWithoutProperties(props, [\"color\", \"name\"]);\n\n  var theme = useTheme();\n  var colorCode = color;\n\n  var _color$split = color.split(\".\"),\n      _color$split2 = _slicedToArray(_color$split, 2),\n      shade = _color$split2[0],\n      hue = _color$split2[1];\n\n  if (shade && hue) {\n    colorCode = theme.colors[shade][hue];\n  }\n\n  if (color in theme.colors && typeof theme.colors[color] === \"string\") {\n    colorCode = theme.colors[color];\n  }\n\n  return /*#__PURE__*/_jsxDEV(Flex, _objectSpread(_objectSpread({\n    align: \"center\"\n  }, rest), {}, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      borderRadius: \"md\",\n      boxSize: \"3rem\",\n      boxShadow: \"inner\",\n      mr: 3,\n      bg: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Box, {\n      fontSize: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        fontWeight: \"semibold\",\n        textTransform: \"capitalize\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Box, {\n        textTransform: \"uppercase\",\n        children: colorCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, _this)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ColorPalette, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n\n_c = ColorPalette;\nexport var ColorPalettes = function ColorPalettes(props) {\n  _s2();\n\n  var color = props.color;\n  var theme = useTheme();\n  var keys = Object.keys(theme.colors[color]);\n  return keys.map(function (item) {\n    return /*#__PURE__*/_jsxDEV(ColorPalette, {\n      color: \"\".concat(color, \".\").concat(item),\n      name: \"\".concat(color, \" \").concat(item)\n    }, \"\".concat(color, \".\").concat(item), false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, _this);\n  });\n};\n\n_s2(ColorPalettes, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n\n_c2 = ColorPalettes;\nexport var ColorWrapper = function ColorWrapper(props) {\n  return /*#__PURE__*/_jsxDEV(Grid, _objectSpread({\n    mt: 7,\n    gap: 6,\n    templateColumns: \"repeat( auto-fit, minmax(200px, 1fr) )\"\n  }, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 3\n  }, _this);\n};\n_c3 = ColorWrapper;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ColorPalette\");\n$RefreshReg$(_c2, \"ColorPalettes\");\n$RefreshReg$(_c3, \"ColorWrapper\");","map":{"version":3,"sources":["/Users/sunfei/Downloads/website/src/components/color-palette.tsx"],"names":["Box","Flex","Grid","useTheme","React","ColorPalette","props","color","name","rest","theme","colorCode","split","shade","hue","colors","ColorPalettes","keys","Object","map","item","ColorWrapper"],"mappings":";;;;;;;;;;;;;;AAAA,SACEA,GADF,EAEEC,IAFF,EAIEC,IAJF,EAMEC,QANF,QAOO,kBAPP;AAQA,OAAOC,KAAP,MAAkB,OAAlB;AAIA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAA8B;AAAA;;AAAA,MAChDC,KADgD,GACvBD,KADuB,CAChDC,KADgD;AAAA,MACzCC,IADyC,GACvBF,KADuB,CACzCE,IADyC;AAAA,MAChCC,IADgC,4BACvBH,KADuB;;AAGxD,MAAMI,KAAK,GAAGP,QAAQ,EAAtB;AACA,MAAIQ,SAAS,GAAGJ,KAAhB;;AAJwD,qBAKnCA,KAAK,CAACK,KAAN,CAAY,GAAZ,CALmC;AAAA;AAAA,MAKjDC,KALiD;AAAA,MAK1CC,GAL0C;;AAOxD,MAAID,KAAK,IAAIC,GAAb,EAAkB;AAChBH,IAAAA,SAAS,GAAGD,KAAK,CAACK,MAAN,CAAaF,KAAb,EAAoBC,GAApB,CAAZ;AACD;;AAED,MAAIP,KAAK,IAAIG,KAAK,CAACK,MAAf,IAAyB,OAAOL,KAAK,CAACK,MAAN,CAAaR,KAAb,CAAP,KAA+B,QAA5D,EAAsE;AACpEI,IAAAA,SAAS,GAAGD,KAAK,CAACK,MAAN,CAAaR,KAAb,CAAZ;AACD;;AAED,sBACE,QAAC,IAAD;AAAM,IAAA,KAAK,EAAC;AAAZ,KAAyBE,IAAzB;AAAA,4BACE,QAAC,GAAD;AACE,MAAA,YAAY,EAAC,IADf;AAEE,MAAA,OAAO,EAAC,MAFV;AAGE,MAAA,SAAS,EAAC,OAHZ;AAIE,MAAA,EAAE,EAAE,CAJN;AAKE,MAAA,EAAE,EAAEF;AALN;AAAA;AAAA;AAAA;AAAA,aADF,eAQE,QAAC,GAAD;AAAK,MAAA,QAAQ,EAAC,IAAd;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,UAAU,EAAC,UAAhB;AAA2B,QAAA,aAAa,EAAC,YAAzC;AAAA,kBACGC;AADH;AAAA;AAAA;AAAA;AAAA,eADF,eAIE,QAAC,GAAD;AAAK,QAAA,aAAa,EAAC,WAAnB;AAAA,kBAAgCG;AAAhC;AAAA;AAAA;AAAA;AAAA,eAJF;AAAA;AAAA;AAAA;AAAA;AAAA,aARF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAiBD,CAhCM;;GAAMN,Y;UAGGF,Q;;;KAHHE,Y;AAkCb,OAAO,IAAMW,aAAa,GAAG,SAAhBA,aAAgB,CAACV,KAAD,EAA8B;AAAA;;AAAA,MACjDC,KADiD,GACvCD,KADuC,CACjDC,KADiD;AAEzD,MAAMG,KAAK,GAAGP,QAAQ,EAAtB;AACA,MAAMc,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYP,KAAK,CAACK,MAAN,CAAaR,KAAb,CAAZ,CAAb;AAEA,SAAOU,IAAI,CAACE,GAAL,CAAS,UAACC,IAAD;AAAA,wBACd,QAAC,YAAD;AAEE,MAAA,KAAK,YAAKb,KAAL,cAAca,IAAd,CAFP;AAGE,MAAA,IAAI,YAAKb,KAAL,cAAca,IAAd;AAHN,iBACUb,KADV,cACmBa,IADnB;AAAA;AAAA;AAAA;AAAA,aADc;AAAA,GAAT,CAAP;AAOD,CAZM;;IAAMJ,a;UAEGb,Q;;;MAFHa,a;AAcb,OAAO,IAAMK,YAAiC,GAAG,SAApCA,YAAoC,CAACf,KAAD;AAAA,sBAC/C,QAAC,IAAD;AACE,IAAA,EAAE,EAAE,CADN;AAEE,IAAA,GAAG,EAAE,CAFP;AAGE,IAAA,eAAe,EAAC;AAHlB,KAIMA,KAJN;AAAA;AAAA;AAAA;AAAA,WAD+C;AAAA,CAA1C;MAAMe,Y","sourcesContent":["import {\n  Box,\n  Flex,\n  FlexProps,\n  Grid,\n  GridProps,\n  useTheme,\n} from \"@chakra-ui/react\"\nimport React from \"react\"\n\ntype ColorPaletteProps = FlexProps & { color?: string; name?: string }\n\nexport const ColorPalette = (props: ColorPaletteProps) => {\n  const { color, name, ...rest } = props\n\n  const theme = useTheme()\n  let colorCode = color\n  const [shade, hue] = color.split(\".\")\n\n  if (shade && hue) {\n    colorCode = theme.colors[shade][hue]\n  }\n\n  if (color in theme.colors && typeof theme.colors[color] === \"string\") {\n    colorCode = theme.colors[color]\n  }\n\n  return (\n    <Flex align=\"center\" {...rest}>\n      <Box\n        borderRadius=\"md\"\n        boxSize=\"3rem\"\n        boxShadow=\"inner\"\n        mr={3}\n        bg={color}\n      />\n      <Box fontSize=\"sm\">\n        <Box fontWeight=\"semibold\" textTransform=\"capitalize\">\n          {name}\n        </Box>\n        <Box textTransform=\"uppercase\">{colorCode}</Box>\n      </Box>\n    </Flex>\n  )\n}\n\nexport const ColorPalettes = (props: { color: string }) => {\n  const { color } = props\n  const theme = useTheme()\n  const keys = Object.keys(theme.colors[color])\n\n  return keys.map((item) => (\n    <ColorPalette\n      key={`${color}.${item}`}\n      color={`${color}.${item}`}\n      name={`${color} ${item}`}\n    />\n  ))\n}\n\nexport const ColorWrapper: React.FC<GridProps> = (props) => (\n  <Grid\n    mt={7}\n    gap={6}\n    templateColumns=\"repeat( auto-fit, minmax(200px, 1fr) )\"\n    {...props}\n  />\n)\n"]},"metadata":{},"sourceType":"module"}