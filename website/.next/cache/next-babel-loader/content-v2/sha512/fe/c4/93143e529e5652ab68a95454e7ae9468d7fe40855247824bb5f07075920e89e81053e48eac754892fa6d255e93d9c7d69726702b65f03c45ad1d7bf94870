{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/sunfei/Downloads/website/pages/docs/migration.mdx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport Layout from '/Users/sunfei/Downloads/website/layouts/index';\nexport var frontMatter = {\n  title: 'Upgrading to v1',\n  description: 'How to upgrade your existing Chakra UI projects to v1.0',\n  slug: '/docs/migration',\n  lastEdited: undefined,\n  editUrl: 'https://github.com/chakra-ui/chakra-ui/edit/develop/website/pages/docs/migration.mdx',\n  author: undefined,\n  tags: undefined,\n  __resourcePath: 'docs/migration.mdx',\n  __scans: {},\n  layout: 'index'\n};\nvar layoutProps = {\n  frontMatter: frontMatter\n};\nvar MDXLayout = Layout;\nexport default function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _objectSpread(_objectSpread(_objectSpread({}, layoutProps), props), {}, {\n    components: components,\n    mdxType: \"MDXLayout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }\n  }), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, \"Chakra UI v1.0 is focused on improving the ideas and concepts from v0.8 to make\\nit even easier to create, theme and extend components.\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, \"While there are quite a number of new features we've added, we focused on making\\nChakra UI a stable base to build your own design systems on top of. In the end,\\nwe want make you feel more confident using Chakra UI in production.\"), mdx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }), mdx(\"h2\", _objectSpread(_objectSpread({}, {\n    \"id\": \"highlights\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }), \"Highlights\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, mdx(\"strong\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 8\n    }\n  }, \"Theming API:\"), \" Chakra UI now provides a new theming API which makes it easy to\\nstyle components and their modifiers (sizes, variants, and color scheme) from\\nyour theme.\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, mdx(\"strong\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 8\n    }\n  }, \"Color mode improvement:\"), \" We've fixed the bugs related to Color mode and made\\nit possible to persist color mode, set initial color mode, and lock specific\\ncomponents to a certain color mode.\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, mdx(\"strong\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 8\n    }\n  }, \"Better TypeScript support:\"), \" This means all components have very good\\nTypeScript support and most low-level components like \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 57\n    }\n  }, \"Box\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 110\n    }\n  }, \"Flex\"), \" will support\\nthe \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"as\"), \" prop and types will be extracted properly.\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, mdx(\"strong\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 8\n    }\n  }, \"Theme-aware sx prop:\"), \" Just like \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 79\n    }\n  }, \"theme-ui\"), \", we've added support for the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 165\n    }\n  }, \"sx\"), \"\\nprop to help you add theme-aware styles directly on any Chakra component. This\\nis useful if you're not a fan of style props, and prefer passing all styles in\\none object.\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, mdx(\"strong\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 8\n    }\n  }, \"Deprecated PseudoBox:\"), \" We've removed \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 84\n    }\n  }, \"PseudoBox\"), \" and merged all its props\\nwith \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 8\n    }\n  }, \"Box\"), \" so you can use pseudo style props, like \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 100\n    }\n  }, \"_hover\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 156\n    }\n  }, \"_active\"), \" in any\\nChakra components.\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, mdx(\"strong\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 8\n    }\n  }, \"Dropped Support of IE11:\"), \" We've dropped support of \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 98\n    }\n  }, \"IE11\"), \" \", mdx(\"a\", _objectSpread(_objectSpread({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/chakra-ui/chakra-ui/pull/2762\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 151\n    }\n  }), \"reason\")), mdx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }), mdx(\"h2\", _objectSpread(_objectSpread({}, {\n    \"id\": \"upgrade-steps\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }), \"Upgrade steps\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, \"Here's a list of steps to migrate your project to v1. Don't worry if your styles\\naren't exactly the same, this is to be expected and following these steps will\\nfix it.\"), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"1-update-your-dependencies\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }), \"1. Update your dependencies\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, mdx(\"p\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Install the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 44\n    }\n  }, \"framer-motion\"), \" package. We use this to manage animations and\\ntransitions within components.\")), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, mdx(\"p\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Remove the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 43\n    }\n  }, \"emotion-theming\"), \" package. As at emotion v11, \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 135\n    }\n  }, \"emotion-theming\"), \" as\\nbeen removed and all it's functionality as been migrated to \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 63\n    }\n  }, \"@emotion/react\"), \".\")), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, mdx(\"p\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, \"Rename the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 43\n    }\n  }, \"@emotion/core\"), \" package to \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 116\n    }\n  }, \"@emotion/react\"), \". \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 180\n    }\n  }, \"@emotion/core\"), \" was\\nrecently changed to \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 23\n    }\n  }, \"@emotion/react\"), \" following the v11 release by the\\nemotionjs team.\")), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, mdx(\"p\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \"Rename the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 43\n    }\n  }, \"@chakra-ui/core\"), \" package to \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 118\n    }\n  }, \"@chakra-ui/react\"), \".\")), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, mdx(\"p\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"Update the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 43\n    }\n  }, \"@emotion/styled\"), \" package to v11.\"))), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 10\n    }\n  }), \"\\\"dependencies\\\": {\\n- \\\"@chakra-ui/core\\\": \\\"^0.8.0\\\",\\n+ \\\"@chakra-ui/react\\\": \\\"^1.0.0\\\",\\n  \\\"framer-motion\\\": \\\">=3.0.0\\\",\\n- \\\"@emotion/core\\\": \\\"^10.0.10\\\",\\n+ \\\"@emotion/react\\\": \\\"^11.0.0\\\",\\n  \\\"@emotion/styled\\\": \\\"^11.0.0\\\",\\n- \\\"emotion-theming\\\": \\\"10.0.10\\\"\\n}\\n\")), mdx(\"blockquote\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, mdx(\"p\", {\n    parentName: \"blockquote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, \"Please note that when using Chakra UI in a TypeScript project, a minimum\\nTypeScript version of \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  }, \"3.8.0\"), \" is required.\")), mdx(\"h4\", _objectSpread(_objectSpread({}, {\n    \"id\": \"notes-on-icons\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }), \"Notes on Icons\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, \"Chakra moved all icons to a separate package \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 57\n    }\n  }, \"@chakra-ui/icons\"), \". We recommend\\nusing \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, \"react-icons\"), \" in your projects considering it has a robust set of icons.\\nHowever, you can still install this package.\"), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"2-update-the-themeprovider\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }), \"2. Update the ThemeProvider\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, \"Swap out \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, \"ThemeProvider\"), \" with \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 88\n    }\n  }, \"ChakraProvider\"), \" to make setup cleaner.\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 3\n    }\n  }, \"ChakraProvider\"), \" adds the following providers for you automatically:\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, mdx(\"strong\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 27\n    }\n  }, \"ThemeProvider:\"), \" Provides the theming context for all components.\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, mdx(\"strong\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 27\n    }\n  }, \"ColorModeProvider:\"), \" Provides color mode (light or dark) context to all\\ncomponents.\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, mdx(\"strong\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 27\n    }\n  }, \"GlobalStyle\"), \": Provides the global styles defined in \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 119\n    }\n  }, \"theme.styles.global\"), \"\\nto your application.\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, \"Optionally via prop:\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, mdx(\"strong\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 27\n    }\n  }, \"CSSReset\"), \": To omit the recommended \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 102\n    }\n  }, \"CSSReset\"), \", pass \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 166\n    }\n  }, \"resetCSS={false}\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, mdx(\"strong\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 27\n    }\n  }, \"PortalManager:\"), \" Manages portals and nested portals without using \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 132\n    }\n  }, \"z-index\"), \"\\nin your application. Pass the \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 33\n    }\n  }, \"portalZIndex\"), \" prop.\")), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 10\n    }\n  }), \"-  <ThemeProvider>\\n+    <ChakraProvider>\\n-     <CSSReset />\\n      <App />\\n+    </ChakraProvider>\\n-  </ThemeProvider>\\n\")), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"3-rename-variantcolor-to-colorscheme\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }\n  }), \"3. Rename \", mdx(\"inlineCode\", {\n    parentName: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 22\n    }\n  }, \"variantColor\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 87\n    }\n  }, \"colorScheme\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }\n  }, \"Fire up your \\\"Find and Replace\\\" tool in VSCode or IntelliJ. Find \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 77\n    }\n  }, \"variantColor\"), \"\\nand replace with \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 20\n    }\n  }, \"colorScheme\"), \".\"), mdx(\"blockquote\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }, mdx(\"p\", {\n    parentName: \"blockquote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, mdx(\"strong\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 34\n    }\n  }, \"Reason:\"), \" We renamed this prop to make it easier to understand that this\\nprop represents a visual color scheme, not a css color attribute.\")), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"4-update-layout-size-prop\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  }), \"4. Update layout \", mdx(\"inlineCode\", {\n    parentName: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 29\n    }\n  }, \"size\"), \" prop\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }\n  }, \"Change \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 19\n    }\n  }, \"size\"), \" prop to \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 80\n    }\n  }, \"width\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 137\n    }\n  }, \"w\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 191\n    }\n  }, \"height\"), \", or \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 250\n    }\n  }, \"h\"), \". If you'd like to use\\nonly one prop to manage this, you can rename it to \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 54\n    }\n  }, \"boxSize\"), \".\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 10\n    }\n  }), \"- <Box size=\\\"40px\\\" />\\n+ <Box w=\\\"40px\\\" h=\\\"40px\\\" />\\n# or\\n+ <Box boxSize=\\\"40px\\\" />\\n\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }\n  }, mdx(\"strong\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 8\n    }\n  }, \"We strongly recommend using the \", mdx(\"inlineCode\", {\n    parentName: \"strong\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 67\n    }\n  }, \"width\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"strong\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 130\n    }\n  }, \"height\"), \" props\")), mdx(\"blockquote\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }\n  }, mdx(\"p\", {\n    parentName: \"blockquote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, mdx(\"strong\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 34\n    }\n  }, \"Reason:\"), \" We think the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 95\n    }\n  }, \"size\"), \" prop should only be used for component size\\nmodifiers. The \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 18\n    }\n  }, \"size\"), \" prop has caused a lot of confusion in the past because,\\nin some components (e.g. Button), it means the visual size and in others (e.g\\nBox), it means \", mdx(\"strong\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 18\n    }\n  }, \"width and height\"), \".\")), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"5-replace-elements\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 5\n    }\n  }), \"5. Replace elements\"), mdx(\"h4\", _objectSpread(_objectSpread({}, {\n    \"id\": \"pseudobox\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 5\n    }\n  }), \"PseudoBox\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 5\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 8\n    }\n  }, \"PseudoBox\"), \" is now deprecated and its props can now be directly applied to\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 3\n    }\n  }, \"Box\"), \". Replace all \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 68\n    }\n  }, \"PseudoBox\"), \" components with \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 142\n    }\n  }, \"Box\"), \".\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 10\n    }\n  }), \"-   <PseudoBox\\n+   <Box\\n    >\\n-    <PseudoBox\\n+     <Box\\n        _hover={{ fontWeight: 'semibold' }}\\n        _groupHover={{ color: 'tomato' }}\\n      >\\n-      </PseudoBox>\\n+      </Box>\\n-    </PseudoBox>\\n+    </Box>\\n\")), mdx(\"h4\", _objectSpread(_objectSpread({}, {\n    \"id\": \"callout\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 5\n    }\n  }), \"Callout\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 5\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 8\n    }\n  }, \"Callout\"), \" is now deprecated and you can use an \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 101\n    }\n  }, \"Alert\"), \" instead.\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 10\n    }\n  }), \"-   <Callout\\n+   <Alert\\n      mt={4}\\n      w=\\\"90%\\\"\\n      bg=\\\"black\\\"\\n      variant=\\\"left-accent\\\"\\n    >\\n-   </Callout>\\n+   </Alert>\\n\")), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"6-update-theme-breakpoints\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 5\n    }\n  }), \"6. Update theme breakpoints\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 5\n    }\n  }, mdx(\"strong\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 8\n    }\n  }, \"You may skip this if you didn't customize your breakpoints.\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 5\n    }\n  }, \"To provide easier extensibility and typesafety, breakpoints should now be\\ncreated through \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 19\n    }\n  }, \"createBreakpoints\"), \" by passing an object:\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 10\n    }\n  }), \"+ import { extendTheme } from \\\"@chakra-ui/react\\\"\\n+ import { createBreakpoints } from \\\"@chakra-ui/theme-tools\\\"\\n\\n\\n+ const breakpoints = createBreakpoints({\\n+   sm: \\\"30em\\\",\\n+   md: \\\"48em\\\",\\n+   lg: \\\"62em\\\",\\n+   xl: \\\"80em\\\",\\n+ })\\n\\n\\nconst overrides = {\\n- breakpoints: [\\\"30em\\\", \\\"48em\\\", \\\"62em\\\", \\\"80em\\\"]\\n+ breakpoints,\\n}\\n\\n+ const customTheme = extendTheme(overrides)\\n\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 5\n    }\n  }, mdx(\"strong\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 8\n    }\n  }, \"Please note that unless you plan overriding all components, \", mdx(\"inlineCode\", {\n    parentName: \"strong\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 95\n    }\n  }, \"sm\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"strong\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 154\n    }\n  }, \"xl\"), \" are\\nrequired.\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 5\n    }\n  }, \"You may of course add for example \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 46\n    }\n  }, \"xxl\"), \" or other breakpoints in between -\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 3\n    }\n  }, \"createBreakpoints\"), \" will sort in ascending order. It is adviseable to not mix\\ncss units.\"), mdx(\"blockquote\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 5\n    }\n  }, mdx(\"p\", {\n    parentName: \"blockquote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }\n  }, mdx(\"strong\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 34\n    }\n  }, \"Reason:\"), \" Previously, breakpoints on a theme had to be an array with your\\nbreakpoints in ascending order which made it hard to reference which value was\\ncorrelating to \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 18\n    }\n  }, \"md\"), \" etc. Also, you had to manually manipulate the array by\\ndefining properties on it, which was often overlooked and not typesafe.\")), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"7-colormodescript-optional\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 5\n    }\n  }), \"7. ColorModeScript (optional)\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 5\n    }\n  }, mdx(\"strong\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 8\n    }\n  }, \"You can skip this if you are not already using the color mode feature.\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 5\n    }\n  }, \"To keep color mode settings in sync across pages, add the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 70\n    }\n  }, \"ColorModeScript\"), \".\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 5\n    }\n  }, \"For exhaustive examples, please visit\\n\", mdx(\"a\", _objectSpread(_objectSpread({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/features/color-mode#add-colormodescript\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 3\n    }\n  }), mdx(\"strong\", {\n    parentName: \"a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 10\n    }\n  }, \"Features > Color Mode # Add ColorModeScript\")), \".\"), mdx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 5\n    }\n  }), mdx(\"h2\", _objectSpread(_objectSpread({}, {\n    \"id\": \"component-updates\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 5\n    }\n  }), \"Component Updates\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 5\n    }\n  }, \"We've updated the API of some components to fix bugs, improve usability, types\\nand accessibility.\"), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"accordion\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 5\n    }\n  }), \"Accordion\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }\n  }, \"Update all imports of \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 53\n    }\n  }, \"AccordionHeader\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 121\n    }\n  }, \"AccordionButton\"), \". This is to\\nremove the notion that it is a header when it is actually a button.\")), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 10\n    }\n  }), \"- import { AccordionHeader } from \\\"@chakra-ui/react\\\"\\n+ import { AccordionButton } from \\\"@chakra-ui/react\\\"\\n\")), mdx(\"blockquote\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 5\n    }\n  }, mdx(\"p\", {\n    parentName: \"blockquote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }\n  }, \"WAI-ARIA guidelines require that accordion buttons be wrapped in the\\nappropriate heading tag \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 27\n    }\n  }, \"h2-h6\"), \" based on the page heading flow.\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 5\n    }\n  }, \"We think the name \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 30\n    }\n  }, \"AccordionHeader\"), \" might mislead users to think we handle this\\nout of the box when we don't. Here's how to handle this:\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=false\",\n    \"live\": \"false\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 10\n    }\n  }), \"<Accordion>\\n  <AccordionItem>\\n    <h3>\\n      <AccordionButton>This is the button</AccordionButton>\\n    </h3>\\n    <AccordionPanel>This is the content</AccordionPanel>\\n  </AccordionItem>\\n</Accordion>\\n\")), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }\n  }, \"You can no longer use \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 53\n    }\n  }, \"AccordionItem\"), \" in isolation, it must be used within\\n\", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 3\n    }\n  }, \"Accordion\"), \".\")), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"aspectratiobox\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 5\n    }\n  }), \"AspectRatioBox\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }\n  }, \"Change all imports of \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 53\n    }\n  }, \"AspectRatioBox\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 120\n    }\n  }, \"AspectRatio\"), \".\")), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 10\n    }\n  }), \"- import { AspectRatioBox } from \\\"@chakra-ui/react\\\"\\n+ import  { AspectRatio } from \\\"@chakra-ui/react\\\"\\n\")), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"breadcrumb\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 5\n    }\n  }), \"Breadcrumb\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 5\n    }\n  }, \"Removed support for the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 36\n    }\n  }, \"addSeparator\"), \" prop.\"), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"button\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 5\n    }\n  }), \"Button\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }\n  }, \"We've unified the usage of all icon props to only accept a React element.\\nUpdate all icon names used in \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 33\n    }\n  }, \"leftIcon\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 94\n    }\n  }, \"rightIcon\"), \" to the equivalent icon\\nReact element.\")), mdx(\"blockquote\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 5\n    }\n  }, mdx(\"p\", {\n    parentName: \"blockquote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }\n  }, \"Replacement logic: If \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 60\n    }\n  }, \"leftIcon\"), \" is \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 120\n    }\n  }, \"email\"), \", then replace it with\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 3\n    }\n  }, \"<EmailIcon/>\"), \" from Chakra.\")), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 10\n    }\n  }), \"import { PhoneIcon } from \\\"@chakra-ui/icons\\\"\\n\\n- <Button leftIcon=\\\"phone\\\">Call</Button>\\n+ <Button leftIcon={<PhoneIcon />}>Call</Button>\\n\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 5\n    }\n  }, mdx(\"strong\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 8\n    }\n  }, \"This reduces the effort needed to use custom icons, eliminates TypeScript\\nerrors, and reduces unused icons bloating your app.\")), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }\n  }, mdx(\"p\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 9\n    }\n  }, \"Renamed \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 40\n    }\n  }, \"variantColor\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 104\n    }\n  }, \"colorScheme\"))), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }\n  }, mdx(\"p\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 9\n    }\n  }, \"Removed negative side margins on \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 65\n    }\n  }, \"leftIcon\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 126\n    }\n  }, \"rightIcon\"), \" elements. We\\nbelieve the user should handle these side margins.\\n\", mdx(\"a\", _objectSpread(_objectSpread({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/chakra-ui/chakra-ui/issues/1024\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 3\n    }\n  }), \"#1024\")))), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"checkbox\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 5\n    }\n  }), \"Checkbox\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }\n  }, \"Change \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 38\n    }\n  }, \"variantColor\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 103\n    }\n  }, \"colorScheme\"))), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 10\n    }\n  }), \"- <Checkbox variantColor=\\\"blue\\\">Option</Checkbox>\\n+ <Checkbox colorScheme=\\\"blue\\\">Option</Checkbox>\\n\")), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }\n  }, mdx(\"p\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 9\n    }\n  }, \"Deprecated the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 47\n    }\n  }, \"isFullWidth\"), \" prop. \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 113\n    }\n  }, \"Checkbox\"), \" now takes up the width of its\\nparent by default.\")), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 7\n    }\n  }, mdx(\"p\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 9\n    }\n  }, \"To allow for better checkbox group layout, the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 79\n    }\n  }, \"CheckboxGroup\"), \" component no\\nlonger supports every style prop.\"), mdx(\"p\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 9\n    }\n  }, \"You can now only pass \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 54\n    }\n  }, \"size\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 108\n    }\n  }, \"variant\"), \", and \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 169\n    }\n  }, \"colorScheme\"), \" in addition to\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 3\n    }\n  }, \"CheckboxGroup\"), \"-specific props (\", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 81\n    }\n  }, \"value\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 136\n    }\n  }, \"defaultValue\"), \", and \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 202\n    }\n  }, \"onChange\"), \").\"))), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=false\",\n    \"live\": \"false\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 10\n    }\n  }), \"// before\\n<CheckboxGroup isInline spacing=\\\"40px\\\" defaultValue={[\\\"one\\\", \\\"two\\\"]}>\\n  <Checkbox value=\\\"one\\\">One</Checkbox>\\n  <Checkbox value=\\\"two\\\">Two</Checkbox>\\n  <Checkbox value=\\\"three\\\">Three</Checkbox>\\n</CheckboxGroup>\\n\\n// after\\n<CheckboxGroup defaultValue={[\\\"one\\\", \\\"two\\\"]}>\\n  <Stack spacing=\\\"40px\\\">\\n    <Checkbox value=\\\"one\\\">One</Checkbox>\\n    <Checkbox value=\\\"two\\\">Two</Checkbox>\\n    <Checkbox value=\\\"three\\\">Three</Checkbox>\\n  </Stack>\\n</CheckboxGroup>\\n\")), mdx(\"blockquote\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 5\n    }\n  }, mdx(\"p\", {\n    parentName: \"blockquote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }\n  }, \"We believe a checkbox group's layout should be managed by your design\\nrequirements. The checkboxes can be grouped using \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 53\n    }\n  }, \"Stack\"), \", placed in a grid\\nusing \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 9\n    }\n  }, \"SimpleGrid\"), \" or made to wrap automatically using \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 104\n    }\n  }, \"Wrap\"), \".\")), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"colormode\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 5\n    }\n  }), \"ColorMode\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 7\n    }\n  }, mdx(\"p\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 9\n    }\n  }, \"Color mode now persists correctly when you refresh the page. All you need to\\ndo is add \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 13\n    }\n  }, \"ColorModeScript\"), \" script as the first child of \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 106\n    }\n  }, \"body\"), \".\"), mdx(\"p\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 9\n    }\n  }, \"Here's how to add it for Next.js:\"))), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=false\",\n    \"live\": \"false\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 10\n    }\n  }), \"// pages/_document.js\\nimport { ColorModeScript } from \\\"@chakra-ui/react\\\"\\n\\nexport default class Document extends NextDocument {\\n  static getInitialProps(ctx) {\\n    return NextDocument.getInitialProps(ctx)\\n  }\\n\\n  render() {\\n    return (\\n      <Html>\\n        <Head />\\n        <body>\\n          {/* \\uD83D\\uDC47 Here's the script */}\\n          <ColorModeScript />\\n          <Main />\\n          <NextScript />\\n        </body>\\n      </Html>\\n    )\\n  }\\n}\\n\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 5\n    }\n  }, \"Here's how to add it for Gatsby:\"), mdx(\"h2\", _objectSpread(_objectSpread({}, {\n    \"id\": \"changes\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 5\n    }\n  }), \"Changes\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 7\n    }\n  }, \"The Gatsby plugin has been renamed from \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 71\n    }\n  }, \"gatsby-plugin-chakra-ui\"), \" to\\n\", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 3\n    }\n  }, \"@chakra-ui/gatsby-plugin\"), \". Please make sure to have updated this when\\ninstalling Chakra UI in your next Gatsby project.\")), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=false\",\n    \"live\": \"false\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 10\n    }\n  }), \"// gatsby-ssr.js\\nexport const onRenderBody = ({ setPreBodyComponents }) => {\\n  setPreBodyComponents([<ColorModeScript key=\\\"chakra-ui-no-flash\\\" />])\\n}\\n\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 5\n    }\n  }, \"You can also install the\\n\", mdx(\"a\", _objectSpread(_objectSpread({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.npmjs.com/package/@chakra-ui/gatsby-plugin\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 3\n    }\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 10\n    }\n  }, \"@chakra-ui/gatsby-plugin\")), \"\\npackage which automatically configures \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 42\n    }\n  }, \"ColorModeScript\"), \" along with\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 3\n    }\n  }, \"ChakraProvider\"), \".\"), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"editable\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 5\n    }\n  }), \"Editable\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 5\n    }\n  }, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 16\n    }\n  }, \"onRequestEdit\"), \" prop has been renamed to \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 103\n    }\n  }, \"onEdit\"), \". This applies to both the\\nprop passed to \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 18\n    }\n  }, \"Editable\"), \" as well as the prop in its render props.\"), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"icons\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 5\n    }\n  }), \"Icons\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 7\n    }\n  }, mdx(\"p\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 9\n    }\n  }, \"Basic interface icons provided by Chakra have moved to the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 91\n    }\n  }, \"@chakra-ui/icons\"), \"\\npackage. Replace all \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 24\n    }\n  }, \"<Icon name=\\\"...\\\" />\"), \" elements imported from\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 3\n    }\n  }, \"@chakra-ui/react\"), \" with equivalent React elements imported from\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 3\n    }\n  }, \"@chakra-ui/icons\"), \".\"), mdx(\"blockquote\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 9\n    }\n  }, mdx(\"p\", {\n    parentName: \"blockquote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 11\n    }\n  }, \"Replacement logic: If \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 64\n    }\n  }, \"<Icon name=\\\"search\\\" />\"), \" is used, then replace it with\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 3\n    }\n  }, \"<SearchIcon />\"), \" from Chakra icons package.\")))), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 10\n    }\n  }), \"- import { Icon } from \\\"@chakra-ui/react\\\"\\n- <Icon name=\\\"search\\\" />\\n\\n+ import { SearchIcon } from \\\"@chakra-ui/icons\\\"\\n+ <SearchIcon />\\n\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 5\n    }\n  }, \"Existing icons will appear as a question mark until refactored.\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 7\n    }\n  }, \"We changed the way custom icons are created. Instead of adding custom icons to\\n\", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 3\n    }\n  }, \"theme\"), \" create your own icons using the \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 90\n    }\n  }, \"createIcon\"), \" utility:\")), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=false\",\n    \"live\": \"false\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 10\n    }\n  }), \"import { createIcon } from \\\"@chakra-ui/react\\\"\\n\\nexport const UpDownIcon = createIcon({\\n  displayName: \\\"UpDownIcon\\\",\\n  viewBox: \\\"-1 -1 9 11\\\",\\n  d:\\n    \\\"M 3.5 0L 3.98809 -0.569442L 3.5 -0.987808L 3.01191 -0.569442L 3.5 0ZM 3.5 9L 3.01191 9.56944L 3.5 9.98781L 3.98809 9.56944L 3.5 9ZM 0.488094 3.56944L 3.98809 0.569442L 3.01191 -0.569442L -0.488094 2.43056L 0.488094 3.56944ZM 3.01191 0.569442L 6.51191 3.56944L 7.48809 2.43056L 3.98809 -0.569442L 3.01191 0.569442ZM -0.488094 6.56944L 3.01191 9.56944L 3.98809 8.43056L 0.488094 5.43056L -0.488094 6.56944ZM 3.98809 9.56944L 7.48809 6.56944L 6.51191 5.43056L 3.01191 8.43056L 3.98809 9.56944Z\\\",\\n})\\n\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 5\n    }\n  }, \"As a convenience you can also import \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 49\n    }\n  }, \"createIcon\"), \" from the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 117\n    }\n  }, \"icons\"), \" package along\\nwith other icons:\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=false\",\n    \"live\": \"false\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 10\n    }\n  }), \"import { createIcon, MoonIcon, SunIcon } from \\\"@chakra-ui/icons\\\"\\n\")), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"icon-button\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 5\n    }\n  }), \"Icon Button\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 7\n    }\n  }, \"We've unified the usage of all icon props to only accept a React element.\\nUpdate all icon names used in \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 33\n    }\n  }, \"icon\"), \" to the equivalent icon React element.\")), mdx(\"blockquote\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 5\n    }\n  }, mdx(\"p\", {\n    parentName: \"blockquote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 7\n    }\n  }, \"Replacement logic: If \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 60\n    }\n  }, \"icon\"), \" is \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 116\n    }\n  }, \"email\"), \", then replace it with \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 192\n    }\n  }, \"<EmailIcon/>\"), \"\\nfrom Chakra.\")), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 10\n    }\n  }), \"import { PhoneIcon } from \\\"@chakra-ui/react\\\"\\n\\n- <IconButton icon=\\\"phone\\\">Call</IconButton>\\n+ <IconButton icon={<PhoneIcon />}>Call</IconButton>\\n\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 5\n    }\n  }, mdx(\"strong\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 8\n    }\n  }, \"This reduces the effort needed to use custom icons, eliminates TypeScript\\nerrors, and reduces unused icons bloating your app.\")), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 7\n    }\n  }, \"Renamed \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 39\n    }\n  }, \"variantColor\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 104\n    }\n  }, \"colorScheme\"), \".\")), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"skeleton\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 5\n    }\n  }), \"Skeleton\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 5\n    }\n  }, \"Renamed \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 20\n    }\n  }, \"colorStart\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 83\n    }\n  }, \"colorEnd\"), \" props to \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 149\n    }\n  }, \"startColor\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 212\n    }\n  }, \"endColor\"), \"\\nrespectively.\"), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"image\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 5\n    }\n  }), \"Image\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 5\n    }\n  }, \"Resolved SSR issue with Next.js. If you still run into issues, we recommend\\nusing the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 13\n    }\n  }, \"Img\"), \" component which is a regular \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 94\n    }\n  }, \"img\"), \" tag with support for Chakra\\nprops.\"), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"input\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 5\n    }\n  }), \"Input\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 5\n    }\n  }, \"When using \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 23\n    }\n  }, \"InputAddon\"), \", you no longer need to pass border radius properties to\\nthe \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 7\n    }\n  }, \"Input\"), \". \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 62\n    }\n  }, \"InputGroup\"), \" will intelligently detect the addon and apply the\\nnecessary border to the input.\"), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"link\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 5\n    }\n  }), \"Link\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 5\n    }\n  }, \"Due to accessibility reasons, we've deprecated the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 63\n    }\n  }, \"isDisabled\"), \" prop for \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 131\n    }\n  }, \"Link\"), \".\"), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"list\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 5\n    }\n  }), \"List\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 5\n    }\n  }, \"Renamed \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 20\n    }\n  }, \"stylePos\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 80\n    }\n  }, \"stylePosition\")), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"listicon\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 5\n    }\n  }), \"ListIcon\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 5\n    }\n  }, \"We deprecated the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 30\n    }\n  }, \"icon\"), \" prop. To change the icon rendered, kindly use the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 133\n    }\n  }, \"as\"), \" prop instead.\"), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"stack\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 5\n    }\n  }), \"Stack\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 7\n    }\n  }, \"To reduce the API surface area, we've deprecated the \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 84\n    }\n  }, \"isReversed\"), \" props in\\nfavor of the \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 16\n    }\n  }, \"direction\"), \" prop.\")), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 10\n    }\n  }), \"- <Stack isReversed>\\n+ <Stack direction=\\\"row-reverse\\\">\\n    <Box />\\n    <Box />\\n  </Stack>\\n\")), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 7\n    }\n  }, \"Added support for responsive \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 60\n    }\n  }, \"direction\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 123\n    }\n  }, \"spacing\"), \" props.\")), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=false\",\n    \"live\": \"false\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 10\n    }\n  }), \"<Stack spacing={[\\\"16px\\\", \\\"32px\\\"]} direction={[\\\"column\\\", \\\"row\\\"]}>\\n  <Box />\\n  <Box />\\n</Stack>\\n\")), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"menu\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 5\n    }\n  }), \"Menu\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 7\n    }\n  }, \"All popper related props that used to be passed to \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 82\n    }\n  }, \"MenuList\"), \" component,\\nshould now be passed to \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 27\n    }\n  }, \"Menu\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 7\n    }\n  }, \"The \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 35\n    }\n  }, \"placement\"), \" prop has moved from \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 114\n    }\n  }, \"MenuList\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 175\n    }\n  }, \"Menu\"), \".\")), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"modal\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 5\n    }\n  }), \"Modal\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 7\n    }\n  }, mdx(\"p\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 9\n    }\n  }, \"Removed \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 40\n    }\n  }, \"addAriaLabels\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 106\n    }\n  }, \"formatIds\"), \" props in favor of passing a top-level\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 3\n    }\n  }, \"id\"), \" prop to the modal.\")), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 7\n    }\n  }, mdx(\"p\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 9\n    }\n  }, \"Removed \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 40\n    }\n  }, \"preserveScrollBarGap\"), \" prop. We preserve scroll bar gap by default to\\nprevent any layout shift.\")), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 7\n    }\n  }, mdx(\"p\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 9\n    }\n  }, \"Only pass \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 42\n    }\n  }, \"size\"), \" values defined in the components theme. Hard-coded values\\nwill be ignored. Update the styles in \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 41\n    }\n  }, \"theme.components.Modal\"), \" to reflect your\\ncustom values.\")), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 7\n    }\n  }, mdx(\"p\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 9\n    }\n  }, \"You can now disable focus trap by passing \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 74\n    }\n  }, \"trapFocus={false}\"), \".\")), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 7\n    }\n  }, mdx(\"p\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 9\n    }\n  }, \"Modal comes with preset transitions to make it easy for you. You can remove\\nany existing \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 16\n    }\n  }, \"Scale\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 71\n    }\n  }, \"ScaleFade\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 132\n    }\n  }, \"SlideFade\"), \" components.\"))), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=false\",\n    \"live\": \"false\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 10\n    }\n  }), \"// before\\n<SlideIn in={isOpen}>\\n  {(styles) => (\\n    <Modal onClose={onClose} isOpen>\\n      <ModalOverlay opacity={styles.opacity} />\\n      <ModalContent pb={5} {...styles}>\\n        <ModalHeader>Login now</ModalHeader>\\n        <ModalCloseButton />\\n        <ModalBody>\\n          <Lorem count={2} />\\n        </ModalBody>\\n      </ModalContent>\\n    </Modal>\\n  )}\\n</SlideIn>\\n\\n// after\\n<Modal motionPreset=\\\"slideInBottom\\\" onClose={onClose} isOpen={isOpen}>\\n  <ModalOverlay />\\n  <ModalContent pb={5}>\\n    <ModalHeader>Login now</ModalHeader>\\n    <ModalCloseButton />\\n    <ModalBody>\\n      <Lorem count={2} />\\n    </ModalBody>\\n  </ModalContent>\\n</Modal>\\n\")), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"progress\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 5\n    }\n  }), \"Progress\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 5\n    }\n  }, \"Changed \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 20\n    }\n  }, \"color\"), \" prop to \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 82\n    }\n  }, \"colorScheme\"), \".\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 655,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 655,\n      columnNumber: 10\n    }\n  }), \"- <Progress color=\\\"blue\\\"/>\\n+ <Progress colorScheme=\\\"blue\\\"/>\\n\")), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"circularprogress\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 660,\n      columnNumber: 5\n    }\n  }), \"CircularProgress\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 7\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 27\n    }\n  }, \"trackColor\"), \" prop now takes a specific theme color or a valid \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 136\n    }\n  }, \"css\"), \" color.\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 665,\n      columnNumber: 7\n    }\n  }, \"Changed the \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 665,\n      columnNumber: 43\n    }\n  }, \"thickness\"), \" prop to point to an actual thickness value in \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 665,\n      columnNumber: 148\n    }\n  }, \"px\"), \"\\n(e.g. \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 666,\n      columnNumber: 9\n    }\n  }, \"thickness={4}\"), \")\")), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 668,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 668,\n      columnNumber: 10\n    }\n  }), \"- <CircularProgress value={59} size=\\\"100px\\\" thickness={0.1} />\\n+ <CircularProgress value={59} size=\\\"100px\\\" thickness={10} />\\n\")), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"radio\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 673,\n      columnNumber: 5\n    }\n  }), \"Radio\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 676,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 677,\n      columnNumber: 7\n    }\n  }, \"Changed \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 677,\n      columnNumber: 39\n    }\n  }, \"variantColor\"), \" prop to \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 677,\n      columnNumber: 109\n    }\n  }, \"colorScheme\"), \".\")), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 10\n    }\n  }), \"- <Radio variantColor=\\\"blue\\\">Option</Radio>\\n+ <Radio colorScheme=\\\"blue\\\">Option</Radio>\\n\")), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 684,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 685,\n      columnNumber: 7\n    }\n  }, mdx(\"p\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 686,\n      columnNumber: 9\n    }\n  }, \"Deprecated the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 686,\n      columnNumber: 47\n    }\n  }, \"isFullWidth\"), \" prop. The \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 686,\n      columnNumber: 117\n    }\n  }, \"Radio\"), \" takes up the width of its\\nparent by default.\")), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 689,\n      columnNumber: 7\n    }\n  }, mdx(\"p\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 690,\n      columnNumber: 9\n    }\n  }, \"Deprecated the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 690,\n      columnNumber: 47\n    }\n  }, \"RadioButton\"), \" component. Use the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 690,\n      columnNumber: 126\n    }\n  }, \"useRadio\"), \" hook to create\\ncustom radio buttons. Learn more about\\n\", mdx(\"a\", _objectSpread(_objectSpread({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/form/radio#custom-radio-buttons\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 692,\n      columnNumber: 3\n    }\n  }), \"creating custom radio buttons\"), \".\")), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 696,\n      columnNumber: 7\n    }\n  }, mdx(\"p\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 697,\n      columnNumber: 9\n    }\n  }, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 697,\n      columnNumber: 36\n    }\n  }, \"useRadio\"), \" hook is exported with state and focus management logic for use\\nin creating tailor-made radio component for your application\"))), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"radiogroup\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 701,\n      columnNumber: 5\n    }\n  }), \"RadioGroup\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 704,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 705,\n      columnNumber: 7\n    }\n  }, mdx(\"p\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 706,\n      columnNumber: 9\n    }\n  }, \"Deprecated the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 706,\n      columnNumber: 47\n    }\n  }, \"isFullWidth\"), \" prop. The \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 706,\n      columnNumber: 117\n    }\n  }, \"RadioGroup\"), \" takes up the width of the\\nparent by default.\")), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 7\n    }\n  }, mdx(\"p\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 710,\n      columnNumber: 9\n    }\n  }, \"Deprecated the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 710,\n      columnNumber: 47\n    }\n  }, \"RadioButtonGroup\"), \" component. Use the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 710,\n      columnNumber: 131\n    }\n  }, \"useRadioGroup\"), \" hook to\\ncontrol a group of custom radio buttons. Learn more about\\n\", mdx(\"a\", _objectSpread(_objectSpread({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/docs/form/radio#custom-radio-buttons\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 712,\n      columnNumber: 3\n    }\n  }), \"creating custom radio buttons\"), \".\")), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 716,\n      columnNumber: 7\n    }\n  }, mdx(\"p\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 717,\n      columnNumber: 9\n    }\n  }, \"To allow for better Radio group layout, the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 717,\n      columnNumber: 76\n    }\n  }, \"RadioGroup\"), \" component no longer\\nsupports every style prop. You can only pass \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 718,\n      columnNumber: 48\n    }\n  }, \"size\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 718,\n      columnNumber: 102\n    }\n  }, \"variant\"), \", and\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 719,\n      columnNumber: 3\n    }\n  }, \"colorScheme\"), \" in addition to \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 719,\n      columnNumber: 78\n    }\n  }, \"RadioGroup\"), \" props (\", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 719,\n      columnNumber: 144\n    }\n  }, \"value\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 719,\n      columnNumber: 199\n    }\n  }, \"defaultValue\"), \", and\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 720,\n      columnNumber: 3\n    }\n  }, \"onChange\"), \").\"))), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 723,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=false\",\n    \"live\": \"false\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 723,\n      columnNumber: 10\n    }\n  }), \"// before\\n<RadioGroup isInline defaultValue=\\\"one\\\">\\n  <Radio value=\\\"one\\\">One</Radio>\\n  <Radio value=\\\"two\\\">Two</Radio>\\n  <Radio value=\\\"three\\\">Three</Radio>\\n</RadioGroup>\\n\\n// after\\n<RadioGroup defaultValue=\\\"one\\\">\\n  <Stack direction=\\\"row\\\">\\n    <Radio value=\\\"one\\\">One</Radio>\\n    <Radio value=\\\"two\\\">Two</Radio>\\n    <Radio value=\\\"three\\\">Three</Radio>\\n  </Stack>\\n</RadioGroup>\\n\")), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 743,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 7\n    }\n  }, \"The \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 35\n    }\n  }, \"onChange\"), \" callback now returns the selected \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 127\n    }\n  }, \"value\"), \" not the \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 190\n    }\n  }, \"event\"), \".\")), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 746,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=false\",\n    \"live\": \"false\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 746,\n      columnNumber: 10\n    }\n  }), \"const [value, setValue] = React.useState(\\\"one\\\")\\n\\n// before\\n<RadioGroup value={value} onChange={e => setValue(e.target.value)}>\\n  <Radio value=\\\"one\\\">One</Radio>\\n  <Radio value=\\\"two\\\">Two</Radio>\\n  <Radio value=\\\"three\\\">Three</Radio>\\n</RadioGroup>\\n\\n// after\\n<RadioGroup value={value} onChange={val => setValue(val)}>\\n  <Stack direction=\\\"row\\\">\\n    <Radio value=\\\"one\\\">One</Radio>\\n    <Radio value=\\\"two\\\">Two</Radio>\\n    <Radio value=\\\"three\\\">Three</Radio>\\n  </Stack>\\n</RadioGroup>\\n\")), mdx(\"h2\", _objectSpread(_objectSpread({}, {\n    \"id\": \"slider\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 768,\n      columnNumber: 5\n    }\n  }), \"Slider\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 771,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 772,\n      columnNumber: 7\n    }\n  }, \"Update JSX structure: Wrap \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 772,\n      columnNumber: 58\n    }\n  }, \"SliderFilledTrack\"), \" with \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 772,\n      columnNumber: 130\n    }\n  }, \"SliderTrack\"), \".\")), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 774,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=false\",\n    \"live\": \"false\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 774,\n      columnNumber: 10\n    }\n  }), \"// before\\n<Slider defaultValue={30}>\\n  <SliderTrack />\\n  <SliderFilledTrack />\\n  <SliderThumb />\\n</Slider>\\n\\n// after\\n<Slider defaultValue={30}>\\n  <SliderTrack>\\n    <SliderFilledTrack />\\n  </SliderTrack>\\n  <SliderThumb />\\n</Slider>\\n\")), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"switch\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 793,\n      columnNumber: 5\n    }\n  }), \"Switch\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 796,\n      columnNumber: 5\n    }\n  }, \"Rename the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 796,\n      columnNumber: 23\n    }\n  }, \"color\"), \" prop to \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 796,\n      columnNumber: 85\n    }\n  }, \"colorScheme\"), \".\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 797,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 797,\n      columnNumber: 10\n    }\n  }), \"-  <Switch color=\\\"blue\\\"/>\\n+  <Switch colorScheme=\\\"blue\\\"/>\\n\")), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"tabs\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 802,\n      columnNumber: 5\n    }\n  }), \"Tabs\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 805,\n      columnNumber: 5\n    }\n  }, \"Change \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 805,\n      columnNumber: 19\n    }\n  }, \"variantColor\"), \" prop to \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 805,\n      columnNumber: 88\n    }\n  }, \"colorScheme\"), \".\"), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"tags\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 806,\n      columnNumber: 5\n    }\n  }), \"Tags\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 809,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 810,\n      columnNumber: 7\n    }\n  }, \"Change \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 810,\n      columnNumber: 38\n    }\n  }, \"variantColor\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 810,\n      columnNumber: 103\n    }\n  }, \"colorScheme\"), \".\")), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 812,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 812,\n      columnNumber: 10\n    }\n  }), \"- <Tag variantColor=\\\"blue\\\"/>\\n+ <Tag colorScheme=\\\"blue\\\"/>\\n\")), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 817,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 818,\n      columnNumber: 7\n    }\n  }, \"Added support for \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 818,\n      columnNumber: 49\n    }\n  }, \"isDisabled\"), \" prop on the \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 818,\n      columnNumber: 121\n    }\n  }, \"TagCloseButton\"), \" component.\")), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 820,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=false\",\n    \"live\": \"false\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 820,\n      columnNumber: 10\n    }\n  }), \"<Tag variant=\\\"solid\\\" size=\\\"sm\\\" colorScheme=\\\"cyan\\\">\\n  <TagLabel>Tab Label</TagLabel>\\n  <TagCloseButton isDisabled />\\n</Tag>\\n\")), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 829,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 830,\n      columnNumber: 7\n    }\n  }, \"Default size was changed from \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 830,\n      columnNumber: 61\n    }\n  }, \"lg\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 830,\n      columnNumber: 116\n    }\n  }, \"md\"), \".\")), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"toast\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 832,\n      columnNumber: 5\n    }\n  }), \"Toast\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 835,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 836,\n      columnNumber: 7\n    }\n  }, \"Removed \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 836,\n      columnNumber: 39\n    }\n  }, \"react-spring\"), \" dependency in favor of \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 836,\n      columnNumber: 124\n    }\n  }, \"framer-motion\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 837,\n      columnNumber: 7\n    }\n  }, \"Added support for duplicate toast prevention using \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 837,\n      columnNumber: 82\n    }\n  }, \"toast.isActive\"), \" method.\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 838,\n      columnNumber: 7\n    }\n  }, \"Added support to programmatically close one or all toasts using \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 838,\n      columnNumber: 95\n    }\n  }, \"toast.close\"), \"\\nor \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 839,\n      columnNumber: 6\n    }\n  }, \"toast.closeAll\"), \" methods.\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 840,\n      columnNumber: 7\n    }\n  }, \"Added support to programmatically update a toast using \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 840,\n      columnNumber: 86\n    }\n  }, \"toast.update\"), \" method.\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 841,\n      columnNumber: 7\n    }\n  }, \"Added support for \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 841,\n      columnNumber: 49\n    }\n  }, \"onCloseComplete\"), \" prop, which is a callback function that is\\ninvoked when the toast closes.\")), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"wrap-for-rc-versions\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 844,\n      columnNumber: 5\n    }\n  }), \"Wrap (for \", mdx(\"inlineCode\", {\n    parentName: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 846,\n      columnNumber: 22\n    }\n  }, \"rc\"), \" versions)\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 847,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 848,\n      columnNumber: 7\n    }\n  }, \"Children of \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 848,\n      columnNumber: 43\n    }\n  }, \"Wrap\"), \" must now be \", mdx(\"em\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 848,\n      columnNumber: 109\n    }\n  }, \"wrapped\"), \" in \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 848,\n      columnNumber: 153\n    }\n  }, \"WrapItem\"), \". This makes it easy to\\ncustomize the \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 849,\n      columnNumber: 17\n    }\n  }, \"WrapItem\"), \" using the \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 849,\n      columnNumber: 85\n    }\n  }, \"sx\"), \" prop.\")), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 851,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\",\n    \"metastring\": \"live=false\",\n    \"live\": \"false\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 851,\n      columnNumber: 10\n    }\n  }), \"// before\\n<Wrap spacing=\\\"30px\\\">\\n  <Center w=\\\"180px\\\" h=\\\"80px\\\" bg=\\\"red.200\\\">Box 1</Center>\\n  <Center w=\\\"180px\\\" h=\\\"80px\\\" bg=\\\"green.200\\\">Box 2</Center>\\n  <Center w=\\\"180px\\\" h=\\\"80px\\\" bg=\\\"tomato\\\">Box 3</Center>\\n</Wrap>\\n\\n// after\\n<Wrap spacing=\\\"30px\\\">\\n  <WrapItem>\\n    <Center w=\\\"180px\\\" h=\\\"80px\\\" bg=\\\"red.200\\\">Box 1</Center>\\n  </WrapItem>\\n  <WrapItem>\\n    <Center w=\\\"180px\\\" h=\\\"80px\\\" bg=\\\"green.200\\\">Box 2</Center>\\n  </WrapItem>\\n  <WrapItem>\\n    <Center w=\\\"180px\\\" h=\\\"80px\\\" bg=\\\"tomato\\\">Box 3</Center>\\n  </WrapItem>\\n</Wrap>\\n\")), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"transition-components\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 875,\n      columnNumber: 5\n    }\n  }), \"Transition Components\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 878,\n      columnNumber: 5\n    }\n  }, \"All transition components like \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 878,\n      columnNumber: 43\n    }\n  }, \"Collapse\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 878,\n      columnNumber: 101\n    }\n  }, \"Fade\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 878,\n      columnNumber: 155\n    }\n  }, \"SlideFade\"), \", etc. use the\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 879,\n      columnNumber: 3\n    }\n  }, \"in\"), \" prop to trigger its transition/animation, instead of \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 879,\n      columnNumber: 107\n    }\n  }, \"isOpen\"), \". Change the\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 880,\n      columnNumber: 3\n    }\n  }, \"isOpen\"), \" prop to \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 880,\n      columnNumber: 66\n    }\n  }, \"in\")), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"css-reset\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 881,\n      columnNumber: 5\n    }\n  }), \"CSS Reset\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 884,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 885,\n      columnNumber: 7\n    }\n  }, \"Removed the \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 885,\n      columnNumber: 43\n    }\n  }, \"config\"), \" prop, in favor of adding global styles to\\n\", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 886,\n      columnNumber: 3\n    }\n  }, \"theme.styles.global\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 887,\n      columnNumber: 7\n    }\n  }, \"If you want to remove focus for non-keyboard interactions, install the\\n\", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 888,\n      columnNumber: 3\n    }\n  }, \"focus-visible\"), \" package.\")), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 890,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 890,\n      columnNumber: 10\n    }\n  }), \"yarn add focus-visible\\n# or\\nnpm install focus-visible\\n\\n\\n# at the root of your application\\nimport \\\"focus-visible/dist/focus-visible\\\"\\n\")), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"hooks\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 900,\n      columnNumber: 5\n    }\n  }), \"Hooks\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 903,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 904,\n      columnNumber: 7\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 904,\n      columnNumber: 27\n    }\n  }, \"useDisclosure\"), \" now accepts \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 904,\n      columnNumber: 102\n    }\n  }, \"object\"), \" instead of \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 904,\n      columnNumber: 169\n    }\n  }, \"boolean\"), \" as initial values.\")), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 906,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 906,\n      columnNumber: 10\n    }\n  }), \"- const { isOpen, onToggle } = useDisclosure(true);\\n+ const { isOpen, onToggle } = useDisclosure({defaultIsOpen: true});\\n\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 911,\n      columnNumber: 5\n    }\n  }, mdx(\"strong\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 911,\n      columnNumber: 8\n    }\n  }, \"That's it! Welcome to Chakra UI v1 \\uD83E\\uDD73.\")), mdx(\"blockquote\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 912,\n      columnNumber: 5\n    }\n  }, mdx(\"p\", {\n    parentName: \"blockquote\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 913,\n      columnNumber: 7\n    }\n  }, \"If you still experience issues after migrating, feel free to create an issue\\nor join our Discord chat here: \", mdx(\"a\", _objectSpread(_objectSpread({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://discord.gg/dQHfcWF\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 914,\n      columnNumber: 34\n    }\n  }), \"https://discord.gg/dQHfcWF\"))));\n}\n_c = MDXContent;\n;\nMDXContent.isMDXComponent = true;\n\nvar _c;\n\n$RefreshReg$(_c, \"MDXContent\");","map":{"version":3,"sources":["/Users/sunfei/Downloads/website/pages/docs/migration.mdx"],"names":["React","mdx","Layout","frontMatter","title","description","slug","lastEdited","undefined","editUrl","author","tags","__resourcePath","__scans","layout","layoutProps","MDXLayout","MDXContent","components","props","isMDXComponent"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport Layout, {  } from '/Users/sunfei/Downloads/website/layouts/index'\nexport const frontMatter = {\n  title: 'Upgrading to v1',\n  description: 'How to upgrade your existing Chakra UI projects to v1.0',\n  slug: '/docs/migration',\n  lastEdited: undefined,\n  editUrl: 'https://github.com/chakra-ui/chakra-ui/edit/develop/website/pages/docs/migration.mdx',\n  author: undefined,\n  tags: undefined,\n  __resourcePath: 'docs/migration.mdx',\n  __scans: {},\n  layout: 'index'\n};\n\nconst layoutProps = {\n  frontMatter\n};\nconst MDXLayout = Layout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <p>{`Chakra UI v1.0 is focused on improving the ideas and concepts from v0.8 to make\nit even easier to create, theme and extend components.`}</p>\n    <p>{`While there are quite a number of new features we've added, we focused on making\nChakra UI a stable base to build your own design systems on top of. In the end,\nwe want make you feel more confident using Chakra UI in production.`}</p>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"highlights\"\n    }}>{`Highlights`}</h2>\n    <p><strong parentName=\"p\">{`Theming API:`}</strong>{` Chakra UI now provides a new theming API which makes it easy to\nstyle components and their modifiers (sizes, variants, and color scheme) from\nyour theme.`}</p>\n    <p><strong parentName=\"p\">{`Color mode improvement:`}</strong>{` We've fixed the bugs related to Color mode and made\nit possible to persist color mode, set initial color mode, and lock specific\ncomponents to a certain color mode.`}</p>\n    <p><strong parentName=\"p\">{`Better TypeScript support:`}</strong>{` This means all components have very good\nTypeScript support and most low-level components like `}<inlineCode parentName=\"p\">{`Box`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`Flex`}</inlineCode>{` will support\nthe `}<inlineCode parentName=\"p\">{`as`}</inlineCode>{` prop and types will be extracted properly.`}</p>\n    <p><strong parentName=\"p\">{`Theme-aware sx prop:`}</strong>{` Just like `}<inlineCode parentName=\"p\">{`theme-ui`}</inlineCode>{`, we've added support for the `}<inlineCode parentName=\"p\">{`sx`}</inlineCode>{`\nprop to help you add theme-aware styles directly on any Chakra component. This\nis useful if you're not a fan of style props, and prefer passing all styles in\none object.`}</p>\n    <p><strong parentName=\"p\">{`Deprecated PseudoBox:`}</strong>{` We've removed `}<inlineCode parentName=\"p\">{`PseudoBox`}</inlineCode>{` and merged all its props\nwith `}<inlineCode parentName=\"p\">{`Box`}</inlineCode>{` so you can use pseudo style props, like `}<inlineCode parentName=\"p\">{`_hover`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`_active`}</inlineCode>{` in any\nChakra components.`}</p>\n    <p><strong parentName=\"p\">{`Dropped Support of IE11:`}</strong>{` We've dropped support of `}<inlineCode parentName=\"p\">{`IE11`}</inlineCode>{` `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/chakra-ui/chakra-ui/pull/2762\"\n      }}>{`reason`}</a></p>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"upgrade-steps\"\n    }}>{`Upgrade steps`}</h2>\n    <p>{`Here's a list of steps to migrate your project to v1. Don't worry if your styles\naren't exactly the same, this is to be expected and following these steps will\nfix it.`}</p>\n    <h3 {...{\n      \"id\": \"1-update-your-dependencies\"\n    }}>{`1. Update your dependencies`}</h3>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Install the `}<inlineCode parentName=\"p\">{`framer-motion`}</inlineCode>{` package. We use this to manage animations and\ntransitions within components.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Remove the `}<inlineCode parentName=\"p\">{`emotion-theming`}</inlineCode>{` package. As at emotion v11, `}<inlineCode parentName=\"p\">{`emotion-theming`}</inlineCode>{` as\nbeen removed and all it's functionality as been migrated to `}<inlineCode parentName=\"p\">{`@emotion/react`}</inlineCode>{`.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Rename the `}<inlineCode parentName=\"p\">{`@emotion/core`}</inlineCode>{` package to `}<inlineCode parentName=\"p\">{`@emotion/react`}</inlineCode>{`. `}<inlineCode parentName=\"p\">{`@emotion/core`}</inlineCode>{` was\nrecently changed to `}<inlineCode parentName=\"p\">{`@emotion/react`}</inlineCode>{` following the v11 release by the\nemotionjs team.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Rename the `}<inlineCode parentName=\"p\">{`@chakra-ui/core`}</inlineCode>{` package to `}<inlineCode parentName=\"p\">{`@chakra-ui/react`}</inlineCode>{`.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Update the `}<inlineCode parentName=\"p\">{`@emotion/styled`}</inlineCode>{` package to v11.`}</p>\n      </li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`\"dependencies\": {\n- \"@chakra-ui/core\": \"^0.8.0\",\n+ \"@chakra-ui/react\": \"^1.0.0\",\n  \"framer-motion\": \">=3.0.0\",\n- \"@emotion/core\": \"^10.0.10\",\n+ \"@emotion/react\": \"^11.0.0\",\n  \"@emotion/styled\": \"^11.0.0\",\n- \"emotion-theming\": \"10.0.10\"\n}\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Please note that when using Chakra UI in a TypeScript project, a minimum\nTypeScript version of `}<inlineCode parentName=\"p\">{`3.8.0`}</inlineCode>{` is required.`}</p>\n    </blockquote>\n    <h4 {...{\n      \"id\": \"notes-on-icons\"\n    }}>{`Notes on Icons`}</h4>\n    <p>{`Chakra moved all icons to a separate package `}<inlineCode parentName=\"p\">{`@chakra-ui/icons`}</inlineCode>{`. We recommend\nusing `}<inlineCode parentName=\"p\">{`react-icons`}</inlineCode>{` in your projects considering it has a robust set of icons.\nHowever, you can still install this package.`}</p>\n    <h3 {...{\n      \"id\": \"2-update-the-themeprovider\"\n    }}>{`2. Update the ThemeProvider`}</h3>\n    <p>{`Swap out `}<inlineCode parentName=\"p\">{`ThemeProvider`}</inlineCode>{` with `}<inlineCode parentName=\"p\">{`ChakraProvider`}</inlineCode>{` to make setup cleaner.\n`}<inlineCode parentName=\"p\">{`ChakraProvider`}</inlineCode>{` adds the following providers for you automatically:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`ThemeProvider:`}</strong>{` Provides the theming context for all components.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`ColorModeProvider:`}</strong>{` Provides color mode (light or dark) context to all\ncomponents.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`GlobalStyle`}</strong>{`: Provides the global styles defined in `}<inlineCode parentName=\"li\">{`theme.styles.global`}</inlineCode>{`\nto your application.`}</li>\n    </ul>\n    <p>{`Optionally via prop:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`CSSReset`}</strong>{`: To omit the recommended `}<inlineCode parentName=\"li\">{`CSSReset`}</inlineCode>{`, pass `}<inlineCode parentName=\"li\">{`resetCSS={false}`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`PortalManager:`}</strong>{` Manages portals and nested portals without using `}<inlineCode parentName=\"li\">{`z-index`}</inlineCode>{`\nin your application. Pass the `}<inlineCode parentName=\"li\">{`portalZIndex`}</inlineCode>{` prop.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`-  <ThemeProvider>\n+    <ChakraProvider>\n-     <CSSReset />\n      <App />\n+    </ChakraProvider>\n-  </ThemeProvider>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"3-rename-variantcolor-to-colorscheme\"\n    }}>{`3. Rename `}<inlineCode parentName=\"h3\">{`variantColor`}</inlineCode>{` to `}<inlineCode parentName=\"h3\">{`colorScheme`}</inlineCode></h3>\n    <p>{`Fire up your \"Find and Replace\" tool in VSCode or IntelliJ. Find `}<inlineCode parentName=\"p\">{`variantColor`}</inlineCode>{`\nand replace with `}<inlineCode parentName=\"p\">{`colorScheme`}</inlineCode>{`.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`Reason:`}</strong>{` We renamed this prop to make it easier to understand that this\nprop represents a visual color scheme, not a css color attribute.`}</p>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"4-update-layout-size-prop\"\n    }}>{`4. Update layout `}<inlineCode parentName=\"h3\">{`size`}</inlineCode>{` prop`}</h3>\n    <p>{`Change `}<inlineCode parentName=\"p\">{`size`}</inlineCode>{` prop to `}<inlineCode parentName=\"p\">{`width`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`w`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`height`}</inlineCode>{`, or `}<inlineCode parentName=\"p\">{`h`}</inlineCode>{`. If you'd like to use\nonly one prop to manage this, you can rename it to `}<inlineCode parentName=\"p\">{`boxSize`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`- <Box size=\"40px\" />\n+ <Box w=\"40px\" h=\"40px\" />\n# or\n+ <Box boxSize=\"40px\" />\n`}</code></pre>\n    <p><strong parentName=\"p\">{`We strongly recommend using the `}<inlineCode parentName=\"strong\">{`width`}</inlineCode>{` and `}<inlineCode parentName=\"strong\">{`height`}</inlineCode>{` props`}</strong></p>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`Reason:`}</strong>{` We think the `}<inlineCode parentName=\"p\">{`size`}</inlineCode>{` prop should only be used for component size\nmodifiers. The `}<inlineCode parentName=\"p\">{`size`}</inlineCode>{` prop has caused a lot of confusion in the past because,\nin some components (e.g. Button), it means the visual size and in others (e.g\nBox), it means `}<strong parentName=\"p\">{`width and height`}</strong>{`.`}</p>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"5-replace-elements\"\n    }}>{`5. Replace elements`}</h3>\n    <h4 {...{\n      \"id\": \"pseudobox\"\n    }}>{`PseudoBox`}</h4>\n    <p><inlineCode parentName=\"p\">{`PseudoBox`}</inlineCode>{` is now deprecated and its props can now be directly applied to\n`}<inlineCode parentName=\"p\">{`Box`}</inlineCode>{`. Replace all `}<inlineCode parentName=\"p\">{`PseudoBox`}</inlineCode>{` components with `}<inlineCode parentName=\"p\">{`Box`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`-   <PseudoBox\n+   <Box\n    >\n-    <PseudoBox\n+     <Box\n        _hover={{ fontWeight: 'semibold' }}\n        _groupHover={{ color: 'tomato' }}\n      >\n-      </PseudoBox>\n+      </Box>\n-    </PseudoBox>\n+    </Box>\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"callout\"\n    }}>{`Callout`}</h4>\n    <p><inlineCode parentName=\"p\">{`Callout`}</inlineCode>{` is now deprecated and you can use an `}<inlineCode parentName=\"p\">{`Alert`}</inlineCode>{` instead.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`-   <Callout\n+   <Alert\n      mt={4}\n      w=\"90%\"\n      bg=\"black\"\n      variant=\"left-accent\"\n    >\n-   </Callout>\n+   </Alert>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"6-update-theme-breakpoints\"\n    }}>{`6. Update theme breakpoints`}</h3>\n    <p><strong parentName=\"p\">{`You may skip this if you didn't customize your breakpoints.`}</strong></p>\n    <p>{`To provide easier extensibility and typesafety, breakpoints should now be\ncreated through `}<inlineCode parentName=\"p\">{`createBreakpoints`}</inlineCode>{` by passing an object:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`+ import { extendTheme } from \"@chakra-ui/react\"\n+ import { createBreakpoints } from \"@chakra-ui/theme-tools\"\n\n\n+ const breakpoints = createBreakpoints({\n+   sm: \"30em\",\n+   md: \"48em\",\n+   lg: \"62em\",\n+   xl: \"80em\",\n+ })\n\n\nconst overrides = {\n- breakpoints: [\"30em\", \"48em\", \"62em\", \"80em\"]\n+ breakpoints,\n}\n\n+ const customTheme = extendTheme(overrides)\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Please note that unless you plan overriding all components, `}<inlineCode parentName=\"strong\">{`sm`}</inlineCode>{` to `}<inlineCode parentName=\"strong\">{`xl`}</inlineCode>{` are\nrequired.`}</strong></p>\n    <p>{`You may of course add for example `}<inlineCode parentName=\"p\">{`xxl`}</inlineCode>{` or other breakpoints in between -\n`}<inlineCode parentName=\"p\">{`createBreakpoints`}</inlineCode>{` will sort in ascending order. It is adviseable to not mix\ncss units.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`Reason:`}</strong>{` Previously, breakpoints on a theme had to be an array with your\nbreakpoints in ascending order which made it hard to reference which value was\ncorrelating to `}<inlineCode parentName=\"p\">{`md`}</inlineCode>{` etc. Also, you had to manually manipulate the array by\ndefining properties on it, which was often overlooked and not typesafe.`}</p>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"7-colormodescript-optional\"\n    }}>{`7. ColorModeScript (optional)`}</h3>\n    <p><strong parentName=\"p\">{`You can skip this if you are not already using the color mode feature.`}</strong></p>\n    <p>{`To keep color mode settings in sync across pages, add the `}<inlineCode parentName=\"p\">{`ColorModeScript`}</inlineCode>{`.`}</p>\n    <p>{`For exhaustive examples, please visit\n`}<a parentName=\"p\" {...{\n        \"href\": \"/docs/features/color-mode#add-colormodescript\"\n      }}><strong parentName=\"a\">{`Features > Color Mode # Add ColorModeScript`}</strong></a>{`.`}</p>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"component-updates\"\n    }}>{`Component Updates`}</h2>\n    <p>{`We've updated the API of some components to fix bugs, improve usability, types\nand accessibility.`}</p>\n    <h3 {...{\n      \"id\": \"accordion\"\n    }}>{`Accordion`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Update all imports of `}<inlineCode parentName=\"li\">{`AccordionHeader`}</inlineCode>{` to `}<inlineCode parentName=\"li\">{`AccordionButton`}</inlineCode>{`. This is to\nremove the notion that it is a header when it is actually a button.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`- import { AccordionHeader } from \"@chakra-ui/react\"\n+ import { AccordionButton } from \"@chakra-ui/react\"\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`WAI-ARIA guidelines require that accordion buttons be wrapped in the\nappropriate heading tag `}<inlineCode parentName=\"p\">{`h2-h6`}</inlineCode>{` based on the page heading flow.`}</p>\n    </blockquote>\n    <p>{`We think the name `}<inlineCode parentName=\"p\">{`AccordionHeader`}</inlineCode>{` might mislead users to think we handle this\nout of the box when we don't. Here's how to handle this:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live=false\",\n        \"live\": \"false\"\n      }}>{`<Accordion>\n  <AccordionItem>\n    <h3>\n      <AccordionButton>This is the button</AccordionButton>\n    </h3>\n    <AccordionPanel>This is the content</AccordionPanel>\n  </AccordionItem>\n</Accordion>\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`You can no longer use `}<inlineCode parentName=\"li\">{`AccordionItem`}</inlineCode>{` in isolation, it must be used within\n`}<inlineCode parentName=\"li\">{`Accordion`}</inlineCode>{`.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"aspectratiobox\"\n    }}>{`AspectRatioBox`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Change all imports of `}<inlineCode parentName=\"li\">{`AspectRatioBox`}</inlineCode>{` to `}<inlineCode parentName=\"li\">{`AspectRatio`}</inlineCode>{`.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`- import { AspectRatioBox } from \"@chakra-ui/react\"\n+ import  { AspectRatio } from \"@chakra-ui/react\"\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"breadcrumb\"\n    }}>{`Breadcrumb`}</h3>\n    <p>{`Removed support for the `}<inlineCode parentName=\"p\">{`addSeparator`}</inlineCode>{` prop.`}</p>\n    <h3 {...{\n      \"id\": \"button\"\n    }}>{`Button`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`We've unified the usage of all icon props to only accept a React element.\nUpdate all icon names used in `}<inlineCode parentName=\"li\">{`leftIcon`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`rightIcon`}</inlineCode>{` to the equivalent icon\nReact element.`}</li>\n    </ul>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Replacement logic: If `}<inlineCode parentName=\"p\">{`leftIcon`}</inlineCode>{` is `}<inlineCode parentName=\"p\">{`email`}</inlineCode>{`, then replace it with\n`}<inlineCode parentName=\"p\">{`<EmailIcon/>`}</inlineCode>{` from Chakra.`}</p>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`import { PhoneIcon } from \"@chakra-ui/icons\"\n\n- <Button leftIcon=\"phone\">Call</Button>\n+ <Button leftIcon={<PhoneIcon />}>Call</Button>\n`}</code></pre>\n    <p><strong parentName=\"p\">{`This reduces the effort needed to use custom icons, eliminates TypeScript\nerrors, and reduces unused icons bloating your app.`}</strong></p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Renamed `}<inlineCode parentName=\"p\">{`variantColor`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`colorScheme`}</inlineCode></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Removed negative side margins on `}<inlineCode parentName=\"p\">{`leftIcon`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`rightIcon`}</inlineCode>{` elements. We\nbelieve the user should handle these side margins.\n`}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/chakra-ui/chakra-ui/issues/1024\"\n          }}>{`#1024`}</a></p>\n      </li>\n    </ul>\n    <h3 {...{\n      \"id\": \"checkbox\"\n    }}>{`Checkbox`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Change `}<inlineCode parentName=\"li\">{`variantColor`}</inlineCode>{` to `}<inlineCode parentName=\"li\">{`colorScheme`}</inlineCode></li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`- <Checkbox variantColor=\"blue\">Option</Checkbox>\n+ <Checkbox colorScheme=\"blue\">Option</Checkbox>\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Deprecated the `}<inlineCode parentName=\"p\">{`isFullWidth`}</inlineCode>{` prop. `}<inlineCode parentName=\"p\">{`Checkbox`}</inlineCode>{` now takes up the width of its\nparent by default.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`To allow for better checkbox group layout, the `}<inlineCode parentName=\"p\">{`CheckboxGroup`}</inlineCode>{` component no\nlonger supports every style prop.`}</p>\n        <p parentName=\"li\">{`You can now only pass `}<inlineCode parentName=\"p\">{`size`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`variant`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`colorScheme`}</inlineCode>{` in addition to\n`}<inlineCode parentName=\"p\">{`CheckboxGroup`}</inlineCode>{`-specific props (`}<inlineCode parentName=\"p\">{`value`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`defaultValue`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`onChange`}</inlineCode>{`).`}</p>\n      </li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live=false\",\n        \"live\": \"false\"\n      }}>{`// before\n<CheckboxGroup isInline spacing=\"40px\" defaultValue={[\"one\", \"two\"]}>\n  <Checkbox value=\"one\">One</Checkbox>\n  <Checkbox value=\"two\">Two</Checkbox>\n  <Checkbox value=\"three\">Three</Checkbox>\n</CheckboxGroup>\n\n// after\n<CheckboxGroup defaultValue={[\"one\", \"two\"]}>\n  <Stack spacing=\"40px\">\n    <Checkbox value=\"one\">One</Checkbox>\n    <Checkbox value=\"two\">Two</Checkbox>\n    <Checkbox value=\"three\">Three</Checkbox>\n  </Stack>\n</CheckboxGroup>\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`We believe a checkbox group's layout should be managed by your design\nrequirements. The checkboxes can be grouped using `}<inlineCode parentName=\"p\">{`Stack`}</inlineCode>{`, placed in a grid\nusing `}<inlineCode parentName=\"p\">{`SimpleGrid`}</inlineCode>{` or made to wrap automatically using `}<inlineCode parentName=\"p\">{`Wrap`}</inlineCode>{`.`}</p>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"colormode\"\n    }}>{`ColorMode`}</h3>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Color mode now persists correctly when you refresh the page. All you need to\ndo is add `}<inlineCode parentName=\"p\">{`ColorModeScript`}</inlineCode>{` script as the first child of `}<inlineCode parentName=\"p\">{`body`}</inlineCode>{`.`}</p>\n        <p parentName=\"li\">{`Here's how to add it for Next.js:`}</p>\n      </li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live=false\",\n        \"live\": \"false\"\n      }}>{`// pages/_document.js\nimport { ColorModeScript } from \"@chakra-ui/react\"\n\nexport default class Document extends NextDocument {\n  static getInitialProps(ctx) {\n    return NextDocument.getInitialProps(ctx)\n  }\n\n  render() {\n    return (\n      <Html>\n        <Head />\n        <body>\n          {/* 👇 Here's the script */}\n          <ColorModeScript />\n          <Main />\n          <NextScript />\n        </body>\n      </Html>\n    )\n  }\n}\n`}</code></pre>\n    <p>{`Here's how to add it for Gatsby:`}</p>\n    <h2 {...{\n      \"id\": \"changes\"\n    }}>{`Changes`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`The Gatsby plugin has been renamed from `}<inlineCode parentName=\"li\">{`gatsby-plugin-chakra-ui`}</inlineCode>{` to\n`}<inlineCode parentName=\"li\">{`@chakra-ui/gatsby-plugin`}</inlineCode>{`. Please make sure to have updated this when\ninstalling Chakra UI in your next Gatsby project.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live=false\",\n        \"live\": \"false\"\n      }}>{`// gatsby-ssr.js\nexport const onRenderBody = ({ setPreBodyComponents }) => {\n  setPreBodyComponents([<ColorModeScript key=\"chakra-ui-no-flash\" />])\n}\n`}</code></pre>\n    <p>{`You can also install the\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://www.npmjs.com/package/@chakra-ui/gatsby-plugin\"\n      }}><inlineCode parentName=\"a\">{`@chakra-ui/gatsby-plugin`}</inlineCode></a>{`\npackage which automatically configures `}<inlineCode parentName=\"p\">{`ColorModeScript`}</inlineCode>{` along with\n`}<inlineCode parentName=\"p\">{`ChakraProvider`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"editable\"\n    }}>{`Editable`}</h3>\n    <p>{`The `}<inlineCode parentName=\"p\">{`onRequestEdit`}</inlineCode>{` prop has been renamed to `}<inlineCode parentName=\"p\">{`onEdit`}</inlineCode>{`. This applies to both the\nprop passed to `}<inlineCode parentName=\"p\">{`Editable`}</inlineCode>{` as well as the prop in its render props.`}</p>\n    <h3 {...{\n      \"id\": \"icons\"\n    }}>{`Icons`}</h3>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Basic interface icons provided by Chakra have moved to the `}<inlineCode parentName=\"p\">{`@chakra-ui/icons`}</inlineCode>{`\npackage. Replace all `}<inlineCode parentName=\"p\">{`<Icon name=\"...\" />`}</inlineCode>{` elements imported from\n`}<inlineCode parentName=\"p\">{`@chakra-ui/react`}</inlineCode>{` with equivalent React elements imported from\n`}<inlineCode parentName=\"p\">{`@chakra-ui/icons`}</inlineCode>{`.`}</p>\n        <blockquote parentName=\"li\">\n          <p parentName=\"blockquote\">{`Replacement logic: If `}<inlineCode parentName=\"p\">{`<Icon name=\"search\" />`}</inlineCode>{` is used, then replace it with\n`}<inlineCode parentName=\"p\">{`<SearchIcon />`}</inlineCode>{` from Chakra icons package.`}</p>\n        </blockquote>\n      </li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`- import { Icon } from \"@chakra-ui/react\"\n- <Icon name=\"search\" />\n\n+ import { SearchIcon } from \"@chakra-ui/icons\"\n+ <SearchIcon />\n`}</code></pre>\n    <p>{`Existing icons will appear as a question mark until refactored.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`We changed the way custom icons are created. Instead of adding custom icons to\n`}<inlineCode parentName=\"li\">{`theme`}</inlineCode>{` create your own icons using the `}<inlineCode parentName=\"li\">{`createIcon`}</inlineCode>{` utility:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live=false\",\n        \"live\": \"false\"\n      }}>{`import { createIcon } from \"@chakra-ui/react\"\n\nexport const UpDownIcon = createIcon({\n  displayName: \"UpDownIcon\",\n  viewBox: \"-1 -1 9 11\",\n  d:\n    \"M 3.5 0L 3.98809 -0.569442L 3.5 -0.987808L 3.01191 -0.569442L 3.5 0ZM 3.5 9L 3.01191 9.56944L 3.5 9.98781L 3.98809 9.56944L 3.5 9ZM 0.488094 3.56944L 3.98809 0.569442L 3.01191 -0.569442L -0.488094 2.43056L 0.488094 3.56944ZM 3.01191 0.569442L 6.51191 3.56944L 7.48809 2.43056L 3.98809 -0.569442L 3.01191 0.569442ZM -0.488094 6.56944L 3.01191 9.56944L 3.98809 8.43056L 0.488094 5.43056L -0.488094 6.56944ZM 3.98809 9.56944L 7.48809 6.56944L 6.51191 5.43056L 3.01191 8.43056L 3.98809 9.56944Z\",\n})\n`}</code></pre>\n    <p>{`As a convenience you can also import `}<inlineCode parentName=\"p\">{`createIcon`}</inlineCode>{` from the `}<inlineCode parentName=\"p\">{`icons`}</inlineCode>{` package along\nwith other icons:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live=false\",\n        \"live\": \"false\"\n      }}>{`import { createIcon, MoonIcon, SunIcon } from \"@chakra-ui/icons\"\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"icon-button\"\n    }}>{`Icon Button`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`We've unified the usage of all icon props to only accept a React element.\nUpdate all icon names used in `}<inlineCode parentName=\"li\">{`icon`}</inlineCode>{` to the equivalent icon React element.`}</li>\n    </ul>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Replacement logic: If `}<inlineCode parentName=\"p\">{`icon`}</inlineCode>{` is `}<inlineCode parentName=\"p\">{`email`}</inlineCode>{`, then replace it with `}<inlineCode parentName=\"p\">{`<EmailIcon/>`}</inlineCode>{`\nfrom Chakra.`}</p>\n    </blockquote>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`import { PhoneIcon } from \"@chakra-ui/react\"\n\n- <IconButton icon=\"phone\">Call</IconButton>\n+ <IconButton icon={<PhoneIcon />}>Call</IconButton>\n`}</code></pre>\n    <p><strong parentName=\"p\">{`This reduces the effort needed to use custom icons, eliminates TypeScript\nerrors, and reduces unused icons bloating your app.`}</strong></p>\n    <ul>\n      <li parentName=\"ul\">{`Renamed `}<inlineCode parentName=\"li\">{`variantColor`}</inlineCode>{` to `}<inlineCode parentName=\"li\">{`colorScheme`}</inlineCode>{`.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"skeleton\"\n    }}>{`Skeleton`}</h3>\n    <p>{`Renamed `}<inlineCode parentName=\"p\">{`colorStart`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`colorEnd`}</inlineCode>{` props to `}<inlineCode parentName=\"p\">{`startColor`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`endColor`}</inlineCode>{`\nrespectively.`}</p>\n    <h3 {...{\n      \"id\": \"image\"\n    }}>{`Image`}</h3>\n    <p>{`Resolved SSR issue with Next.js. If you still run into issues, we recommend\nusing the `}<inlineCode parentName=\"p\">{`Img`}</inlineCode>{` component which is a regular `}<inlineCode parentName=\"p\">{`img`}</inlineCode>{` tag with support for Chakra\nprops.`}</p>\n    <h3 {...{\n      \"id\": \"input\"\n    }}>{`Input`}</h3>\n    <p>{`When using `}<inlineCode parentName=\"p\">{`InputAddon`}</inlineCode>{`, you no longer need to pass border radius properties to\nthe `}<inlineCode parentName=\"p\">{`Input`}</inlineCode>{`. `}<inlineCode parentName=\"p\">{`InputGroup`}</inlineCode>{` will intelligently detect the addon and apply the\nnecessary border to the input.`}</p>\n    <h3 {...{\n      \"id\": \"link\"\n    }}>{`Link`}</h3>\n    <p>{`Due to accessibility reasons, we've deprecated the `}<inlineCode parentName=\"p\">{`isDisabled`}</inlineCode>{` prop for `}<inlineCode parentName=\"p\">{`Link`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"list\"\n    }}>{`List`}</h3>\n    <p>{`Renamed `}<inlineCode parentName=\"p\">{`stylePos`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`stylePosition`}</inlineCode></p>\n    <h3 {...{\n      \"id\": \"listicon\"\n    }}>{`ListIcon`}</h3>\n    <p>{`We deprecated the `}<inlineCode parentName=\"p\">{`icon`}</inlineCode>{` prop. To change the icon rendered, kindly use the `}<inlineCode parentName=\"p\">{`as`}</inlineCode>{` prop instead.`}</p>\n    <h3 {...{\n      \"id\": \"stack\"\n    }}>{`Stack`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`To reduce the API surface area, we've deprecated the `}<inlineCode parentName=\"li\">{`isReversed`}</inlineCode>{` props in\nfavor of the `}<inlineCode parentName=\"li\">{`direction`}</inlineCode>{` prop.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`- <Stack isReversed>\n+ <Stack direction=\"row-reverse\">\n    <Box />\n    <Box />\n  </Stack>\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Added support for responsive `}<inlineCode parentName=\"li\">{`direction`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`spacing`}</inlineCode>{` props.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live=false\",\n        \"live\": \"false\"\n      }}>{`<Stack spacing={[\"16px\", \"32px\"]} direction={[\"column\", \"row\"]}>\n  <Box />\n  <Box />\n</Stack>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"menu\"\n    }}>{`Menu`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`All popper related props that used to be passed to `}<inlineCode parentName=\"li\">{`MenuList`}</inlineCode>{` component,\nshould now be passed to `}<inlineCode parentName=\"li\">{`Menu`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`placement`}</inlineCode>{` prop has moved from `}<inlineCode parentName=\"li\">{`MenuList`}</inlineCode>{` to `}<inlineCode parentName=\"li\">{`Menu`}</inlineCode>{`.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"modal\"\n    }}>{`Modal`}</h3>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Removed `}<inlineCode parentName=\"p\">{`addAriaLabels`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`formatIds`}</inlineCode>{` props in favor of passing a top-level\n`}<inlineCode parentName=\"p\">{`id`}</inlineCode>{` prop to the modal.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Removed `}<inlineCode parentName=\"p\">{`preserveScrollBarGap`}</inlineCode>{` prop. We preserve scroll bar gap by default to\nprevent any layout shift.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Only pass `}<inlineCode parentName=\"p\">{`size`}</inlineCode>{` values defined in the components theme. Hard-coded values\nwill be ignored. Update the styles in `}<inlineCode parentName=\"p\">{`theme.components.Modal`}</inlineCode>{` to reflect your\ncustom values.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`You can now disable focus trap by passing `}<inlineCode parentName=\"p\">{`trapFocus={false}`}</inlineCode>{`.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Modal comes with preset transitions to make it easy for you. You can remove\nany existing `}<inlineCode parentName=\"p\">{`Scale`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`ScaleFade`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`SlideFade`}</inlineCode>{` components.`}</p>\n      </li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live=false\",\n        \"live\": \"false\"\n      }}>{`// before\n<SlideIn in={isOpen}>\n  {(styles) => (\n    <Modal onClose={onClose} isOpen>\n      <ModalOverlay opacity={styles.opacity} />\n      <ModalContent pb={5} {...styles}>\n        <ModalHeader>Login now</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <Lorem count={2} />\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  )}\n</SlideIn>\n\n// after\n<Modal motionPreset=\"slideInBottom\" onClose={onClose} isOpen={isOpen}>\n  <ModalOverlay />\n  <ModalContent pb={5}>\n    <ModalHeader>Login now</ModalHeader>\n    <ModalCloseButton />\n    <ModalBody>\n      <Lorem count={2} />\n    </ModalBody>\n  </ModalContent>\n</Modal>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"progress\"\n    }}>{`Progress`}</h3>\n    <p>{`Changed `}<inlineCode parentName=\"p\">{`color`}</inlineCode>{` prop to `}<inlineCode parentName=\"p\">{`colorScheme`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`- <Progress color=\"blue\"/>\n+ <Progress colorScheme=\"blue\"/>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"circularprogress\"\n    }}>{`CircularProgress`}</h3>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`trackColor`}</inlineCode>{` prop now takes a specific theme color or a valid `}<inlineCode parentName=\"li\">{`css`}</inlineCode>{` color.`}</li>\n      <li parentName=\"ul\">{`Changed the `}<inlineCode parentName=\"li\">{`thickness`}</inlineCode>{` prop to point to an actual thickness value in `}<inlineCode parentName=\"li\">{`px`}</inlineCode>{`\n(e.g. `}<inlineCode parentName=\"li\">{`thickness={4}`}</inlineCode>{`)`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`- <CircularProgress value={59} size=\"100px\" thickness={0.1} />\n+ <CircularProgress value={59} size=\"100px\" thickness={10} />\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"radio\"\n    }}>{`Radio`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Changed `}<inlineCode parentName=\"li\">{`variantColor`}</inlineCode>{` prop to `}<inlineCode parentName=\"li\">{`colorScheme`}</inlineCode>{`.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`- <Radio variantColor=\"blue\">Option</Radio>\n+ <Radio colorScheme=\"blue\">Option</Radio>\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Deprecated the `}<inlineCode parentName=\"p\">{`isFullWidth`}</inlineCode>{` prop. The `}<inlineCode parentName=\"p\">{`Radio`}</inlineCode>{` takes up the width of its\nparent by default.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Deprecated the `}<inlineCode parentName=\"p\">{`RadioButton`}</inlineCode>{` component. Use the `}<inlineCode parentName=\"p\">{`useRadio`}</inlineCode>{` hook to create\ncustom radio buttons. Learn more about\n`}<a parentName=\"p\" {...{\n            \"href\": \"/docs/form/radio#custom-radio-buttons\"\n          }}>{`creating custom radio buttons`}</a>{`.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`The `}<inlineCode parentName=\"p\">{`useRadio`}</inlineCode>{` hook is exported with state and focus management logic for use\nin creating tailor-made radio component for your application`}</p>\n      </li>\n    </ul>\n    <h3 {...{\n      \"id\": \"radiogroup\"\n    }}>{`RadioGroup`}</h3>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Deprecated the `}<inlineCode parentName=\"p\">{`isFullWidth`}</inlineCode>{` prop. The `}<inlineCode parentName=\"p\">{`RadioGroup`}</inlineCode>{` takes up the width of the\nparent by default.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Deprecated the `}<inlineCode parentName=\"p\">{`RadioButtonGroup`}</inlineCode>{` component. Use the `}<inlineCode parentName=\"p\">{`useRadioGroup`}</inlineCode>{` hook to\ncontrol a group of custom radio buttons. Learn more about\n`}<a parentName=\"p\" {...{\n            \"href\": \"/docs/form/radio#custom-radio-buttons\"\n          }}>{`creating custom radio buttons`}</a>{`.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`To allow for better Radio group layout, the `}<inlineCode parentName=\"p\">{`RadioGroup`}</inlineCode>{` component no longer\nsupports every style prop. You can only pass `}<inlineCode parentName=\"p\">{`size`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`variant`}</inlineCode>{`, and\n`}<inlineCode parentName=\"p\">{`colorScheme`}</inlineCode>{` in addition to `}<inlineCode parentName=\"p\">{`RadioGroup`}</inlineCode>{` props (`}<inlineCode parentName=\"p\">{`value`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`defaultValue`}</inlineCode>{`, and\n`}<inlineCode parentName=\"p\">{`onChange`}</inlineCode>{`).`}</p>\n      </li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live=false\",\n        \"live\": \"false\"\n      }}>{`// before\n<RadioGroup isInline defaultValue=\"one\">\n  <Radio value=\"one\">One</Radio>\n  <Radio value=\"two\">Two</Radio>\n  <Radio value=\"three\">Three</Radio>\n</RadioGroup>\n\n// after\n<RadioGroup defaultValue=\"one\">\n  <Stack direction=\"row\">\n    <Radio value=\"one\">One</Radio>\n    <Radio value=\"two\">Two</Radio>\n    <Radio value=\"three\">Three</Radio>\n  </Stack>\n</RadioGroup>\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`onChange`}</inlineCode>{` callback now returns the selected `}<inlineCode parentName=\"li\">{`value`}</inlineCode>{` not the `}<inlineCode parentName=\"li\">{`event`}</inlineCode>{`.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live=false\",\n        \"live\": \"false\"\n      }}>{`const [value, setValue] = React.useState(\"one\")\n\n// before\n<RadioGroup value={value} onChange={e => setValue(e.target.value)}>\n  <Radio value=\"one\">One</Radio>\n  <Radio value=\"two\">Two</Radio>\n  <Radio value=\"three\">Three</Radio>\n</RadioGroup>\n\n// after\n<RadioGroup value={value} onChange={val => setValue(val)}>\n  <Stack direction=\"row\">\n    <Radio value=\"one\">One</Radio>\n    <Radio value=\"two\">Two</Radio>\n    <Radio value=\"three\">Three</Radio>\n  </Stack>\n</RadioGroup>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"slider\"\n    }}>{`Slider`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Update JSX structure: Wrap `}<inlineCode parentName=\"li\">{`SliderFilledTrack`}</inlineCode>{` with `}<inlineCode parentName=\"li\">{`SliderTrack`}</inlineCode>{`.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live=false\",\n        \"live\": \"false\"\n      }}>{`// before\n<Slider defaultValue={30}>\n  <SliderTrack />\n  <SliderFilledTrack />\n  <SliderThumb />\n</Slider>\n\n// after\n<Slider defaultValue={30}>\n  <SliderTrack>\n    <SliderFilledTrack />\n  </SliderTrack>\n  <SliderThumb />\n</Slider>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"switch\"\n    }}>{`Switch`}</h3>\n    <p>{`Rename the `}<inlineCode parentName=\"p\">{`color`}</inlineCode>{` prop to `}<inlineCode parentName=\"p\">{`colorScheme`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`-  <Switch color=\"blue\"/>\n+  <Switch colorScheme=\"blue\"/>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"tabs\"\n    }}>{`Tabs`}</h3>\n    <p>{`Change `}<inlineCode parentName=\"p\">{`variantColor`}</inlineCode>{` prop to `}<inlineCode parentName=\"p\">{`colorScheme`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"tags\"\n    }}>{`Tags`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Change `}<inlineCode parentName=\"li\">{`variantColor`}</inlineCode>{` to `}<inlineCode parentName=\"li\">{`colorScheme`}</inlineCode>{`.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`- <Tag variantColor=\"blue\"/>\n+ <Tag colorScheme=\"blue\"/>\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Added support for `}<inlineCode parentName=\"li\">{`isDisabled`}</inlineCode>{` prop on the `}<inlineCode parentName=\"li\">{`TagCloseButton`}</inlineCode>{` component.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live=false\",\n        \"live\": \"false\"\n      }}>{`<Tag variant=\"solid\" size=\"sm\" colorScheme=\"cyan\">\n  <TagLabel>Tab Label</TagLabel>\n  <TagCloseButton isDisabled />\n</Tag>\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`Default size was changed from `}<inlineCode parentName=\"li\">{`lg`}</inlineCode>{` to `}<inlineCode parentName=\"li\">{`md`}</inlineCode>{`.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"toast\"\n    }}>{`Toast`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Removed `}<inlineCode parentName=\"li\">{`react-spring`}</inlineCode>{` dependency in favor of `}<inlineCode parentName=\"li\">{`framer-motion`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`Added support for duplicate toast prevention using `}<inlineCode parentName=\"li\">{`toast.isActive`}</inlineCode>{` method.`}</li>\n      <li parentName=\"ul\">{`Added support to programmatically close one or all toasts using `}<inlineCode parentName=\"li\">{`toast.close`}</inlineCode>{`\nor `}<inlineCode parentName=\"li\">{`toast.closeAll`}</inlineCode>{` methods.`}</li>\n      <li parentName=\"ul\">{`Added support to programmatically update a toast using `}<inlineCode parentName=\"li\">{`toast.update`}</inlineCode>{` method.`}</li>\n      <li parentName=\"ul\">{`Added support for `}<inlineCode parentName=\"li\">{`onCloseComplete`}</inlineCode>{` prop, which is a callback function that is\ninvoked when the toast closes.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"wrap-for-rc-versions\"\n    }}>{`Wrap (for `}<inlineCode parentName=\"h3\">{`rc`}</inlineCode>{` versions)`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Children of `}<inlineCode parentName=\"li\">{`Wrap`}</inlineCode>{` must now be `}<em parentName=\"li\">{`wrapped`}</em>{` in `}<inlineCode parentName=\"li\">{`WrapItem`}</inlineCode>{`. This makes it easy to\ncustomize the `}<inlineCode parentName=\"li\">{`WrapItem`}</inlineCode>{` using the `}<inlineCode parentName=\"li\">{`sx`}</inlineCode>{` prop.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live=false\",\n        \"live\": \"false\"\n      }}>{`// before\n<Wrap spacing=\"30px\">\n  <Center w=\"180px\" h=\"80px\" bg=\"red.200\">Box 1</Center>\n  <Center w=\"180px\" h=\"80px\" bg=\"green.200\">Box 2</Center>\n  <Center w=\"180px\" h=\"80px\" bg=\"tomato\">Box 3</Center>\n</Wrap>\n\n// after\n<Wrap spacing=\"30px\">\n  <WrapItem>\n    <Center w=\"180px\" h=\"80px\" bg=\"red.200\">Box 1</Center>\n  </WrapItem>\n  <WrapItem>\n    <Center w=\"180px\" h=\"80px\" bg=\"green.200\">Box 2</Center>\n  </WrapItem>\n  <WrapItem>\n    <Center w=\"180px\" h=\"80px\" bg=\"tomato\">Box 3</Center>\n  </WrapItem>\n</Wrap>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"transition-components\"\n    }}>{`Transition Components`}</h3>\n    <p>{`All transition components like `}<inlineCode parentName=\"p\">{`Collapse`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`Fade`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`SlideFade`}</inlineCode>{`, etc. use the\n`}<inlineCode parentName=\"p\">{`in`}</inlineCode>{` prop to trigger its transition/animation, instead of `}<inlineCode parentName=\"p\">{`isOpen`}</inlineCode>{`. Change the\n`}<inlineCode parentName=\"p\">{`isOpen`}</inlineCode>{` prop to `}<inlineCode parentName=\"p\">{`in`}</inlineCode></p>\n    <h3 {...{\n      \"id\": \"css-reset\"\n    }}>{`CSS Reset`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Removed the `}<inlineCode parentName=\"li\">{`config`}</inlineCode>{` prop, in favor of adding global styles to\n`}<inlineCode parentName=\"li\">{`theme.styles.global`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`If you want to remove focus for non-keyboard interactions, install the\n`}<inlineCode parentName=\"li\">{`focus-visible`}</inlineCode>{` package.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`yarn add focus-visible\n# or\nnpm install focus-visible\n\n\n# at the root of your application\nimport \"focus-visible/dist/focus-visible\"\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"hooks\"\n    }}>{`Hooks`}</h3>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`useDisclosure`}</inlineCode>{` now accepts `}<inlineCode parentName=\"li\">{`object`}</inlineCode>{` instead of `}<inlineCode parentName=\"li\">{`boolean`}</inlineCode>{` as initial values.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`- const { isOpen, onToggle } = useDisclosure(true);\n+ const { isOpen, onToggle } = useDisclosure({defaultIsOpen: true});\n`}</code></pre>\n    <p><strong parentName=\"p\">{`That's it! Welcome to Chakra UI v1 🥳.`}</strong></p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`If you still experience issues after migrating, feel free to create an issue\nor join our Discord chat here: `}<a parentName=\"p\" {...{\n          \"href\": \"https://discord.gg/dQHfcWF\"\n        }}>{`https://discord.gg/dQHfcWF`}</a></p>\n    </blockquote>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"]},"metadata":{},"sourceType":"module"}