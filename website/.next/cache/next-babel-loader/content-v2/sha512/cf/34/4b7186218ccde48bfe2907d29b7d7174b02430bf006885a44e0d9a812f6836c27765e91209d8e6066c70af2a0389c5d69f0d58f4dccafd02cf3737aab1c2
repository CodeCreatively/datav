{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/sunfei/Downloads/website/pages/guides/integrations/with-cra.mdx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport Layout from '/Users/sunfei/Downloads/website/layouts/index';\nexport var frontMatter = {\n  title: 'Using Chakra UI\\'s official create-react-app templates',\n  description: 'A guide for creating create-react-app projects from the official Chakra UI templates',\n  tags: ['create-react-app'],\n  author: {\n    login: 'with-heart',\n    avatarUrl: 'https://avatars.githubusercontent.com/u/1954752?v=4',\n    githubUrl: 'https://github.com/with-heart',\n    websiteUrl: 'http://chanchan.io',\n    bio: 'Chakra UI core team member. Frontend engineer at VNDLY.',\n    name: 'Mark Chandler',\n    twitterUsername: 'grow_love'\n  },\n  slug: '/guides/integrations/with-cra',\n  lastEdited: undefined,\n  editUrl: 'https://github.com/chakra-ui/chakra-ui/edit/develop/website/pages/guides/integrations/with-cra.mdx',\n  __resourcePath: 'guides/integrations/with-cra.mdx',\n  __scans: {},\n  layout: 'index'\n};\nvar layoutProps = {\n  frontMatter: frontMatter\n};\nvar MDXLayout = Layout;\nexport default function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _objectSpread(_objectSpread(_objectSpread({}, layoutProps), props), {}, {\n    components: components,\n    mdxType: \"MDXLayout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 10\n    }\n  }), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, mdx(\"strong\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 8\n    }\n  }, \"Create React App\"), \" allows users to create a project using a template, which\\ndetermines the files and dependencies included with the generated project.\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, \"We provide two official \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 36\n    }\n  }, \"create-react-app\"), \" templates for Chakra UI: one for\\nJavaScript and the other for TypeScript.\"), mdx(\"h2\", _objectSpread(_objectSpread({}, {\n    \"id\": \"usage\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }), \"Usage\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, \"In order to generate a \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 35\n    }\n  }, \"create-react-app\"), \" project from a template, you pass the\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 3\n    }\n  }, \"--template\"), \" flag to the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 74\n    }\n  }, \"create-react-app\"), \" command.\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 10\n    }\n  }), \"# using npm\\nnpx create-react-app my-app --template [template-name]\\n\\n# using yarn\\nyarn create react-app my-app --template [template-name]\\n\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, \"The template name for the JavaScript project is \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 60\n    }\n  }, \"@chakra-ui\"), \". The template name\\nfor the TypeScript project is \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 33\n    }\n  }, \"@chakra-ui/typescript\"), \".\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _objectSpread(_objectSpread({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 10\n    }\n  }), \"# JavaScript using npm\\nnpx create-react-app my-app --template @chakra-ui\\n# JavaScript using yarn\\nyarn create react-app my-app --template @chakra-ui\\n\\n# TypeScript using npm\\nnpx create-react-app my-app --template @chakra-ui/typescript\\n# TypeScript using yarn\\nyarn create react-app my-app --template @chakra-ui/typescript\\n\")), mdx(\"h2\", _objectSpread(_objectSpread({}, {\n    \"id\": \"whats-included\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }), \"What's included\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, \"The official templates are similar to the base \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 59\n    }\n  }, \"create-react-app\"), \" template, but\\nthey come with Chakra UI dependencies pre-installed and include Chakra-specific\\nfunctionality.\"), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"pre-install-dependencies\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }), \"Pre-install dependencies\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 27\n    }\n  }, \"@chakra-ui/react\")), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 27\n    }\n  }, \"@chakra-ui/theme\")), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 27\n    }\n  }, \"@chakra-ui/theme-tools\")), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 27\n    }\n  }, \"react-icons\"))), mdx(\"h3\", _objectSpread(_objectSpread({}, {\n    \"id\": \"chakra-specific-functionality\"\n  }), {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }), \"Chakra-specific functionality\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 27\n    }\n  }, \"ChakraProvider\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 95\n    }\n  }, \"CSSReset\"), \" already connected to the default \", mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 186\n    }\n  }, \"theme\")), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 27\n    }\n  }, \"ColorModeSwitcher\"), \" component, using Chakra's color mode management\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, \"Animated Chakra UI logo instead of the React logo\")));\n}\n_c = MDXContent;\n;\nMDXContent.isMDXComponent = true;\n\nvar _c;\n\n$RefreshReg$(_c, \"MDXContent\");","map":{"version":3,"sources":["/Users/sunfei/Downloads/website/pages/guides/integrations/with-cra.mdx"],"names":["React","mdx","Layout","frontMatter","title","description","tags","author","login","avatarUrl","githubUrl","websiteUrl","bio","name","twitterUsername","slug","lastEdited","undefined","editUrl","__resourcePath","__scans","layout","layoutProps","MDXLayout","MDXContent","components","props","isMDXComponent"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport Layout, {  } from '/Users/sunfei/Downloads/website/layouts/index'\nexport const frontMatter = {\n  title: 'Using Chakra UI\\'s official create-react-app templates',\n  description: 'A guide for creating create-react-app projects from the official Chakra UI templates',\n  tags: ['create-react-app'],\n  author: {\n    login: 'with-heart',\n    avatarUrl: 'https://avatars.githubusercontent.com/u/1954752?v=4',\n    githubUrl: 'https://github.com/with-heart',\n    websiteUrl: 'http://chanchan.io',\n    bio: 'Chakra UI core team member. Frontend engineer at VNDLY.',\n    name: 'Mark Chandler',\n    twitterUsername: 'grow_love'\n  },\n  slug: '/guides/integrations/with-cra',\n  lastEdited: undefined,\n  editUrl: 'https://github.com/chakra-ui/chakra-ui/edit/develop/website/pages/guides/integrations/with-cra.mdx',\n  __resourcePath: 'guides/integrations/with-cra.mdx',\n  __scans: {},\n  layout: 'index'\n};\n\nconst layoutProps = {\n  frontMatter\n};\nconst MDXLayout = Layout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <p><strong parentName=\"p\">{`Create React App`}</strong>{` allows users to create a project using a template, which\ndetermines the files and dependencies included with the generated project.`}</p>\n    <p>{`We provide two official `}<inlineCode parentName=\"p\">{`create-react-app`}</inlineCode>{` templates for Chakra UI: one for\nJavaScript and the other for TypeScript.`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p>{`In order to generate a `}<inlineCode parentName=\"p\">{`create-react-app`}</inlineCode>{` project from a template, you pass the\n`}<inlineCode parentName=\"p\">{`--template`}</inlineCode>{` flag to the `}<inlineCode parentName=\"p\">{`create-react-app`}</inlineCode>{` command.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`# using npm\nnpx create-react-app my-app --template [template-name]\n\n# using yarn\nyarn create react-app my-app --template [template-name]\n`}</code></pre>\n    <p>{`The template name for the JavaScript project is `}<inlineCode parentName=\"p\">{`@chakra-ui`}</inlineCode>{`. The template name\nfor the TypeScript project is `}<inlineCode parentName=\"p\">{`@chakra-ui/typescript`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`# JavaScript using npm\nnpx create-react-app my-app --template @chakra-ui\n# JavaScript using yarn\nyarn create react-app my-app --template @chakra-ui\n\n# TypeScript using npm\nnpx create-react-app my-app --template @chakra-ui/typescript\n# TypeScript using yarn\nyarn create react-app my-app --template @chakra-ui/typescript\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"whats-included\"\n    }}>{`What's included`}</h2>\n    <p>{`The official templates are similar to the base `}<inlineCode parentName=\"p\">{`create-react-app`}</inlineCode>{` template, but\nthey come with Chakra UI dependencies pre-installed and include Chakra-specific\nfunctionality.`}</p>\n    <h3 {...{\n      \"id\": \"pre-install-dependencies\"\n    }}>{`Pre-install dependencies`}</h3>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`@chakra-ui/react`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`@chakra-ui/theme`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`@chakra-ui/theme-tools`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`react-icons`}</inlineCode></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"chakra-specific-functionality\"\n    }}>{`Chakra-specific functionality`}</h3>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`ChakraProvider`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`CSSReset`}</inlineCode>{` already connected to the default `}<inlineCode parentName=\"li\">{`theme`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`ColorModeSwitcher`}</inlineCode>{` component, using Chakra's color mode management`}</li>\n      <li parentName=\"ul\">{`Animated Chakra UI logo instead of the React logo`}</li>\n    </ul>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"]},"metadata":{},"sourceType":"module"}