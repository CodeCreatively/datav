{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sunfei/Downloads/website/layouts/mdx.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as chakraComponents from \"@chakra-ui/react\";\nimport { MDXProvider } from \"@mdx-js/react\";\nimport MDXComponents from \"components/mdx-components\";\nimport PageContainer from \"components/page-container\";\nimport Pagination from \"components/pagination\";\nimport Sidebar from \"components/sidebar/sidebar\";\nimport docsSidebar from \"configs/docs-sidebar.json\";\nimport guidesSidebar from \"configs/guides-sidebar.json\";\nimport blogSidebar from \"configs/blog-sidebar.json\";\nimport * as React from \"react\";\nimport { findRouteByPath, removeFromLast } from \"utils/find-route-by-path\";\nimport { getRouteContext } from \"utils/get-route-context\";\nexport function getRoutes(slug) {\n  var _Object$entries$find, _sidebar$routes;\n\n  // for home page, use docs sidebat\n  if (slug === \"/\") return docsSidebar.routes;\n  const configMap = {\n    \"/resources\": docsSidebar,\n    \"/guides\": guidesSidebar,\n    \"/blog\": blogSidebar,\n    \"/docs\": docsSidebar\n  };\n  const [_path, sidebar] = (_Object$entries$find = Object.entries(configMap).find(([path, _sidebar]) => slug.startsWith(path))) !== null && _Object$entries$find !== void 0 ? _Object$entries$find : [];\n  return (_sidebar$routes = sidebar === null || sidebar === void 0 ? void 0 : sidebar.routes) !== null && _sidebar$routes !== void 0 ? _sidebar$routes : [];\n}\n\nfunction MDXLayout({\n  frontmatter,\n  children\n}) {\n  const routes = getRoutes(frontmatter.slug);\n  const route = findRouteByPath(removeFromLast(frontmatter.slug, \"#\"), routes);\n  const routeContext = getRouteContext(route, routes);\n  return /*#__PURE__*/_jsxDEV(MDXProvider, {\n    components: _objectSpread(_objectSpread({}, chakraComponents), MDXComponents),\n    children: /*#__PURE__*/_jsxDEV(PageContainer, {\n      frontmatter: frontmatter,\n      sidebar: /*#__PURE__*/_jsxDEV(Sidebar, {\n        routes: routes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 18\n      }, this),\n      pagination: /*#__PURE__*/_jsxDEV(Pagination, {\n        next: routeContext.nextRoute,\n        previous: routeContext.prevRoute\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this),\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\nexport default MDXLayout;","map":{"version":3,"sources":["/Users/sunfei/Downloads/website/layouts/mdx.tsx"],"names":["chakraComponents","MDXProvider","MDXComponents","PageContainer","Pagination","Sidebar","docsSidebar","guidesSidebar","blogSidebar","React","findRouteByPath","removeFromLast","getRouteContext","getRoutes","slug","routes","configMap","_path","sidebar","Object","entries","find","path","_sidebar","startsWith","MDXLayout","frontmatter","children","route","routeContext","nextRoute","prevRoute"],"mappings":";;;;;;;;;AAAA,OAAO,KAAKA,gBAAZ,MAAkC,kBAAlC;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,eAAT,EAA0BC,cAA1B,QAAgD,0BAAhD;AACA,SAASC,eAAT,QAAgC,yBAAhC;AAEA,OAAO,SAASC,SAAT,CAAmBC,IAAnB,EAAiC;AAAA;;AACtC;AACA,MAAIA,IAAI,KAAK,GAAb,EAAkB,OAAOR,WAAW,CAACS,MAAnB;AAElB,QAAMC,SAAS,GAAG;AAChB,kBAAcV,WADE;AAEhB,eAAWC,aAFK;AAGhB,aAASC,WAHO;AAIhB,aAASF;AAJO,GAAlB;AAOA,QAAM,CAACW,KAAD,EAAQC,OAAR,4BACJC,MAAM,CAACC,OAAP,CAAeJ,SAAf,EAA0BK,IAA1B,CAA+B,CAAC,CAACC,IAAD,EAAOC,QAAP,CAAD,KAC7BT,IAAI,CAACU,UAAL,CAAgBF,IAAhB,CADF,CADI,uEAGC,EAHP;AAKA,4BAAOJ,OAAP,aAAOA,OAAP,uBAAOA,OAAO,CAAEH,MAAhB,6DAA0B,EAA1B;AACD;;AAED,SAASU,SAAT,CAAmB;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAnB,EAA8C;AAC5C,QAAMZ,MAAM,GAAGF,SAAS,CAACa,WAAW,CAACZ,IAAb,CAAxB;AAEA,QAAMc,KAAK,GAAGlB,eAAe,CAACC,cAAc,CAACe,WAAW,CAACZ,IAAb,EAAmB,GAAnB,CAAf,EAAwCC,MAAxC,CAA7B;AACA,QAAMc,YAAY,GAAGjB,eAAe,CAACgB,KAAD,EAAQb,MAAR,CAApC;AAEA,sBACE,QAAC,WAAD;AAAa,IAAA,UAAU,kCAAOf,gBAAP,GAA4BE,aAA5B,CAAvB;AAAA,2BACE,QAAC,aAAD;AACE,MAAA,WAAW,EAAEwB,WADf;AAEE,MAAA,OAAO,eAAE,QAAC,OAAD;AAAS,QAAA,MAAM,EAAEX;AAAjB;AAAA;AAAA;AAAA;AAAA,cAFX;AAGE,MAAA,UAAU,eACR,QAAC,UAAD;AACE,QAAA,IAAI,EAAEc,YAAY,CAACC,SADrB;AAEE,QAAA,QAAQ,EAAED,YAAY,CAACE;AAFzB;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA,gBAUGJ;AAVH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;AAED,eAAeF,SAAf","sourcesContent":["import * as chakraComponents from \"@chakra-ui/react\"\nimport { MDXProvider } from \"@mdx-js/react\"\nimport MDXComponents from \"components/mdx-components\"\nimport PageContainer from \"components/page-container\"\nimport Pagination from \"components/pagination\"\nimport Sidebar from \"components/sidebar/sidebar\"\nimport docsSidebar from \"configs/docs-sidebar.json\"\nimport guidesSidebar from \"configs/guides-sidebar.json\"\nimport blogSidebar from \"configs/blog-sidebar.json\"\nimport * as React from \"react\"\nimport { findRouteByPath, removeFromLast } from \"utils/find-route-by-path\"\nimport { getRouteContext } from \"utils/get-route-context\"\n\nexport function getRoutes(slug: string) {\n  // for home page, use docs sidebat\n  if (slug === \"/\") return docsSidebar.routes\n\n  const configMap = {\n    \"/resources\": docsSidebar,\n    \"/guides\": guidesSidebar,\n    \"/blog\": blogSidebar,\n    \"/docs\": docsSidebar,\n  }\n\n  const [_path, sidebar] =\n    Object.entries(configMap).find(([path, _sidebar]) =>\n      slug.startsWith(path),\n    ) ?? []\n\n  return sidebar?.routes ?? []\n}\n\nfunction MDXLayout({ frontmatter, children }) {\n  const routes = getRoutes(frontmatter.slug)\n\n  const route = findRouteByPath(removeFromLast(frontmatter.slug, \"#\"), routes)\n  const routeContext = getRouteContext(route, routes)\n\n  return (\n    <MDXProvider components={{ ...chakraComponents, ...MDXComponents }}>\n      <PageContainer\n        frontmatter={frontmatter}\n        sidebar={<Sidebar routes={routes} />}\n        pagination={\n          <Pagination\n            next={routeContext.nextRoute}\n            previous={routeContext.prevRoute}\n          />\n        }\n      >\n        {children}\n      </PageContainer>\n    </MDXProvider>\n  )\n}\n\nexport default MDXLayout\n"]},"metadata":{},"sourceType":"module"}